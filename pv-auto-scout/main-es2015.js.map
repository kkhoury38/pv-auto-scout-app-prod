{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./node_modules/moment/locale sync ^\\.\\/.*$","./src/app/app.component.html","./src/app/asset-groups/asset-groups.component.html","./src/app/assets/assets.component.html","./src/app/auth/auth.component.html","./src/app/common/components/buttons/add-new/add-new.component.html","./src/app/common/components/charts/pie-chart/pie-chart.component.html","./src/app/common/components/drone-map/drone-map.component.html","./src/app/common/components/image-view/image-view.component.html","./src/app/common/components/loading-spinner/loading-spinner.component.html","./src/app/common/components/media-object-round-pill/media-object-round-pill.component.html","./src/app/common/components/media-object-round/media-object-round.component.html","./src/app/common/components/popups/alert-popup/alert-popup.component.html","./src/app/common/components/popups/edit-pop-up/edit-pop-up.component.html","./src/app/common/components/popups/management-popup/management-popup.component.html","./src/app/common/components/popups/select-popup/select-popup.component.html","./src/app/common/components/range-footer/fulldate-component/fulldate-component.component.html","./src/app/common/components/range-footer/month-component/month-component.component.html","./src/app/common/components/range-footer/range-footer.component.html","./src/app/common/components/range-footer/year-component/year-component.component.html","./src/app/common/components/thermography/thermography.component.html","./src/app/dashboard/dashboard.component.html","./src/app/events/events.component.html","./src/app/events/telemetry-event/telemetry-event.component.html","./src/app/events/thermography-event/thermography-event.component.html","./src/app/footer/footer.component.html","./src/app/header/header.component.html","./src/app/header/notification/notification.component.html","./src/app/main-nav/main-nav.component.html","./src/app/mission-controller/config/config.component.html","./src/app/mission-controller/controls/controls.component.html","./src/app/mission-controller/drone-controller/drone-controller.component.html","./src/app/mission-controller/hangar-controller/hangar-controller.component.html","./src/app/mission-controller/history/history.component.html","./src/app/mission-controller/mission-controller.component.html","./src/app/mission-controller/mission/dialog-popup/dialog-popup.component.html","./src/app/mission-controller/mission/mission.component.html","./src/app/mission-controller/status/status.component.html","./node_modules/tslib/tslib.es6.js","./src/app/app-routing.module.ts","./src/app/app.component.css","./src/app/app.component.ts","./src/app/app.module.ts","./src/app/asset-groups/asset-groups.component.css","./src/app/asset-groups/asset-groups.component.ts","./src/app/assets/assets.component.css","./src/app/assets/assets.component.ts","./src/app/auth/auth-guard.service.ts","./src/app/auth/auth.component.css","./src/app/auth/auth.component.ts","./src/app/auth/auth.interceptor.ts","./src/app/auth/auth.service.ts","./src/app/common/components/buttons/add-new/add-new.component.css","./src/app/common/components/buttons/add-new/add-new.component.ts","./src/app/common/components/charts/pie-chart/pie-chart.component.css","./src/app/common/components/charts/pie-chart/pie-chart.component.ts","./src/app/common/components/drone-map/drone-map.component.css","./src/app/common/components/drone-map/drone-map.component.ts","./src/app/common/components/image-view/image-view.component.css","./src/app/common/components/image-view/image-view.component.ts","./src/app/common/components/loading-spinner/loading-spinner.component.css","./src/app/common/components/loading-spinner/loading-spinner.component.ts","./src/app/common/components/media-object-round-pill/media-object-round-pill.component.css","./src/app/common/components/media-object-round-pill/media-object-round-pill.component.ts","./src/app/common/components/media-object-round/media-object-round.component.css","./src/app/common/components/media-object-round/media-object-round.component.ts","./src/app/common/components/popups/alert-popup/alert-popup.component.css","./src/app/common/components/popups/alert-popup/alert-popup.component.ts","./src/app/common/components/popups/edit-pop-up/edit-pop-up.component.css","./src/app/common/components/popups/edit-pop-up/edit-pop-up.component.ts","./src/app/common/components/popups/management-popup/management-popup.component.css","./src/app/common/components/popups/management-popup/management-popup.component.ts","./src/app/common/components/popups/select-popup/select-popup.component.css","./src/app/common/components/popups/select-popup/select-popup.component.ts","./src/app/common/components/range-footer/fulldate-component/fulldate-component.component.css","./src/app/common/components/range-footer/fulldate-component/fulldate-component.component.ts","./src/app/common/components/range-footer/month-component/month-component.component.css","./src/app/common/components/range-footer/month-component/month-component.component.ts","./src/app/common/components/range-footer/range-footer.component.css","./src/app/common/components/range-footer/range-footer.component.ts","./src/app/common/components/range-footer/year-component/year-component.component.css","./src/app/common/components/range-footer/year-component/year-component.component.ts","./src/app/common/components/thermography/thermography.component.css","./src/app/common/components/thermography/thermography.component.ts","./src/app/common/directives/dropdown.directive.ts","./src/app/dashboard/dashboard.component.css","./src/app/dashboard/dashboard.component.ts","./src/app/events/events.component.css","./src/app/events/events.component.ts","./src/app/events/telemetry-event/telemetry-event.component.css","./src/app/events/telemetry-event/telemetry-event.component.ts","./src/app/events/thermography-event/thermography-event.component.css","./src/app/events/thermography-event/thermography-event.component.ts","./src/app/footer/footer.component.css","./src/app/footer/footer.component.ts","./src/app/header/header.component.css","./src/app/header/header.component.ts","./src/app/header/notification/notification.component.css","./src/app/header/notification/notification.component.ts","./src/app/main-nav/main-nav.component.css","./src/app/main-nav/main-nav.component.ts","./src/app/mission-controller/config/config.component.css","./src/app/mission-controller/config/config.component.ts","./src/app/mission-controller/controls/controls.component.css","./src/app/mission-controller/controls/controls.component.ts","./src/app/mission-controller/drone-controller/drone-controller.component.css","./src/app/mission-controller/drone-controller/drone-controller.component.ts","./src/app/mission-controller/hangar-controller/hangar-controller.component.css","./src/app/mission-controller/hangar-controller/hangar-controller.component.ts","./src/app/mission-controller/history/history.component.css","./src/app/mission-controller/history/history.component.ts","./src/app/mission-controller/mission-controller.component.css","./src/app/mission-controller/mission-controller.component.ts","./src/app/mission-controller/mission/dialog-popup/dialog-popup.component.css","./src/app/mission-controller/mission/dialog-popup/dialog-popup.component.ts","./src/app/mission-controller/mission/mission.component.css","./src/app/mission-controller/mission/mission.component.ts","./src/app/mission-controller/status/status.component.css","./src/app/mission-controller/status/status.component.ts","./src/app/rest/api.module.ts","./src/app/rest/api/api.ts","./src/app/rest/api/assetController.service.ts","./src/app/rest/api/assetGroupController.service.ts","./src/app/rest/api/dashboardElementController.service.ts","./src/app/rest/api/dataLoggerController.service.ts","./src/app/rest/api/deviceChannelController.service.ts","./src/app/rest/api/deviceController.service.ts","./src/app/rest/api/deviceEventController.service.ts","./src/app/rest/api/deviceGroupMembershipController.service.ts","./src/app/rest/api/deviceTypeChannelTypeController.service.ts","./src/app/rest/api/deviceTypeController.service.ts","./src/app/rest/api/eventController.service.ts","./src/app/rest/api/pingController.service.ts","./src/app/rest/api/schedulerController.service.ts","./src/app/rest/api/solarMonitorController.service.ts","./src/app/rest/api/userController.service.ts","./src/app/rest/api/userSubscriptionController.service.ts","./src/app/rest/api/virtualAccessController.service.ts","./src/app/rest/configuration.ts","./src/app/rest/encoder.ts","./src/app/rest/index.ts","./src/app/rest/variables.ts","./src/app/services/data-service.ts","./src/app/services/location-service.ts","./src/app/services/thessaly-api.service.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main-es2015.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","var map = {\n\t\"./af\": \"./node_modules/moment/locale/af.js\",\n\t\"./af.js\": \"./node_modules/moment/locale/af.js\",\n\t\"./ar\": \"./node_modules/moment/locale/ar.js\",\n\t\"./ar-dz\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-dz.js\": \"./node_modules/moment/locale/ar-dz.js\",\n\t\"./ar-kw\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-kw.js\": \"./node_modules/moment/locale/ar-kw.js\",\n\t\"./ar-ly\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ly.js\": \"./node_modules/moment/locale/ar-ly.js\",\n\t\"./ar-ma\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-ma.js\": \"./node_modules/moment/locale/ar-ma.js\",\n\t\"./ar-sa\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-sa.js\": \"./node_modules/moment/locale/ar-sa.js\",\n\t\"./ar-tn\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar-tn.js\": \"./node_modules/moment/locale/ar-tn.js\",\n\t\"./ar.js\": \"./node_modules/moment/locale/ar.js\",\n\t\"./az\": \"./node_modules/moment/locale/az.js\",\n\t\"./az.js\": \"./node_modules/moment/locale/az.js\",\n\t\"./be\": \"./node_modules/moment/locale/be.js\",\n\t\"./be.js\": \"./node_modules/moment/locale/be.js\",\n\t\"./bg\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bg.js\": \"./node_modules/moment/locale/bg.js\",\n\t\"./bm\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bm.js\": \"./node_modules/moment/locale/bm.js\",\n\t\"./bn\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bn.js\": \"./node_modules/moment/locale/bn.js\",\n\t\"./bo\": \"./node_modules/moment/locale/bo.js\",\n\t\"./bo.js\": \"./node_modules/moment/locale/bo.js\",\n\t\"./br\": \"./node_modules/moment/locale/br.js\",\n\t\"./br.js\": \"./node_modules/moment/locale/br.js\",\n\t\"./bs\": \"./node_modules/moment/locale/bs.js\",\n\t\"./bs.js\": \"./node_modules/moment/locale/bs.js\",\n\t\"./ca\": \"./node_modules/moment/locale/ca.js\",\n\t\"./ca.js\": \"./node_modules/moment/locale/ca.js\",\n\t\"./cs\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cs.js\": \"./node_modules/moment/locale/cs.js\",\n\t\"./cv\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cv.js\": \"./node_modules/moment/locale/cv.js\",\n\t\"./cy\": \"./node_modules/moment/locale/cy.js\",\n\t\"./cy.js\": \"./node_modules/moment/locale/cy.js\",\n\t\"./da\": \"./node_modules/moment/locale/da.js\",\n\t\"./da.js\": \"./node_modules/moment/locale/da.js\",\n\t\"./de\": \"./node_modules/moment/locale/de.js\",\n\t\"./de-at\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-at.js\": \"./node_modules/moment/locale/de-at.js\",\n\t\"./de-ch\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de-ch.js\": \"./node_modules/moment/locale/de-ch.js\",\n\t\"./de.js\": \"./node_modules/moment/locale/de.js\",\n\t\"./dv\": \"./node_modules/moment/locale/dv.js\",\n\t\"./dv.js\": \"./node_modules/moment/locale/dv.js\",\n\t\"./el\": \"./node_modules/moment/locale/el.js\",\n\t\"./el.js\": \"./node_modules/moment/locale/el.js\",\n\t\"./en-SG\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-SG.js\": \"./node_modules/moment/locale/en-SG.js\",\n\t\"./en-au\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-au.js\": \"./node_modules/moment/locale/en-au.js\",\n\t\"./en-ca\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-ca.js\": \"./node_modules/moment/locale/en-ca.js\",\n\t\"./en-gb\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-gb.js\": \"./node_modules/moment/locale/en-gb.js\",\n\t\"./en-ie\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-ie.js\": \"./node_modules/moment/locale/en-ie.js\",\n\t\"./en-il\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-il.js\": \"./node_modules/moment/locale/en-il.js\",\n\t\"./en-nz\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./en-nz.js\": \"./node_modules/moment/locale/en-nz.js\",\n\t\"./eo\": \"./node_modules/moment/locale/eo.js\",\n\t\"./eo.js\": \"./node_modules/moment/locale/eo.js\",\n\t\"./es\": \"./node_modules/moment/locale/es.js\",\n\t\"./es-do\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-do.js\": \"./node_modules/moment/locale/es-do.js\",\n\t\"./es-us\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es-us.js\": \"./node_modules/moment/locale/es-us.js\",\n\t\"./es.js\": \"./node_modules/moment/locale/es.js\",\n\t\"./et\": \"./node_modules/moment/locale/et.js\",\n\t\"./et.js\": \"./node_modules/moment/locale/et.js\",\n\t\"./eu\": \"./node_modules/moment/locale/eu.js\",\n\t\"./eu.js\": \"./node_modules/moment/locale/eu.js\",\n\t\"./fa\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fa.js\": \"./node_modules/moment/locale/fa.js\",\n\t\"./fi\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fi.js\": \"./node_modules/moment/locale/fi.js\",\n\t\"./fo\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fo.js\": \"./node_modules/moment/locale/fo.js\",\n\t\"./fr\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fr-ca\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ca.js\": \"./node_modules/moment/locale/fr-ca.js\",\n\t\"./fr-ch\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr-ch.js\": \"./node_modules/moment/locale/fr-ch.js\",\n\t\"./fr.js\": \"./node_modules/moment/locale/fr.js\",\n\t\"./fy\": \"./node_modules/moment/locale/fy.js\",\n\t\"./fy.js\": \"./node_modules/moment/locale/fy.js\",\n\t\"./ga\": \"./node_modules/moment/locale/ga.js\",\n\t\"./ga.js\": \"./node_modules/moment/locale/ga.js\",\n\t\"./gd\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gd.js\": \"./node_modules/moment/locale/gd.js\",\n\t\"./gl\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gl.js\": \"./node_modules/moment/locale/gl.js\",\n\t\"./gom-latn\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gom-latn.js\": \"./node_modules/moment/locale/gom-latn.js\",\n\t\"./gu\": \"./node_modules/moment/locale/gu.js\",\n\t\"./gu.js\": \"./node_modules/moment/locale/gu.js\",\n\t\"./he\": \"./node_modules/moment/locale/he.js\",\n\t\"./he.js\": \"./node_modules/moment/locale/he.js\",\n\t\"./hi\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hi.js\": \"./node_modules/moment/locale/hi.js\",\n\t\"./hr\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hr.js\": \"./node_modules/moment/locale/hr.js\",\n\t\"./hu\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hu.js\": \"./node_modules/moment/locale/hu.js\",\n\t\"./hy-am\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./hy-am.js\": \"./node_modules/moment/locale/hy-am.js\",\n\t\"./id\": \"./node_modules/moment/locale/id.js\",\n\t\"./id.js\": \"./node_modules/moment/locale/id.js\",\n\t\"./is\": \"./node_modules/moment/locale/is.js\",\n\t\"./is.js\": \"./node_modules/moment/locale/is.js\",\n\t\"./it\": \"./node_modules/moment/locale/it.js\",\n\t\"./it-ch\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it-ch.js\": \"./node_modules/moment/locale/it-ch.js\",\n\t\"./it.js\": \"./node_modules/moment/locale/it.js\",\n\t\"./ja\": \"./node_modules/moment/locale/ja.js\",\n\t\"./ja.js\": \"./node_modules/moment/locale/ja.js\",\n\t\"./jv\": \"./node_modules/moment/locale/jv.js\",\n\t\"./jv.js\": \"./node_modules/moment/locale/jv.js\",\n\t\"./ka\": \"./node_modules/moment/locale/ka.js\",\n\t\"./ka.js\": \"./node_modules/moment/locale/ka.js\",\n\t\"./kk\": \"./node_modules/moment/locale/kk.js\",\n\t\"./kk.js\": \"./node_modules/moment/locale/kk.js\",\n\t\"./km\": \"./node_modules/moment/locale/km.js\",\n\t\"./km.js\": \"./node_modules/moment/locale/km.js\",\n\t\"./kn\": \"./node_modules/moment/locale/kn.js\",\n\t\"./kn.js\": \"./node_modules/moment/locale/kn.js\",\n\t\"./ko\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ko.js\": \"./node_modules/moment/locale/ko.js\",\n\t\"./ku\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ku.js\": \"./node_modules/moment/locale/ku.js\",\n\t\"./ky\": \"./node_modules/moment/locale/ky.js\",\n\t\"./ky.js\": \"./node_modules/moment/locale/ky.js\",\n\t\"./lb\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lb.js\": \"./node_modules/moment/locale/lb.js\",\n\t\"./lo\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lo.js\": \"./node_modules/moment/locale/lo.js\",\n\t\"./lt\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lt.js\": \"./node_modules/moment/locale/lt.js\",\n\t\"./lv\": \"./node_modules/moment/locale/lv.js\",\n\t\"./lv.js\": \"./node_modules/moment/locale/lv.js\",\n\t\"./me\": \"./node_modules/moment/locale/me.js\",\n\t\"./me.js\": \"./node_modules/moment/locale/me.js\",\n\t\"./mi\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mi.js\": \"./node_modules/moment/locale/mi.js\",\n\t\"./mk\": \"./node_modules/moment/locale/mk.js\",\n\t\"./mk.js\": \"./node_modules/moment/locale/mk.js\",\n\t\"./ml\": \"./node_modules/moment/locale/ml.js\",\n\t\"./ml.js\": \"./node_modules/moment/locale/ml.js\",\n\t\"./mn\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mn.js\": \"./node_modules/moment/locale/mn.js\",\n\t\"./mr\": \"./node_modules/moment/locale/mr.js\",\n\t\"./mr.js\": \"./node_modules/moment/locale/mr.js\",\n\t\"./ms\": \"./node_modules/moment/locale/ms.js\",\n\t\"./ms-my\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms-my.js\": \"./node_modules/moment/locale/ms-my.js\",\n\t\"./ms.js\": \"./node_modules/moment/locale/ms.js\",\n\t\"./mt\": \"./node_modules/moment/locale/mt.js\",\n\t\"./mt.js\": \"./node_modules/moment/locale/mt.js\",\n\t\"./my\": \"./node_modules/moment/locale/my.js\",\n\t\"./my.js\": \"./node_modules/moment/locale/my.js\",\n\t\"./nb\": \"./node_modules/moment/locale/nb.js\",\n\t\"./nb.js\": \"./node_modules/moment/locale/nb.js\",\n\t\"./ne\": \"./node_modules/moment/locale/ne.js\",\n\t\"./ne.js\": \"./node_modules/moment/locale/ne.js\",\n\t\"./nl\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nl-be\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl-be.js\": \"./node_modules/moment/locale/nl-be.js\",\n\t\"./nl.js\": \"./node_modules/moment/locale/nl.js\",\n\t\"./nn\": \"./node_modules/moment/locale/nn.js\",\n\t\"./nn.js\": \"./node_modules/moment/locale/nn.js\",\n\t\"./pa-in\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pa-in.js\": \"./node_modules/moment/locale/pa-in.js\",\n\t\"./pl\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pl.js\": \"./node_modules/moment/locale/pl.js\",\n\t\"./pt\": \"./node_modules/moment/locale/pt.js\",\n\t\"./pt-br\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt-br.js\": \"./node_modules/moment/locale/pt-br.js\",\n\t\"./pt.js\": \"./node_modules/moment/locale/pt.js\",\n\t\"./ro\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ro.js\": \"./node_modules/moment/locale/ro.js\",\n\t\"./ru\": \"./node_modules/moment/locale/ru.js\",\n\t\"./ru.js\": \"./node_modules/moment/locale/ru.js\",\n\t\"./sd\": \"./node_modules/moment/locale/sd.js\",\n\t\"./sd.js\": \"./node_modules/moment/locale/sd.js\",\n\t\"./se\": \"./node_modules/moment/locale/se.js\",\n\t\"./se.js\": \"./node_modules/moment/locale/se.js\",\n\t\"./si\": \"./node_modules/moment/locale/si.js\",\n\t\"./si.js\": \"./node_modules/moment/locale/si.js\",\n\t\"./sk\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sk.js\": \"./node_modules/moment/locale/sk.js\",\n\t\"./sl\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sl.js\": \"./node_modules/moment/locale/sl.js\",\n\t\"./sq\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sq.js\": \"./node_modules/moment/locale/sq.js\",\n\t\"./sr\": \"./node_modules/moment/locale/sr.js\",\n\t\"./sr-cyrl\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr-cyrl.js\": \"./node_modules/moment/locale/sr-cyrl.js\",\n\t\"./sr.js\": \"./node_modules/moment/locale/sr.js\",\n\t\"./ss\": \"./node_modules/moment/locale/ss.js\",\n\t\"./ss.js\": \"./node_modules/moment/locale/ss.js\",\n\t\"./sv\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sv.js\": \"./node_modules/moment/locale/sv.js\",\n\t\"./sw\": \"./node_modules/moment/locale/sw.js\",\n\t\"./sw.js\": \"./node_modules/moment/locale/sw.js\",\n\t\"./ta\": \"./node_modules/moment/locale/ta.js\",\n\t\"./ta.js\": \"./node_modules/moment/locale/ta.js\",\n\t\"./te\": \"./node_modules/moment/locale/te.js\",\n\t\"./te.js\": \"./node_modules/moment/locale/te.js\",\n\t\"./tet\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tet.js\": \"./node_modules/moment/locale/tet.js\",\n\t\"./tg\": \"./node_modules/moment/locale/tg.js\",\n\t\"./tg.js\": \"./node_modules/moment/locale/tg.js\",\n\t\"./th\": \"./node_modules/moment/locale/th.js\",\n\t\"./th.js\": \"./node_modules/moment/locale/th.js\",\n\t\"./tl-ph\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tl-ph.js\": \"./node_modules/moment/locale/tl-ph.js\",\n\t\"./tlh\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tlh.js\": \"./node_modules/moment/locale/tlh.js\",\n\t\"./tr\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tr.js\": \"./node_modules/moment/locale/tr.js\",\n\t\"./tzl\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzl.js\": \"./node_modules/moment/locale/tzl.js\",\n\t\"./tzm\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./tzm-latn\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm-latn.js\": \"./node_modules/moment/locale/tzm-latn.js\",\n\t\"./tzm.js\": \"./node_modules/moment/locale/tzm.js\",\n\t\"./ug-cn\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./ug-cn.js\": \"./node_modules/moment/locale/ug-cn.js\",\n\t\"./uk\": \"./node_modules/moment/locale/uk.js\",\n\t\"./uk.js\": \"./node_modules/moment/locale/uk.js\",\n\t\"./ur\": \"./node_modules/moment/locale/ur.js\",\n\t\"./ur.js\": \"./node_modules/moment/locale/ur.js\",\n\t\"./uz\": \"./node_modules/moment/locale/uz.js\",\n\t\"./uz-latn\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz-latn.js\": \"./node_modules/moment/locale/uz-latn.js\",\n\t\"./uz.js\": \"./node_modules/moment/locale/uz.js\",\n\t\"./vi\": \"./node_modules/moment/locale/vi.js\",\n\t\"./vi.js\": \"./node_modules/moment/locale/vi.js\",\n\t\"./x-pseudo\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./x-pseudo.js\": \"./node_modules/moment/locale/x-pseudo.js\",\n\t\"./yo\": \"./node_modules/moment/locale/yo.js\",\n\t\"./yo.js\": \"./node_modules/moment/locale/yo.js\",\n\t\"./zh-cn\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-cn.js\": \"./node_modules/moment/locale/zh-cn.js\",\n\t\"./zh-hk\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-hk.js\": \"./node_modules/moment/locale/zh-hk.js\",\n\t\"./zh-tw\": \"./node_modules/moment/locale/zh-tw.js\",\n\t\"./zh-tw.js\": \"./node_modules/moment/locale/zh-tw.js\"\n};\n\n\nfunction webpackContext(req) {\n\tvar id = webpackContextResolve(req);\n\treturn __webpack_require__(id);\n}\nfunction webpackContextResolve(req) {\n\tif(!__webpack_require__.o(map, req)) {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t}\n\treturn map[req];\n}\nwebpackContext.keys = function webpackContextKeys() {\n\treturn Object.keys(map);\n};\nwebpackContext.resolve = webpackContextResolve;\nmodule.exports = webpackContext;\nwebpackContext.id = \"./node_modules/moment/locale sync recursive ^\\\\.\\\\/.*$\";","export default \"<app-main-nav></app-main-nav>\\n\"","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div *ngIf=\\\"assetGroups.length==0 && !serviceError && !loading\\\">\\r\\n        <p>No available Asset Groups</p>\\r\\n      </div>\\r\\n      <div\\r\\n        type=\\\"button\\\"\\r\\n        class=\\\"btn btn-block\\\"\\r\\n        *ngFor=\\\"let assetGroup of assetGroups\\\"\\r\\n        (click)=\\\"onAssetGroupSelect(assetGroup.id)\\\">\\r\\n        <app-media-object-round \\r\\n          [element]=\\\"assetGroup\\\" \\r\\n          (editThis)=\\\"edit($event)\\\" \\r\\n          [fromComponent]=\\\"'Asset Group'\\\"\\r\\n          (deleteThis)=\\\"delete($event)\\\" >\\r\\n        </app-media-object-round>\\r\\n      </div>\\r\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"serviceError\\\">\\r\\n        <p>Service is temporarily unavailable. Please try again later!</p>\\r\\n      </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"container\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n      <div \\r\\n      type=\\\"button\\\"\\r\\n      class=\\\"btn btn-block\\\"\\r\\n      *ngFor=\\\"let asset of assets\\\"\\r\\n      (click)=\\\"onAssetSelect(asset.id)\\\">\\r\\n      <app-media-object-round [element]=\\\"asset\\\" (deleteThis)=\\\"delete($event)\\\" (editThis)=\\\"edit($event)\\\" [fromComponent] = \\\"'Asset'\\\"></app-media-object-round>\\r\\n    </div>\\r\\n    \\r\\n    <div>\\r\\n      <p *ngIf=\\\"assets.length===0 && !serviceError && !loading\\\">No available assets!</p>\\r\\n    </div>\\r\\n    \\r\\n    <div class=\\\"alert alert-danger\\\" *ngIf=\\\"serviceError\\\">\\r\\n      <p>Service is temporarily unavailable. Please try again later!</p>\\r\\n    </div>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<div class=\\\"container border-0 shadow bg-white rounded\\\">\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\r\\n      <br>\\r\\n      <br>\\r\\n      <span>\\r\\n        <h2 style=\\\"color: rgb(113, 171, 193);\\\">Login</h2>\\r\\n      </span>\\r\\n      <br>\\r\\n    </div>\\r\\n  </div>\\r\\n  <div class=\\\"row\\\">\\r\\n    <div class=\\\"col-xs-12 col-sm-10 col-md-8 col-sm-offset-1 col-md-offset-2\\\">\\r\\n      <div class=\\\"alert alert-danger\\\" *ngIf=\\\"error\\\">\\r\\n        <p>{{ error }}</p>\\r\\n      </div>\\r\\n      <div *ngIf=\\\"isLoading\\\" class=\\\"allign-center\\\">\\r\\n        <app-loading-spinner></app-loading-spinner>\\r\\n      </div>\\r\\n      <form #authForm=\\\"ngForm\\\" (ngSubmit)=\\\"onSubmit(authForm)\\\" *ngIf=\\\"!isLoading\\\">\\r\\n        <p>\\r\\n          <label for=\\\"email\\\">Email address</label>\\r\\n          <input\\r\\n            type=\\\"email\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"email\\\"\\r\\n            #email=\\\"ngModel\\\"\\r\\n            aria-describedby=\\\"emailHelp\\\"\\r\\n            placeholder=\\\"Enter email\\\"\\r\\n            name=\\\"email\\\"\\r\\n            type=\\\"email\\\"\\r\\n            [(ngModel)]=\\\"user.email\\\"\\r\\n            required\\r\\n            email>\\r\\n          <small\\r\\n            id=\\\"emailHelp\\\"\\r\\n            class=\\\"form-text text-muted\\\"\\r\\n            *ngIf=\\\"!loginMode && !email.dirty && !email.touched\\\"\\r\\n            >We'll never share your email with anyone else.</small>\\r\\n          <small\\r\\n            *ngIf=\\\"email.invalid && (email.dirty || email.touched)\\\"\\r\\n            class=\\\"form-text text-danger\\\"\\r\\n            >\\r\\n            Please enter a valid email!\\r\\n          </small>\\r\\n        <div class=\\\"form-group\\\">\\r\\n          <label for=\\\"passwd\\\">Password</label>\\r\\n          <input\\r\\n            type=\\\"password\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"passwd\\\"\\r\\n            #password=\\\"ngModel\\\"\\r\\n            placeholder=\\\"Password\\\"\\r\\n            name=\\\"password\\\"\\r\\n            type=\\\"password\\\"\\r\\n            [(ngModel)]=\\\"user.passwd\\\"\\r\\n            required\\r\\n            minlength=\\\"6\\\">\\r\\n          <small\\r\\n            *ngIf=\\\"password.invalid && (password.dirty || password.touched)\\\"\\r\\n            class=\\\"form-text text-danger\\\"\\r\\n            >\\r\\n            Password must be at least 6 characters long!\\r\\n          </small>\\r\\n        </div>\\r\\n        <div *ngIf=\\\"!loginMode\\\"\\r\\n             class=\\\"form-group\\\">\\r\\n          <label for=\\\"passwd\\\">Repeat Password</label>\\r\\n          <input\\r\\n            type=\\\"password\\\"\\r\\n            class=\\\"form-control\\\"\\r\\n            id=\\\"repeatPass\\\"\\r\\n            #repeatPass=\\\"ngModel\\\"\\r\\n            placeholder=\\\"Repeat Password\\\"\\r\\n            name=\\\"repeatPass\\\"\\r\\n            type=\\\"password\\\"\\r\\n            [(ngModel)]=\\\"repeatPasswd\\\"\\r\\n            required\\r\\n            minlength=\\\"6\\\">\\r\\n          <small\\r\\n            *ngIf=\\\"repeatPass.invalid && (repeatPass.dirty || repeatPass.touched)\\\"\\r\\n            class=\\\"form-text text-danger\\\"\\r\\n            >\\r\\n            Password must be at least 6 characters long!\\r\\n          </small>\\r\\n          <small\\r\\n            *ngIf=\\\"!repeatPass.invalid && repeatPass.value!=password.value && (repeatPass.dirty || repeatPass.touched)\\\"\\r\\n            class=\\\"form-text text-danger\\\"\\r\\n            >\\r\\n            Passwords don't match!\\r\\n          </small>\\r\\n        </div>\\r\\n        <button\\r\\n          type=\\\"submit\\\"\\r\\n          class=\\\"btn btn-primary mb-4 mr-3\\\"\\r\\n          [disabled]=\\\"!authForm.valid || !loginMode && user.passwd!= repeatPasswd\\\"\\r\\n        >{{loginMode ? 'Login': 'Sign Up'}}</button>\\r\\n          \\r\\n        <!--<button type=\\\"button\\\" class=\\\"btn btn-primary mb-4\\\" (click)=\\\"onSwitchMode()\\\">\\r\\n            Switch to {{loginMode ? 'Sign Up' : 'Login' }}</button>-->\\r\\n      </form>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\"","export default \"<mat-accordion>\\n    <mat-expansion-panel #panel class=\\\"mt-4 mb-2\\\">\\n        <mat-expansion-panel-header class=\\\"unopened\\\">\\n            {{element.title}}\\n        </mat-expansion-panel-header>\\n        <form #form (keyup.enter) = \\\"callParentSave();form.reset();panel.close();\\\">\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"assetGroupName1\\\" class=\\\"col-sm-2 col-form-label\\\">Name:</label>\\n            <div class=\\\"col-sm-10\\\">\\n              <input [(ngModel)]=\\\"assetGroupName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"assetGroupName1\\\" placeholder={{element.placeholder1}}>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n            <label for=\\\"assetGroupDescription\\\" class=\\\"col-sm-2 col-form-label\\\">Description:</label>\\n            <div class=\\\"col-sm-10\\\">\\n              <input [(ngModel)]=\\\"assetGroupDescription\\\" [ngModelOptions]=\\\"{standalone: true}\\\" type=\\\"text\\\" class=\\\"form-control\\\" id=\\\"assetGroupDescription\\\" placeholder={{element.placeholder2}}>\\n            </div>\\n          </div>\\n          <div class=\\\"form-group row\\\">\\n              <div class=\\\"btn btn-primary mr-4\\\" (click) = \\\"callParentSave();form.reset();panel.close();\\\">\\n                Save\\n              </div>\\n              <div class=\\\"btn btn-primary\\\" (click) = \\\"form.reset();panel.close();\\\">\\n                Cancel\\n              </div>\\n          </div>\\n        </form>\\n    </mat-expansion-panel>\\n  </mat-accordion>\"","export default \"<div class=\\\"card card-chart\\\">\\r\\n    <div class=\\\"card-header\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <div class=\\\"d-none d-md-block\\\">\\r\\n                    <button  *ngFor=\\\"let button of buttonGroup\\\" [ngClass]=\\\"{'active':button.isClicked}\\\" (click)=\\\" setActive(button)\\\" class=\\\"btn btn-sm btn-danger btn-simple\\\">\\r\\n                        {{button.text}}\\r\\n                    </button>\\r\\n                </div>\\r\\n                <div class=\\\"d-md-none\\\">\\r\\n                    <select class=\\\"custom-select\\\" [ngModel]=\\\"selected2\\\" (ngModelChange) = setActive($event)>\\r\\n                        <option [ngValue]=\\\"button\\\" *ngFor=\\\"let button of buttonGroup\\\">\\r\\n                            {{button.text}}\\r\\n                        </option>\\r\\n                    </select>\\r\\n                </div>\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col\\\">\\r\\n                <span class=\\\"float-right\\\">\\r\\n                    <div class=\\\"d-none d-md-block\\\">\\r\\n                        <button *ngFor=\\\"let buttonOption of buttonGroup2\\\" class=\\\"btn btn-sm btn-danger btn-simple\\\" (click)=\\\"onSelect(buttonOption)\\\" [ngClass]=\\\"{'active':buttonOption.isClicked}\\\">\\r\\n                            {{buttonOption.text}}\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"d-md-none\\\">\\r\\n                        <select class=\\\"custom-select\\\" [(ngModel)]=\\\"selectedDeviceObj\\\" (ngModelChange) = onSelect($event)>\\r\\n                            <option [ngValue]=\\\"button\\\" *ngFor=\\\"let button of buttonGroup2\\\">\\r\\n                                {{button.text}}\\r\\n                            </option>\\r\\n                        </select>                    \\r\\n                    </div>\\r\\n                </span>\\r\\n            </div> -->\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"card-body size\\\">\\r\\n        <div id=\\\"chart_wrap\\\">\\r\\n            <script  src=\\\"https://www.gstatic.com/charts/loader.js\\\"></script>\\r\\n            <div id=\\\"linechart\\\" style=\\\"height:550px;width: 100%\\\"></div>\\r\\n        </div>\\r\\n        <app-range-footer [childMessage] = \\\"selection\\\"></app-range-footer>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<h1>{{ title }}</h1>\\n<agm-map [latitude]=\\\"homeLatitude\\\" [longitude]=\\\"homeLongitude\\\">\\n  <agm-marker [latitude]=\\\"homeLatitude\\\" [longitude]=\\\"homeLongitude\\\"></agm-marker>\\n  <agm-marker [latitude]=\\\"currentLatitude\\\" [longitude]=\\\"currentLongtitude\\\"></agm-marker>\\n</agm-map>\"","export default \"<p>image-view works!</p>\\n\"","export default \"<div class=\\\"lds-ring\\\"><div></div><div></div><div></div><div></div></div>\"","export default \"<div class=\\\"container border-0 rounded-pill shadow p-2 mt-3 mb-3 bg-white\\\">\\r\\n  <div class=\\\"media\\\">\\r\\n    <img src=\\\"assets/images/logo_thumbnail.png\\\"\\r\\n        class=\\\"m-3\\\"\\r\\n        alt=\\\"pic\\\"\\r\\n        height=\\\"30px\\\">\\r\\n    <div class=\\\"media-body\\\">\\r\\n      <h5 class=\\\"mt-1\\\">Media Object heading</h5>\\r\\n      <p>Media Object Description</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"container border-0 rounded shadow p-2 mt-3 mb-3 bg-white\\\">\\r\\n  <div class=\\\"media\\\">\\r\\n    <img src=\\\"assets/images/logo_thumbnail.png\\\"\\r\\n        class=\\\"m-3\\\"\\r\\n        alt=\\\"pic\\\"\\r\\n        height=\\\"30px\\\">\\r\\n    <div class=\\\"media-body\\\">\\r\\n      <h5 class=\\\"mt-1\\\">{{ element.name }}</h5>\\r\\n      <p>{{ element.description }}</p>\\r\\n    </div>\\r\\n  </div>\\r\\n</div>\\r\\n\"","export default \"<h2 matDialogTitle>Delete</h2>\\r\\n<mat-dialog-content>\\r\\n  <p>Once you delete, all your data will be removed. Continue?</p>\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions align=\\\"end\\\">\\r\\n  <button mat-button matDialogClose=\\\"cancel\\\" color=\\\"primary\\\">Cancel</button>\\r\\n  <button mat-button matDialogClose=\\\"confirm\\\" color=\\\"warn\\\">Delete</button>\\r\\n</mat-dialog-actions>\"","export default \"<h2 mat-dialog-title>Edit {{editedValue}}</h2>\\r\\n<mat-dialog-content>\\r\\n    <form (keyup.enter)=\\\"save()\\\">\\r\\n        <div class=\\\"form-inline justify-content-between\\\">\\r\\n          <label for=\\\"editedValueName\\\" class=\\\"col-form-label mr-2\\\">Name:</label>\\r\\n          <div class=\\\"\\\">\\r\\n            <input \\r\\n            [(ngModel)]=\\\"editedValueName\\\" \\r\\n            [ngModelOptions]=\\\"{standalone: true}\\\" \\r\\n            type=\\\"text\\\"\\r\\n            class=\\\"form-control\\\" \\r\\n            id=\\\"editedValueName\\\" \\r\\n            placeholder=\\\"Name\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-inline justify-content-between\\\">\\r\\n          <label for=\\\"editedValueDescription\\\" class=\\\"col-form-label mr-2\\\">Description:</label>\\r\\n          <div class=\\\"\\\">\\r\\n            <input \\r\\n            [(ngModel)]=\\\"editedValueDescription\\\" \\r\\n            [ngModelOptions]=\\\"{standalone: true}\\\" \\r\\n            type=\\\"text\\\" \\r\\n            class=\\\"form-control\\\" \\r\\n            id=\\\"editedValueDescription\\\" \\r\\n            placeholder=\\\"Description\\\">\\r\\n          </div>\\r\\n        </div>\\r\\n        <div class=\\\"form-inline justify-content-between mt-3\\\">\\r\\n            <div class=\\\"btn btn-primary\\\" (click)=\\\"save()\\\">\\r\\n              Save\\r\\n            </div>\\r\\n            <div class=\\\"btn btn-primary\\\" (click)=\\\"close()\\\">\\r\\n              Cancel\\r\\n            </div>\\r\\n        </div>\\r\\n      </form>\\r\\n</mat-dialog-content>\\r\\n\"","export default \"<h2 mat-dialog-title>Select Asset Group</h2>\\r\\n<mat-dialog-content>\\r\\n    <select name=\\\"assetSelect\\\" [(ngModel)]=\\\"assetSelect\\\">\\r\\n        <option *ngFor=\\\"let assetSelect of allAssetGroups\\\" [ngValue]=\\\"assetSelect\\\">{{assetSelect.name}}</option>\\r\\n    </select>\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n    <button mat-button mat-dialog-close>Cancel</button>\\r\\n    <button mat-button [mat-dialog-close]=\\\"true\\\" (click)=\\\"save()\\\" >Save</button>\\r\\n</mat-dialog-actions>\\r\\n\"","export default \"<h2 mat-dialog-title>Select Datalogger</h2>\\r\\n<mat-dialog-content>\\r\\n    <div *ngIf=\\\"insertedData === 'user-asset'; else dataloggers\\\">\\r\\n        <select name=\\\"selectedData\\\" [(ngModel)]=\\\"selectedData\\\">\\r\\n            <option *ngFor=\\\"let assetGroups of popUpData\\\" [ngValue]=\\\"assetGroups\\\">{{assetGroups.name}}</option>\\r\\n        </select>\\r\\n    </div>\\r\\n    <ng-template #dataloggers>\\r\\n        <select name=\\\"selectedData\\\" [(ngModel)]=\\\"selectedData\\\">\\r\\n            <option *ngFor=\\\"let datalogger of popUpData\\\" [ngValue]=\\\"datalogger\\\">{{datalogger.description}}</option>\\r\\n        </select>\\r\\n    </ng-template>\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n    <button mat-button mat-dialog-close>Cancel</button>\\r\\n    <button mat-button [mat-dialog-close]=\\\"selectedData\\\" cdkFocusInitial>Ok</button>\\r\\n</mat-dialog-actions>\\r\\n\"","export default \"<img src=\\\"assets/images/expand-arrow.png\\\" (click)=\\\"previousDate()\\\" style=\\\"transform: rotate(90deg);\\\">\\r\\n<mat-form-field>\\r\\n    <mat-label>Date</mat-label>\\r\\n    <input matInput [matDatepicker]=\\\"picker\\\" [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [formControl]=\\\"showValue\\\"\\r\\n            (dateChange)=\\\"addEvent($event)\\\">\\r\\n    <mat-datepicker-toggle matSuffix [for]=\\\"picker\\\"></mat-datepicker-toggle>\\r\\n    <mat-datepicker #picker></mat-datepicker>\\r\\n</mat-form-field>\\r\\n<img src='assets/images/expand-arrow.png' (click)=\\\"nextDate()\\\" style=\\\"transform: rotate(270deg);\\\">\\r\\n\"","export default \"<img src=\\\"assets/images/expand-arrow.png\\\" (click)=\\\"previousDate()\\\" style=\\\"transform: rotate(90deg);\\\">\\r\\n<mat-form-field>\\r\\n  <mat-label>Month</mat-label>\\r\\n  <input matInput [matDatepicker]=\\\"dpmonth\\\" [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [formControl]=\\\"date\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"dpmonth\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #dpmonth\\r\\n                  startView=\\\"multi-year\\\"\\r\\n                  (yearSelected)=\\\"chosenYearHandler($event)\\\"\\r\\n                  (monthSelected)=\\\"chosenMonthHandler($event, dpmonth)\\\"\\r\\n                  panelClass=\\\"example-month-picker\\\">\\r\\n  </mat-datepicker>\\r\\n</mat-form-field>\\r\\n<img src=\\\"assets/images/expand-arrow.png\\\" (click)=\\\"nextDate()\\\" style=\\\"transform: rotate(270deg);\\\">\\r\\n\"","export default \"<div class=\\\"row\\\">\\r\\n    <div class=\\\"col\\\">\\r\\n        <div class=\\\"row\\\">\\r\\n            <div class=\\\"col-md-auto col-12\\\">\\r\\n                <app-fulldate-component [From]=0 ></app-fulldate-component>\\r\\n            </div>\\r\\n            <div class=\\\"col-md-auto col-12\\\">\\r\\n                <app-fulldate-component [From]=1 *ngIf='clicked===true'></app-fulldate-component>\\r\\n            </div>\\r\\n            <!-- <img src={{buttonImg}} (click)=\\\"onChangeButton()\\\"> -->\\r\\n        </div>\\r\\n        <!-- <ng-template #month>\\r\\n            <ng-container *ngIf=\\\"childMessage ===  'month';else year\\\">  \\r\\n                <div class=\\\"row\\\">\\r\\n                    <div class=\\\"col-md-auto col-12\\\">\\r\\n                        <app-month-component></app-month-component>\\r\\n                    </div>\\r\\n                    <div class=\\\"col-md-auto col-12\\\">\\r\\n                        <app-month-component *ngIf='clicked===true'></app-month-component>\\r\\n                    </div>\\r\\n                    <img src={{buttonImg}} (click)=\\\"onChangeButton()\\\">\\r\\n                </div>\\r\\n            </ng-container>\\r\\n        </ng-template>\\r\\n        <ng-template #year>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-md-auto col-12\\\">\\r\\n                    <app-year-component></app-year-component>\\r\\n                </div>\\r\\n                <div class=\\\"col-md-auto col-12\\\">\\r\\n                    <app-year-component *ngIf='clicked===true'></app-year-component>\\r\\n                </div>\\r\\n                <img src={{buttonImg}} (click)=\\\"onChangeButton()\\\">\\r\\n            </div>\\r\\n        </ng-template> -->\\r\\n    </div>\\r\\n</div>\"","export default \"<img src=\\\"assets/images/expand-arrow.png\\\" (click)=\\\"previousDate()\\\" style=\\\"transform: rotate(90deg);\\\">\\r\\n<mat-form-field>\\r\\n  <mat-label>Year</mat-label>\\r\\n  <input matInput [matDatepicker]=\\\"dp\\\" [min]=\\\"minDate\\\" [max]=\\\"maxDate\\\" [formControl]=\\\"date\\\">\\r\\n  <mat-datepicker-toggle matSuffix [for]=\\\"dp\\\"></mat-datepicker-toggle>\\r\\n  <mat-datepicker #dp\\r\\n                  startView=\\\"multi-year\\\"\\r\\n                  (yearSelected)=\\\"chosenYearHandler($event,dp)\\\"\\r\\n                  panelClass=\\\"example-month-picker\\\">\\r\\n  </mat-datepicker>\\r\\n</mat-form-field>\\r\\n<img src=\\\"assets/images/expand-arrow.png\\\" (click)=\\\"nextDate()\\\" style=\\\"transform: rotate(270deg);\\\">\\r\\n\"","export default \"<mat-card class=\\\"border border-primary m-4\\\">\\n    <!-- <mat-card-title>\\n        Thermography\\n    </mat-card-title> -->\\n    <mat-card-content>\\n        <div class=\\\"row\\\">\\n            <div class=\\\"col\\\">\\n                <img class=\\\"responsive\\\" src= \\\"https://ec.europa.eu/research/headlines/news/images/19_06_20_small.jpg\\\">\\n            </div>\\n        </div>\\n        <div class=\\\"d-flex justify-content-between mt-4\\\">\\n            <!-- <div class=\\\"btn btn-primary\\\" (click)=\\\"getImages('Test')\\\">\\n                getImg\\n            </div> -->\\n            <div class=\\\"btn btn-primary\\\" (click)=\\\"downloadImage('Test','step_3.jpg','FULL')\\\">\\n                download\\n            </div>\\n        </div>\\n    </mat-card-content>\\n</mat-card>\"","export default \"<div class=\\\"container-fluid\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\"> \\r\\n            <app-pie-chart></app-pie-chart>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\"","export default \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <div class=\\\"card\\\">\\r\\n                <mat-tab-group>\\r\\n                    <mat-tab label=\\\"Telemetry\\\"> \\r\\n                        <app-telemetry-event></app-telemetry-event>\\r\\n                    </mat-tab>\\r\\n                    <mat-tab label=\\\"Thermography\\\">\\r\\n                        <app-thermography-event></app-thermography-event>\\r\\n                    </mat-tab>\\r\\n                </mat-tab-group>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\\r\\n\\r\\n<!-- \\r\\n<div *ngFor=\\\"let event of eventArray; let counter=index\\\">\\r\\n    <mat-card class=\\\"border border-primary m-4\\\">\\r\\n        <div class=\\\"row\\\" (click)=\\\"seeEvent(event.id);\\\">\\r\\n            <div class=\\\"col-3\\\">\\r\\n                <div class=\\\"circle\\\"\\r\\n                [ngStyle]=\\\"{'background-color': event.severity==='HIGH'?'red' : 'yellow'}\\\"\\r\\n                *ngIf=\\\"!event.resolved; else resolved\\\">\\r\\n                    {{counter+1}}\\r\\n                </div>\\r\\n                <ng-template #resolved>\\r\\n                    <div class=\\\"circle\\\" style=\\\"background-color: green;\\\">\\r\\n                        {{counter+1}}\\r\\n                    </div>\\r\\n                </ng-template>\\r\\n            </div>\\r\\n            <div class=\\\"col-9\\\">\\r\\n                <div *ngIf=\\\"checkSeen(event.id, counter); else unseen\\\">\\r\\n                    <h4 [ngStyle] = \\\"{'font-weight': 'normal'}\\\">{{event.description}}</h4>\\r\\n                </div>\\r\\n                <ng-template #unseen>\\r\\n                    <h4 [ngStyle] = \\\"{'font-weight': 'bold'}\\\">{{event.description}}</h4>\\r\\n                </ng-template>\\r\\n                <p>Event Time: {{timeEvent(event.timestamp)}}</p>\\r\\n                <div *ngIf=\\\"event.resolved\\\">\\r\\n                    <p>Recovery Time: {{timeEvent(event.resolutionTimestamp)}}</p>\\r\\n                </div>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-card>\\r\\n</div>\\r\\n<div class=\\\"alert alert-danger\\\" *ngIf=\\\"serviceError\\\">\\r\\n    <p>Service is temporarily unavailable. Please try again later!</p>\\r\\n</div>\\r\\n<div>\\r\\n    <p *ngIf=\\\"eventArray.length===0 && !serviceError && !loading\\\">No available events!</p>\\r\\n</div> -->\"","export default \"<div *ngFor=\\\"let telemetryEvent of telemetryEventArray; let counter=index\\\">\\n    <mat-card class=\\\"border border-primary m-4\\\">\\n        <div class=\\\"row\\\" (click)=\\\"seeEvent(telemetryEvent.id);\\\">\\n            <div class=\\\"col-3\\\">\\n                <div class=\\\"circle\\\"\\n                [ngStyle]=\\\"{'background-color': telemetryEvent.severity==='HIGH'?'red' : 'yellow'}\\\"\\n                *ngIf=\\\"!telemetryEvent.resolved; else resolved\\\">\\n                    {{counter+1}}\\n                </div>\\n                <ng-template #resolved>\\n                    <div class=\\\"circle\\\" style=\\\"background-color: green;\\\">\\n                        {{counter+1}}\\n                    </div>\\n                </ng-template>\\n            </div>\\n            <div class=\\\"col-9\\\">\\n                <div *ngIf=\\\"checkSeen(telemetryEvent.id, counter); else unseen\\\">\\n                    <h4 [ngStyle] = \\\"{'font-weight': 'normal'}\\\">{{telemetryEvent.description}}</h4>\\n                </div>\\n                <ng-template #unseen>\\n                    <h4 [ngStyle] = \\\"{'font-weight': 'bold'}\\\">{{telemetryEvent.description}}</h4>\\n                </ng-template>\\n                <p>telemetryEvent Time: {{timeEvent(telemetryEvent.timestamp)}}</p>\\n                <div *ngIf=\\\"telemetryEvent.resolved\\\">\\n                    <p>Recovery Time: {{timeEvent(telemetryEvent.resolutionTimestamp)}}</p>\\n                </div>\\n            </div>\\n        </div>\\n    </mat-card>\\n</div>\\n<div class=\\\"alert alert-danger\\\" *ngIf=\\\"serviceError\\\">\\n    <p>Service is temporarily unavailable. Please try again later!</p>\\n</div>\\n<div>\\n    <p *ngIf=\\\"telemetryEventArray.length===0 && !serviceError && !loading\\\">No available events!</p>\\n</div>\"","export default \"<div *ngFor=\\\"let thermographyEvent of thermographyEventArray; let counter=index\\\">\\n    <mat-card class=\\\"border border-primary m-4\\\">\\n        <div class=\\\"row\\\" (click)=\\\"seeEvent(thermographyEvent.id);\\\">\\n            <div class=\\\"col-3\\\">\\n                <div class=\\\"circle\\\"\\n                [ngStyle]=\\\"{'background-color': thermographyEvent.severity==='HIGH'?'red' : 'yellow'}\\\"\\n                *ngIf=\\\"!thermographyEvent.resolved; else resolved\\\">\\n                    {{counter+1}}\\n                </div>\\n                <ng-template #resolved>\\n                    <div class=\\\"circle\\\" style=\\\"background-color: green;\\\">\\n                        {{counter+1}}\\n                    </div>\\n                </ng-template>\\n            </div>\\n            <div class=\\\"col-9\\\">\\n                <div *ngIf=\\\"checkSeen(thermographyEvent.id, counter); else unseen\\\">\\n                    <h4 [ngStyle] = \\\"{'font-weight': 'normal'}\\\">{{thermographyEvent.description}}</h4>\\n                </div>\\n                <ng-template #unseen>\\n                    <h4 [ngStyle] = \\\"{'font-weight': 'bold'}\\\">{{thermographyEvent.description}}</h4>\\n                </ng-template>\\n                <p>thermographyEvent Time: {{timeEvent(thermographyEvent.timestamp)}}</p>\\n                <div *ngIf=\\\"thermographyEvent.resolved\\\">\\n                    <p>Recovery Time: {{timeEvent(thermographyEvent.resolutionTimestamp)}}</p>\\n                </div>\\n            </div>\\n        </div>\\n    </mat-card>\\n</div>\\n<div class=\\\"alert alert-danger\\\" *ngIf=\\\"serviceError\\\">\\n    <p>Service is temporarily unavailable. Please try again later!</p>\\n</div>\\n<div>\\n    <p *ngIf=\\\"thermographyEventArray.length===0 && !serviceError && !loading\\\">No available events!</p>\\n</div>\"","export default \"<div class=\\\"container\\\">\\r\\n  <span >Footer Content</span>\\r\\n</div>\\r\\n\\r\\n\"","export default \"<nav class=\\\"navbar navbar-expand-sm navbar-dark bg-primary navbar-absolute navbar-transparent\\\">\\r\\n  <ul class=\\\"nav navbar-nav  navbar-left\\\">\\r\\n    <li>\\r\\n      <a class=\\\"navbar-brand \\\" routerLink=\\\"/assetGroups\\\">pv-auto-scout</a>\\r\\n    </li>\\r\\n  </ul>\\r\\n  <ul class=\\\"nav navbar-nav navbar-right inline\\\">\\r\\n    <li class=\\\"navbar-right inline\\\">\\r\\n      <div routerLinkActive=\\\"active\\\" class=\\\"nav navbar-nav navbar-right d-block d-sm-none\\\" *ngIf=\\\"isAuthenticated\\\" (click)=\\\"openMenu=false\\\">\\r\\n        <app-notify routerLink=\\\"/events\\\"></app-notify>\\r\\n      </div>\\r\\n    </li>\\r\\n    <li class=\\\"navbar-right inline\\\">\\r\\n      <button (click)=\\\"openMenu=!openMenu\\\"\\r\\n        class=\\\"navbar-toggler\\\"\\r\\n        type=\\\"button\\\"\\r\\n        data-toggle=\\\"collapse\\\"\\r\\n        data-target=\\\"#navbarNav\\\"\\r\\n        aria-controls=\\\"navbarNav\\\"\\r\\n        aria-expanded=\\\"false\\\"\\r\\n        aria-label=\\\"Toggle navigation\\\">\\r\\n      <span class=\\\"navbar-toggler-icon\\\"></span>\\r\\n      </button>\\r\\n    <div [ngClass]=\\\"{show: openMenu}\\\" class=\\\"collapse navbar-collapse\\\" id=\\\"navbarNav\\\">\\r\\n      <ul class=\\\"nav navbar-nav\\\">\\r\\n        <li routerLinkActive=\\\"active\\\" class=\\\"nav-item\\\" *ngIf=\\\"isAuthenticated\\\" (click)=\\\"openMenu=false\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/assetGroups\\\">Asset Groups</a>\\r\\n        </li>\\r\\n        <li routerLinkActive=\\\"active\\\" class=\\\"nav-item\\\" *ngIf=\\\"isAuthenticated\\\" (click)=\\\"openMenu=false\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/dashboard\\\">Dashboard</a>\\r\\n        </li>\\r\\n        <li routerLinkActive=\\\"active\\\" class=\\\"nav-item\\\" *ngIf=\\\"isAuthenticated\\\" (click)=\\\"openMenu=false\\\" >\\r\\n          <!-- <div *ngIf=\\\"array?.length > 2\\\" class=\\\" notification d-none d-lg-block d-xl-block\\\">\\r\\n            <app-notify></app-notify>\\r\\n          </div> -->\\r\\n          \\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/events\\\">Events</a>\\r\\n        </li>\\r\\n        <li routerLinkActive=\\\"active\\\" class=\\\"nav-item\\\" *ngIf=\\\"isAuthenticated\\\" (click)=\\\"openMenu=false\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/missionController\\\">Mission Controller</a>\\r\\n        </li>\\r\\n        <li routerLinkActive=\\\"active\\\" class=\\\"nav-item\\\" *ngIf=\\\"!isAuthenticated\\\" (click)=\\\"openMenu=false\\\">\\r\\n          <a class=\\\"nav-link\\\" routerLink=\\\"/auth\\\">Login</a>\\r\\n        </li>\\r\\n        <li routerLinkActive=\\\"active\\\" class=\\\"nav-item\\\" *ngIf=\\\"isAuthenticated\\\" (click)=\\\"onLogout()\\\"(click)=\\\"openMenu=false\\\">\\r\\n          <a class=\\\"nav-link\\\" style=\\\"cursor: pointer\\\">Logout</a>\\r\\n        </li>\\r\\n      </ul>\\r\\n    </div>\\r\\n    </li>\\r\\n  </ul>\\r\\n</nav>\\r\\n\"","export default \"<button type=\\\"button\\\" class=\\\"btn btn-primary notify\\\"> <span class=\\\"badge\\\">{{eventsArray.length}}</span></button>\\r\\n\"","export default \"<mat-sidenav-container class=\\\"sidenav-container\\\" style=\\\"background-color: rgba(218, 216, 221, 0.404);\\\">\\r\\n  <mat-sidenav #drawer class=\\\"sidenav\\\" fixedInViewport position=\\\"end\\\"\\r\\n      [attr.role]=\\\"(isHandset$ | async) ? 'dialog' : 'navigation'\\\"\\r\\n      [mode]=\\\"(isHandset$ | async) ? 'over' : 'side'\\\"\\r\\n      [opened]=\\\"(isHandset$ | async) === false\\\">\\r\\n    <mat-toolbar style=\\\"background-color: rgb(183, 201, 203); justify-content: center; color: rgb(28, 101, 133);\\\">\\r\\n        Pv Auto Scout\\r\\n    </mat-toolbar>\\r\\n    <mat-nav-list>\\r\\n      <a mat-list-item *ngIf=\\\"isAuthenticated\\\" routerLinkActive=\\\"active-list-item\\\" (click) = \\\"navToAssetGroup()\\\">My Plants</a>\\r\\n      <!-- <a mat-list-item *ngIf=\\\"isAuthenticated && router.url.includes('/asset/')\\\" routerLinkActive=\\\"active-list-item\\\" (click) = \\\"navToAssets()\\\">Assets</a> -->\\r\\n      <a mat-list-item *ngIf=\\\"isAuthenticated && router.url.includes('/asset/')\\\" routerLinkActive=\\\"active-list-item\\\" (click) = \\\"navTo('missionController')\\\">Mission Controller</a>\\r\\n      <a mat-list-item *ngIf=\\\"isAuthenticated && router.url.includes('/asset/')\\\" routerLinkActive=\\\"active-list-item\\\" (click) = \\\"navTo('dashboard')\\\">Dashboard</a>\\r\\n      <a mat-list-item *ngIf=\\\"isAuthenticated && router.url.includes('/asset/')\\\" routerLinkActive=\\\"active-list-item\\\" (click) = \\\"navTo('events')\\\">Events</a>\\r\\n      <a mat-list-item *ngIf=\\\"isAuthenticated\\\" routerLinkActive=\\\"active-list-item\\\" (click)=\\\"onLogout()\\\" routerLink=\\\"#\\\">Logout</a>\\r\\n      <a mat-list-item *ngIf=\\\"!isAuthenticated\\\" routerLinkActive=\\\"active-list-item\\\" routerLink=\\\"/auth\\\">Login</a>\\r\\n    </mat-nav-list>\\r\\n    <div class=\\\"footer\\\" >\\r\\n      <a style=\\\"padding: 10px;\\\" href=\\\"https://atman-iot.com/\\\">© Powered by Atman-IoT</a>\\r\\n    </div>\\r\\n  </mat-sidenav>\\r\\n  <mat-sidenav-content>\\r\\n    <mat-toolbar-row style=\\\"height: 50px; background-color: inherit;\\\" >\\r\\n      <div *ngIf=\\\"isHandset$ | async\\\" class=\\\"row justify-content-between\\\">\\r\\n        <div class=\\\"col centerize\\\">\\r\\n          <button \\r\\n            type=\\\"button\\\"\\r\\n            aria-label=\\\"Toggle sidenav\\\"\\r\\n            mat-icon-button\\r\\n            (click)=\\\"drawer.toggle()\\\">\\r\\n            <mat-icon aria-label=\\\"Side nav toggle icon\\\">menu</mat-icon> \\r\\n          </button>\\r\\n        </div>\\r\\n        <div class=\\\"col centerize\\\">\\r\\n          <h6>{{routerOutletComponentClassName}}</h6>\\r\\n        </div>\\r\\n      </div>      \\r\\n    </mat-toolbar-row>\\r\\n    <div id=\\\"main\\\" class=\\\"bgimg\\\">\\r\\n      <div class=\\\"main-content\\\"style=\\\"margin-top: 10px;\\\">\\r\\n        <router-outlet (activate)=\\\"onActivate($event)\\\"></router-outlet>\\r\\n      </div>\\r\\n    </div>\\r\\n  </mat-sidenav-content>\\r\\n</mat-sidenav-container>\\r\\n\"","export default \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <mat-accordion>\\r\\n                <mat-expansion-panel #panel class=\\\"mt-4 mb-2\\\">\\r\\n                    <mat-expansion-panel-header class=\\\"unopened\\\">\\r\\n                        Upload Mission\\r\\n                    </mat-expansion-panel-header>\\r\\n                    <form #form>\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                          <label for=\\\"missionName\\\" class=\\\"col-sm-2 col-form-label\\\">Name:</label>\\r\\n                          <div class=\\\"col-sm-10\\\">\\r\\n                            <input [(ngModel)]=\\\"missionName\\\" [ngModelOptions]=\\\"{standalone: true}\\\" style= \\\"width:100%;\\\" type=\\\"text\\\" id=\\\"missionName\\\" class=\\\"form-control\\\" placeholder=\\\"Mission Name\\\">                          \\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                          <label class=\\\"col-sm-2 col-form-label\\\">File:</label>\\r\\n                          <div class=\\\"col-sm-10\\\">\\r\\n                            <input type=\\\"file\\\" (change)=\\\"handleFileInput($event)\\\"> \\r\\n                            <!-- <input [(ngModel)]=\\\"selectedFile\\\" [ngModelOptions]=\\\"{standalone: true}\\\" type=\\\"file\\\" id=\\\"selectedFile\\\"> -->\\r\\n                          </div>\\r\\n                        </div>\\r\\n                        <div class=\\\"form-group row\\\">\\r\\n                            <div class=\\\"btn btn-primary mr-4\\\" (click) = \\\"loadMission();panel.close();\\\">\\r\\n                                Upload\\r\\n                            </div>\\r\\n                            <div class=\\\"btn btn-primary\\\" (click) = \\\"panel.close();\\\">\\r\\n                                Cancel\\r\\n                            </div>\\r\\n                        </div>\\r\\n                      </form>\\r\\n                </mat-expansion-panel>\\r\\n            </mat-accordion>\\r\\n        </div>\\r\\n    </div>\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\">\\r\\n            <div *ngFor=\\\"let mission of tempMissionsList\\\">\\r\\n                <app-mission [missionTitle] = \\\"mission\\\"></app-mission>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<div class=\\\"container\\\">\\r\\n    <mat-card class=\\\"border border-primary m-4\\\">\\r\\n        <mat-card-title>\\r\\n            Mission Control\\r\\n        </mat-card-title>\\r\\n        <mat-card-content>\\r\\n                <div class=\\\"row d-flex justify-content-center\\\">\\r\\n                    <mat-form-field appearance=\\\"fill\\\">\\r\\n                        <mat-label>Select Mission</mat-label>\\r\\n                        <mat-select [(ngModel)]=\\\"selectedMission\\\" name=\\\"mission\\\">\\r\\n                            <mat-option *ngFor=\\\"let mission of tempMissionList\\\" [value]=\\\"mission\\\">\\r\\n                                {{mission}}\\r\\n                            </mat-option>\\r\\n                        </mat-select>\\r\\n                    </mat-form-field>\\r\\n                </div>\\r\\n                <div class=\\\"row justify-content-center\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <button (click)=\\\"onClickStart()\\\" [style.background]=\\\"color\\\">\\r\\n                            <mat-icon>{{selectedImage}}</mat-icon>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                        <button style=\\\"background-color: red;\\\" (click)=\\\"onClickStop()\\\">\\r\\n                            <mat-icon>stop</mat-icon>\\r\\n                        </button>\\r\\n                    </div>\\r\\n                </div>      \\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    <mat-card class=\\\"border border-primary m-4\\\">\\r\\n        <mat-card-title>\\r\\n            Current Mission\\r\\n        </mat-card-title>\\r\\n        <mat-card-content>\\r\\n             <!-- <h2>Name: {{currentMissionStatus.MissionName}}</h2>\\r\\n            <p>Status: {{currentMissionStatus.MissionStatus}}</p> -->\\r\\n            <h2>Name: Test</h2>\\r\\n            <h6>Status: Inactive</h6>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n    \\r\\n</div>\"","export default \"<mat-card class=\\\"border border-primary m-4\\\">\\r\\n    <mat-card-title>\\r\\n        Drone Status\\r\\n    </mat-card-title>\\r\\n    <mat-card-content>\\r\\n        <div class=\\\"row justify-content-between\\\">\\r\\n            <div class=\\\"col centerize\\\">\\r\\n                <img class=\\\"responsive\\\" src= {{fightStatusImageUrl}} style=\\\"width: 50%;\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col centerize\\\">\\r\\n                <img class=\\\"responsive\\\" src= {{vehicleModeImageUrl}} style=\\\"width: 50%;\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col centerize\\\">\\r\\n                <circle-progress\\r\\n                [radius] = \\\"100\\\"\\r\\n                [percent]=\\\"batteryStatus\\\"\\r\\n                [responsive] = \\\"true\\\"\\r\\n                [innerStrokeWidth] = \\\"2\\\"\\r\\n                [outerStrokeWidth] = \\\"4\\\"\\r\\n                [showBackground]=\\\"false\\\"\\r\\n                [outerStrokeColor]=\\\"'#78C000'\\\"\\r\\n                [innerStrokeColor]=\\\"'#C7E596'\\\"\\r\\n                [animation]=\\\"true\\\"\\r\\n                [animationDuration]=\\\"500\\\"\\r\\n              ></circle-progress>\\r\\n            </div>\\r\\n        </div>\\r\\n        <br>\\r\\n        <div class=\\\"btn btn-primary\\\" (click)=\\\"openDetails()\\\">\\r\\n            Details\\r\\n        </div>\\r\\n    </mat-card-content>\\r\\n</mat-card>\"","export default \"<mat-card class=\\\"border border-primary m-4\\\">\\r\\n    <mat-card-title>\\r\\n        Hangar Status\\r\\n    </mat-card-title>\\r\\n    <mat-card-content>\\r\\n        <div class=\\\" row justify-content-between\\\">\\r\\n            <div class=\\\"col\\\">\\r\\n                <img class=\\\"responsive\\\" src= {{hatchImageUrl}} style=\\\"width: 50%;\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                <img class=\\\"responsive\\\" src= {{dockingImageUrl}} style=\\\"width: 50%;\\\">\\r\\n            </div>\\r\\n            <div class=\\\"col\\\">\\r\\n                <img class=\\\"responsive\\\" src= {{chargingImageUrl}} style=\\\"width: 50%;\\\">\\r\\n            </div>\\r\\n            <!-- <div class=\\\"col\\\" *ngIf=\\\"hangarStatusResponse.Charging===True; else false\\\">\\r\\n                <img class=\\\"responsive\\\" src=\\\"assets/images/battery-charging.svg\\\" style=\\\"color: green\\\">\\r\\n            </div>\\r\\n            <ng-template #false>\\r\\n                <div class=\\\"col\\\">\\r\\n                    <img class=\\\"responsive\\\" src=\\\"assets/images/battery-charging.svg\\\" style=\\\"color: red;\\\">\\r\\n                </div>\\r\\n            </ng-template> -->\\r\\n        </div>\\r\\n    </mat-card-content>\\r\\n</mat-card>\"","export default \"<div *ngFor=\\\"let mission of history; let counter = index\\\" (click)='openThermography(mission.MissionName)'>\\r\\n    <mat-card class=\\\"border border-primary m-4\\\">\\r\\n        <mat-card-title>\\r\\n            {{mission.MissionName}}\\r\\n        </mat-card-title>\\r\\n        <mat-card-content>\\r\\n            <div class=\\\"row\\\">\\r\\n                <div class=\\\"col-3\\\">\\r\\n                    <div class=\\\"circle\\\"\\r\\n                            [ngStyle]=\\\"{'background-color': mission.StartEvent==='Timer'?'red' : 'yellow'}\\\"\\r\\n                            *ngIf=\\\"mission.StartEvent; else resolved\\\">\\r\\n                                {{counter+1}}\\r\\n                    </div>\\r\\n                    <ng-template #resolved>\\r\\n                        <div class=\\\"circle\\\" \\r\\n                        [ngStyle]=\\\"{'background-color': mission.StartEvent==='SolarMonitor '?'red' : 'yellow'}\\\">\\r\\n                            {{counter+1}}\\r\\n                        </div>\\r\\n                    </ng-template>\\r\\n                </div>\\r\\n                <div class=\\\"col-7\\\">\\r\\n                    <div class=\\\"col\\\">\\r\\n                        Start: {{mission.StartTime}}\\r\\n                    </div>\\r\\n                    <div class=\\\"col\\\">\\r\\n                        End: {{mission.FinishTime}}\\r\\n                    </div>\\r\\n                </div>\\r\\n            </div>\\r\\n        </mat-card-content>\\r\\n    </mat-card>\\r\\n</div>\"","export default \"<div class=\\\"container\\\">\\r\\n    <div class=\\\"row\\\">\\r\\n        <div class=\\\"col\\\"> \\r\\n            <div class=\\\"card\\\">\\r\\n                <mat-tab-group>\\r\\n                    <mat-tab label=\\\"Status\\\"> \\r\\n                        <app-status></app-status>\\r\\n                    </mat-tab>\\r\\n                    <mat-tab label=\\\"Controls\\\">\\r\\n                        <app-controls></app-controls>\\r\\n                    </mat-tab>\\r\\n                    <mat-tab label=\\\"Config\\\">\\r\\n                        <app-config></app-config>\\r\\n                    </mat-tab>\\r\\n                    <mat-tab label=\\\"History\\\">\\r\\n                        <app-history></app-history>\\r\\n                    </mat-tab>\\r\\n                </mat-tab-group>\\r\\n            </div>\\r\\n        </div>\\r\\n    </div>\\r\\n</div>\"","export default \"<mat-dialog-content>\\r\\n  <p>Set Mission Period</p>\\r\\n  <mat-form-field>\\r\\n    <input matInput name=\\\"TypeCode\\\" type=\\\"number\\\" id=\\\"myInput\\\" placeholder=\\\"Time\\\" [(ngModel)]=\\\"timeInput\\\"/>\\r\\n  </mat-form-field>\\r\\n  <select name=\\\"singleSelect\\\" [(ngModel)]=\\\"singleSelect\\\">\\r\\n    <option *ngFor=\\\"let option of valuesArray\\\" [value]=\\\"option\\\">{{option}}</option>\\r\\n  </select>\\r\\n</mat-dialog-content>\\r\\n<mat-dialog-actions>\\r\\n    <div class=\\\"row m-2\\\">\\r\\n        <div class=\\\"col-6\\\">\\r\\n            <button class=\\\"mat-raised-button mat-primary\\\"(click)=\\\"save()\\\">Save</button>\\r\\n        </div>\\r\\n        <div class=\\\"col-6\\\" style=\\\"text-align: end;\\\">\\r\\n            <button class=\\\"mat-raised-button\\\"(click)=\\\"close()\\\">Close</button>\\r\\n        </div>\\r\\n    </div>\\r\\n</mat-dialog-actions>\"","export default \"<mat-card class=\\\"border border-primary m-4\\\">\\r\\n    <mat-card-title class=\\\"mb-5\\\">\\r\\n        {{missionTitle}}\\r\\n    </mat-card-title>\\r\\n    <mat-card-content>\\r\\n        <div class=\\\"row\\\">\\r\\n            \\r\\n            <div class=\\\"col-3\\\">\\r\\n                <button class=\\\"default\\\" mat-raised-button style =\\\"position: absolute; bottom: 0;\\\" (click)=\\\"setMissionDefault(missionTitle);openDialog();\\\">\\r\\n                    <span>Set Default</span>\\r\\n                </button>\\r\\n                <!-- edw mporw na balw sto .ts file key value opou tha exei value to default h set default, h akm kltra 0,1 kai analoga to antistoixo text me tn opoia epilogh -->\\r\\n            </div>\\r\\n            <div class=\\\"col-3 offset-3\\\">\\r\\n                <button class=\\\"default\\\" mat-raised-button style =\\\"position: absolute; bottom: 0;\\\" (click)=\\\"removeMission(missionTitle)\\\">\\r\\n                    <span>Delete</span>\\r\\n                </button>\\r\\n            </div>\\r\\n        </div>\\r\\n    </mat-card-content>\\r\\n</mat-card>\\r\\n\"","export default \"<app-hangar-controller></app-hangar-controller>\\r\\n<app-drone-controller></app-drone-controller>\\r\\n<mat-card class=\\\"border border-primary m-4\\\">\\r\\n    <mat-card-title>\\r\\n        Current Mission\\r\\n    </mat-card-title>\\r\\n    <mat-card-content>\\r\\n            <!-- <h2>Name: {{currentMissionStatus.MissionName}}</h2>\\r\\n            <p>Status: {{currentMissionStatus.MissionStatus}}</p> -->\\r\\n            <h2>Name: Test</h2>\\r\\n            <h6>Status: Inactive</h6>\\r\\n    </mat-card-content>\\r\\n</mat-card>\\r\\n\"","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : new P(function (resolve) { resolve(result.value); }).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator], i = 0;\r\n    if (m) return m.call(o);\r\n    return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n","import { NgModule } from '@angular/core';\r\nimport { Routes, RouterModule} from '@angular/router';\r\nimport { AssetGroupsComponent } from './asset-groups/asset-groups.component';\r\nimport { AssetsComponent } from './assets/assets.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { EventsComponent } from './events/events.component';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { AuthGuardService } from './auth/auth-guard.service';\r\nimport { MissionControllerComponent } from './mission-controller/mission-controller.component';\r\nimport { ThermographyComponent } from './common/components/thermography/thermography.component';\r\nimport { ImageViewComponent } from './common/components/image-view/image-view.component';\r\nimport { DroneMapComponent } from './common/components/drone-map/drone-map.component';\r\n\r\n\r\nconst routes: Routes = [\r\n  {path: 'assetGroup/:id/asset/:id/:id/thermography', component: ThermographyComponent, canActivate: [AuthGuardService]},\r\n  {path: 'assetGroup/:id/asset/:id/dashboard', component: DashboardComponent, canActivate: [AuthGuardService]},\r\n  {path: 'assetGroup/:id/asset/:id/events', component: EventsComponent, canActivate: [AuthGuardService]},\r\n  {path: 'assetGroup/:id/asset/:id/missionController', component:  MissionControllerComponent, canActivate: [AuthGuardService]},\r\n  {path: 'assetGroup/:id/asset/:id/imageView', component: ImageViewComponent, canActivate: [AuthGuardService]},\r\n  {path: 'assetGroup/:id/asset/:id/droneMap', component: DroneMapComponent, canActivate: [AuthGuardService]},\r\n  // {path: 'assetGroup/:id/asset/:id/devices', component: AssetDevicesComponent, canActivate: [AuthGuardService]},\r\n  {path: 'assetGroup/:id', component: AssetsComponent, canActivate: [AuthGuardService]},\r\n  // {path: 'users/:id/assets', component: UserAssetComponent, canActivate: [AuthGuardService]},\r\n  // {path: 'devices', component: DeviceComponent, canActivate: [AuthGuardService]},\r\n  {path: 'assetGroups', component: AssetGroupsComponent, canActivate: [AuthGuardService]},\r\n  // {path: 'adminDashboard', component: AdminDashboardComponent, canActivate: [AuthGuardService]},\r\n  // {path: 'dataLoggers', component: DataLoggersComponent, canActivate: [AuthGuardService]},\r\n  // {path: 'users', component: UsersComponent, canActivate: [AuthGuardService]},\r\n  {path: 'auth', component: AuthComponent},\r\n  {path: '', redirectTo: '/assetGroups', pathMatch: 'full'},\r\n  {path: '**', redirectTo: '/assetGroups', pathMatch: 'full'},\r\n];\r\n\r\n@NgModule({\r\n  imports: [RouterModule.forRoot(routes)],\r\n  exports: [RouterModule]\r\n})\r\nexport class AppRoutingModule { }\r\n","export default \"/* .header {\\r\\n    overflow: hidden;\\r\\n} */\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXBwLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7O0dBRUciLCJmaWxlIjoic3JjL2FwcC9hcHAuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi8qIC5oZWFkZXIge1xyXG4gICAgb3ZlcmZsb3c6IGhpZGRlbjtcclxufSAqL1xyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { AuthService } from './auth/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n  styleUrls: ['./app.component.css']\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'Pv-Auto-Scout';\r\n\r\n  constructor(private authService: AuthService) {}\r\n\r\n  ngOnInit() {\r\n    this.authService.autoLogin();\r\n  }\r\n}\r\n","import { BrowserModule } from '@angular/platform-browser';\r\nimport { NgModule } from '@angular/core';\r\nimport { HttpClientModule, HTTP_INTERCEPTORS } from '@angular/common/http';\r\nimport { FormsModule, ReactiveFormsModule } from '@angular/forms';\r\nimport { GoogleChartsModule } from 'angular-google-charts';\r\n\r\nimport { AppRoutingModule } from './app-routing.module';\r\nimport { DropdownDirective } from './common/directives/dropdown.directive';\r\nimport { AppComponent } from './app.component';\r\nimport { HeaderComponent } from './header/header.component';\r\nimport { AssetGroupsComponent } from './asset-groups/asset-groups.component';\r\nimport { AssetsComponent } from './assets/assets.component';\r\nimport { DashboardComponent } from './dashboard/dashboard.component';\r\nimport { FooterComponent } from './footer/footer.component';\r\nimport { MediaObjectRoundPillComponent }\r\n  from './common/components/media-object-round-pill/media-object-round-pill.component';\r\nimport { MediaObjectRoundComponent } from './common/components/media-object-round/media-object-round.component';\r\nimport { EventsComponent } from './events/events.component';\r\nimport { PieChartComponent } from './common/components/charts/pie-chart/pie-chart.component';\r\nimport { AuthComponent } from './auth/auth.component';\r\nimport { LoadingSpinnerComponent } from './common/components/loading-spinner/loading-spinner.component';\r\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\r\nimport { MatRadioModule, MatInputModule, MatTabsModule, MatDatepickerModule, MatNativeDateModule, MatFormFieldModule, MatButtonModule, MatSidenavModule, MatCardModule, MatExpansionModule, MatDialogModule, MatCheckboxModule } from '@angular/material';\r\nimport { NotificationComponent } from './header/notification/notification.component';\r\nimport { AuthInterceptor } from './auth/auth.interceptor';\r\nimport { RouterModule } from '@angular/router';\r\nimport { AuthGuardService } from './auth/auth-guard.service';\r\nimport { MatMomentDateModule } from '@angular/material-moment-adapter';\r\nimport { SatDatepickerModule, SatNativeDateModule } from 'saturn-datepicker';\r\nimport { RangeFooterComponent } from './common/components/range-footer/range-footer.component';\r\nimport { NgbModule } from '@ng-bootstrap/ng-bootstrap';\r\nimport { YearComponentComponent } from './common/components/range-footer/year-component/year-component.component';\r\nimport { MonthComponentComponent } from './common/components/range-footer/month-component/month-component.component';\r\nimport { FulldateComponentComponent } from './common/components/range-footer/fulldate-component/fulldate-component.component';\r\nimport { MainNavComponent } from './main-nav/main-nav.component';\r\nimport { LayoutModule } from '@angular/cdk/layout';\r\nimport { MatToolbarModule } from '@angular/material/toolbar';\r\nimport { MatIconModule } from '@angular/material/icon';\r\nimport { MatListModule } from '@angular/material/list';\r\nimport { MissionControllerComponent } from './mission-controller/mission-controller.component';\r\nimport { HangarControllerComponent } from './mission-controller/hangar-controller/hangar-controller.component';\r\nimport { DroneControllerComponent } from './mission-controller/drone-controller/drone-controller.component';\r\nimport { NgCircleProgressModule } from 'ng-circle-progress';\r\nimport { StatusComponent } from './mission-controller/status/status.component';\r\nimport { ControlsComponent } from './mission-controller/controls/controls.component';\r\nimport { ConfigComponent } from './mission-controller/config/config.component';\r\nimport { HistoryComponent } from './mission-controller/history/history.component';\r\nimport { MatSelectModule } from '@angular/material/select';\r\nimport { MissionComponent } from './mission-controller/mission/mission.component';\r\nimport { DialogPopupComponent } from './mission-controller/mission/dialog-popup/dialog-popup.component';\r\nimport { AlertPopupComponent } from './common/components/popups/alert-popup/alert-popup.component';\r\nimport { ManagementPopupComponent } from './common/components/popups/management-popup/management-popup.component';\r\nimport { SelectPopupComponent } from './common/components/popups/select-popup/select-popup.component';\r\nimport { EditPopUpComponent } from './common/components/popups/edit-pop-up/edit-pop-up.component';\r\nimport { AddNewComponent } from './common/components/buttons/add-new/add-new.component';\r\nimport { ThermographyComponent } from './common/components/thermography/thermography.component';\r\nimport { DroneMapComponent } from './common/components/drone-map/drone-map.component';\r\nimport { ImageViewComponent } from './common/components/image-view/image-view.component';\r\nimport { AgmCoreModule } from '@agm/core';\r\nimport { ThermographyEventComponent } from './events/thermography-event/thermography-event.component';\r\nimport { TelemetryEventComponent } from './events/telemetry-event/telemetry-event.component';\r\n\r\n@NgModule({\r\n  declarations: [\r\n    AppComponent,\r\n    DropdownDirective,\r\n    HeaderComponent,\r\n    AssetGroupsComponent,\r\n    AssetsComponent,\r\n    DashboardComponent,\r\n    FooterComponent,\r\n    MediaObjectRoundPillComponent,\r\n    MediaObjectRoundComponent,\r\n    EventsComponent,\r\n    PieChartComponent,\r\n    AuthComponent,\r\n    LoadingSpinnerComponent,\r\n    NotificationComponent,\r\n    RangeFooterComponent,\r\n    YearComponentComponent,\r\n    MonthComponentComponent,\r\n    FulldateComponentComponent,\r\n    MainNavComponent,\r\n    MissionControllerComponent,\r\n    HangarControllerComponent,\r\n    DroneControllerComponent,\r\n    StatusComponent,\r\n    ControlsComponent,\r\n    ConfigComponent,\r\n    HistoryComponent,\r\n    MissionComponent,\r\n    DialogPopupComponent,\r\n    ManagementPopupComponent,\r\n    AlertPopupComponent,\r\n    SelectPopupComponent,\r\n    EditPopUpComponent,\r\n    AddNewComponent,\r\n    ThermographyComponent,\r\n    DroneMapComponent,\r\n    ImageViewComponent,\r\n    ThermographyEventComponent,\r\n    TelemetryEventComponent\r\n  ],\r\n  imports: [\r\n    BrowserModule,\r\n    GoogleChartsModule,\r\n    AppRoutingModule,\r\n    HttpClientModule,\r\n    FormsModule,\r\n    BrowserAnimationsModule,\r\n    MatInputModule,\r\n    MatRadioModule,\r\n    RouterModule,\r\n    MatTabsModule,\r\n    MatDatepickerModule,\r\n    MatNativeDateModule,\r\n    MatMomentDateModule,\r\n    ReactiveFormsModule,\r\n    MatFormFieldModule,\r\n    MatButtonModule,\r\n    SatDatepickerModule,\r\n    SatNativeDateModule,\r\n    NgbModule,\r\n    MatSidenavModule,\r\n    LayoutModule,\r\n    MatToolbarModule,\r\n    MatIconModule,\r\n    MatListModule,\r\n    MatCardModule,\r\n    MatSelectModule,\r\n    MatDialogModule,\r\n    MatExpansionModule,\r\n    MatCheckboxModule,\r\n    NgCircleProgressModule.forRoot({\r\n     }),\r\n    AgmCoreModule.forRoot({\r\n      apiKey: ''\r\n    })\r\n  ],\r\n  exports: [\r\n    RangeFooterComponent,\r\n    DialogPopupComponent,\r\n    ManagementPopupComponent,\r\n    SelectPopupComponent,\r\n    EditPopUpComponent,\r\n    AlertPopupComponent],\r\n  providers: [\r\n    AuthGuardService,\r\n    AssetGroupsComponent, {\r\n    provide: HTTP_INTERCEPTORS,\r\n    useClass: AuthInterceptor,\r\n    multi: true\r\n  }],\r\n  bootstrap: [AppComponent],\r\n  entryComponents: [\r\n    DialogPopupComponent,\r\n    ManagementPopupComponent,\r\n    SelectPopupComponent,\r\n    EditPopUpComponent,\r\n    AlertPopupComponent]\r\n})\r\nexport class AppModule { }\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fzc2V0LWdyb3Vwcy9hc3NldC1ncm91cHMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\nimport { take, exhaustMap } from 'rxjs/operators';\r\nimport { AssetGroupControllerService, AssetGroup, AssetGroupExcludingIdUserId } from '../rest';\r\nimport { AuthService } from '../auth/auth.service';\r\n\r\n@Component({\r\n  selector: 'app-asset-groups',\r\n  templateUrl: './asset-groups.component.html',\r\n  styleUrls: ['./asset-groups.component.css']\r\n})\r\nexport class AssetGroupsComponent implements OnInit {\r\n  isAdmin: boolean = true;\r\n  assetGroups: AssetGroup[];\r\n  serviceError: boolean = false;\r\n  loading: boolean = false;\r\n  newAssetGroup = <AssetGroupExcludingIdUserId>{};\r\n  assetGroupName: string;\r\n  assetGroupDescription: string;\r\n  edit:any;\r\n  delete:any;\r\n  constructor(\r\n    private router: Router,\r\n    private assetGroupControllerService: AssetGroupControllerService,\r\n    private authService: AuthService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.makeCall();\r\n  }\r\n\r\n  makeCall() {\r\n    this.loading = true;\r\n    this.assetGroups = [];\r\n    this.authService.token.pipe(take(1), exhaustMap(token => {\r\n      return this.assetGroupControllerService.assetGroupControllerFindUserAssetGroups();\r\n    }))\r\n    .subscribe(\r\n      value => {\r\n        if (value.length === 1) {\r\n          this.router.navigate(['assetGroup/' + value[0].id]);\r\n        }\r\n        this.assetGroups.push(...value);\r\n        this.loading = false;\r\n      },\r\n      errorRes => {\r\n        if (!errorRes.error || !errorRes.error.error || !errorRes.error.error.statusCode) {\r\n          this.serviceError = true;\r\n          this.loading = false;\r\n          return;\r\n        }\r\n        switch(parseInt(errorRes.error.error.statusCode)) {\r\n          case 401:\r\n            this.loading = false;\r\n            this.authService.logout();\r\n          case 406:\r\n            this.serviceError = true;\r\n            this.loading = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onAssetGroupSelect(id: number) {\r\n    this.router.navigate(['assetGroup/' + id]);\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Fzc2V0cy9hc3NldHMuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { take, exhaustMap } from 'rxjs/operators';\r\nimport { AssetControllerService, Asset, AssetExcludingId, AssetGroupControllerService, AssetGroup, AssetGroupExcludingIdUserId } from '../rest';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { MatDialogConfig, MatDialog } from '@angular/material/dialog';\r\nimport { EditPopUpComponent } from '../common/components/popups/edit-pop-up/edit-pop-up.component';\r\nimport { savedElement } from '../common/components/buttons/add-new/add-new.component';\r\n\r\n\r\n@Component({\r\n  selector: 'app-assets',\r\n  templateUrl: './assets.component.html',\r\n  styleUrls: ['./assets.component.css']\r\n})\r\nexport class AssetsComponent implements OnInit {\r\n  isAdmin: boolean = true;\r\n  isUser: boolean = true;\r\n  isDone: boolean = false;\r\n  assets: Asset[] = [];\r\n  serviceError: boolean = false;\r\n  loading: boolean = false;\r\n  newAsset = <AssetExcludingId>{};\r\n  assetName: string;\r\n  assetGroups: AssetGroup[] = [];\r\n  assetDescription: string;\r\n  selectedAssetGroupId: number = +this.route.snapshot.params['id'];\r\n  selectedAssetGroup: AssetGroup;\r\n  editMode: boolean = false;\r\n  edit: any;\r\n  delete: any;\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private dialog: MatDialog,\r\n    private assetControllerService: AssetControllerService,\r\n    private assetGroupControllerService: AssetGroupControllerService,\r\n    private authService: AuthService,\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.makeCallForAssets(this.selectedAssetGroupId);\r\n  }\r\n\r\n  makeCallForAssets(id: number) {\r\n    this.loading = true;\r\n    this.assets = [];\r\n    this.authService.token.pipe(take(1), exhaustMap(token => {\r\n      return this.assetControllerService.assetControllerFind(id)//isws prepei na to alla3w auto kai na to pairnw apo ton pinaka...will see\r\n    }))\r\n    .subscribe(\r\n      value => {\r\n        this.assets.push(...value);\r\n        this.loading = false;\r\n      },\r\n      errorRes => {\r\n        if(!errorRes.error || !errorRes.error.error || !errorRes.error.error.statusCode)\r\n        {\r\n          this.serviceError=true;\r\n          this.loading = false;\r\n          return;\r\n        }\r\n        \r\n        switch(parseInt(errorRes.error.error.statusCode)){\r\n          case 401:\r\n            this.authService.logout()\r\n            this.loading = false;\r\n          case 406:\r\n            this.serviceError=true;\r\n            this.loading = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  onAssetSelect(id: number) {\r\n    this.router.navigate(['./asset/' + id + '/dashboard'], { relativeTo: this.route });\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { Observable } from 'rxjs';\r\nimport { map, take } from 'rxjs/operators';\r\nimport { AuthService } from './auth.service';\r\nimport {\r\n  ActivatedRouteSnapshot,\r\n  CanActivate,\r\n  Router,\r\n  RouterStateSnapshot,\r\n  UrlTree\r\n}  from '@angular/router';\r\n\r\n\r\n@Injectable({providedIn: 'root'})\r\nexport class AuthGuardService implements CanActivate {\r\n  \r\n  constructor(\r\n    private authService: AuthService,\r\n    private router: Router\r\n  ){}\r\n  \r\n  canActivate(\r\n    route: ActivatedRouteSnapshot,\r\n    router: RouterStateSnapshot\r\n  ): boolean | UrlTree | Promise<boolean | UrlTree> | Observable<boolean | UrlTree>\r\n  {\r\n    return this.authService.token.pipe(\r\n      take(1),\r\n      map(token => {\r\n        const isAuth =  !!token;\r\n        if(isAuth) {\r\n          return true;}\r\n        return this.router.createUrlTree(['./auth']);\r\n      })\r\n    );\r\n  }\r\n}","export default \"label {\\r\\n   font-weight: bold;\\r\\n}\\r\\n\\r\\n.allign-center {\\r\\n  text-align: center;\\r\\n}\\r\\n\\r\\n.btn-primary {\\r\\n  background-color: rgb(113, 171, 193);\\r\\n  border-color: rgb(113, 171, 193);\\r\\n}\\r\\n\\r\\n.btn-primary:focus, .btn-primary:active {\\r\\n  background-color: rgb(33, 107, 136)!important;\\r\\n  border-color: rgb(33, 107, 136)!important;    \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvYXV0aC9hdXRoLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7R0FDRyxpQkFBaUI7QUFDcEI7O0FBRUE7RUFDRSxrQkFBa0I7QUFDcEI7O0FBRUE7RUFDRSxvQ0FBb0M7RUFDcEMsZ0NBQWdDO0FBQ2xDOztBQUVBO0VBQ0UsNkNBQTZDO0VBQzdDLHlDQUF5QztBQUMzQyIsImZpbGUiOiJzcmMvYXBwL2F1dGgvYXV0aC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibGFiZWwge1xyXG4gICBmb250LXdlaWdodDogYm9sZDtcclxufVxyXG5cclxuLmFsbGlnbi1jZW50ZXIge1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufVxyXG5cclxuLmJ0bi1wcmltYXJ5IHtcclxuICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMTEzLCAxNzEsIDE5Myk7XHJcbiAgYm9yZGVyLWNvbG9yOiByZ2IoMTEzLCAxNzEsIDE5Myk7XHJcbn1cclxuXHJcbi5idG4tcHJpbWFyeTpmb2N1cywgLmJ0bi1wcmltYXJ5OmFjdGl2ZSB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDMzLCAxMDcsIDEzNikhaW1wb3J0YW50O1xyXG4gIGJvcmRlci1jb2xvcjogcmdiKDMzLCAxMDcsIDEzNikhaW1wb3J0YW50OyAgICBcclxufSJdfQ== */\"","import { Component, OnInit, ViewChild } from '@angular/core';\r\nimport { NgForm } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { UserExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode, UserExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode } from '../rest';\r\nimport { AuthService } from './auth.service'\r\n\r\n@Component({\r\n  selector: 'app-auth',\r\n  templateUrl: './auth.component.html',\r\n  styleUrls: ['./auth.component.css']\r\n})\r\nexport class AuthComponent implements OnInit {\r\n  error: string = null;\r\n  isLoading = false;\r\n  loginMode=true;\r\n  \r\n  user = <UserExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode>{};\r\n  credentials = <UserExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode> {};\r\n  \r\n  repeatPasswd:string;\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private authService: AuthService\r\n  ) {}\r\n\r\n  ngOnInit() {\r\n    //\r\n  }\r\n  \r\n  onSwitchMode() {\r\n    this.loginMode = ! this.loginMode;\r\n  }\r\n  \r\n  onSubmit(form: NgForm) {\r\n    if(this.loginMode)\r\n    {\r\n      this.credentials.username = this.user.email;\r\n      this.credentials.passwd = this.user.passwd;\r\n      \r\n      this.authService.login(this.credentials).subscribe(\r\n        response => {\r\n          this.isLoading = false;\r\n          this.router.navigate([\"/assetGroups\"]);\r\n        },\r\n        errorMessage => {\r\n          console.log(errorMessage);\r\n          this.error=errorMessage;\r\n          this.authService.logout();\r\n          this.isLoading = false;\r\n        }\r\n      );\r\n    }\r\n    else\r\n    {\r\n      this.user.email = this.user.email;\r\n      this.isLoading = true;\r\n      this.authService.register(this.user).subscribe(\r\n        response => {\r\n          this.isLoading = false;\r\n        },\r\n        errorMessage => {\r\n          console.log(errorMessage);\r\n          this.error=errorMessage;\r\n          this.authService.logout();\r\n          this.isLoading = false;\r\n        }\r\n      );      \r\n    }\r\n  }\r\n}\r\n","import { Injectable } from '@angular/core';\r\nimport { HttpInterceptor, HttpRequest, HttpHandler, HttpEvent, HttpResponse, HttpErrorResponse } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { map } from 'rxjs/operators';\r\nimport { Token } from '../rest/model/token';\r\nimport { AuthService } from './auth.service';\r\n\r\n@Injectable()\r\nexport class AuthInterceptor implements HttpInterceptor {\r\n    constructor(public authService: AuthService){}\r\n    \r\n    intercept(request: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>> {\r\n        const token: Token = JSON.parse(localStorage.getItem('token'));\r\n\r\n        if (token) {\r\n            request = request.clone({ headers: request.headers.set('Authorization', 'Bearer ' + token.token) });\r\n        }\r\n\r\n        if (!request.headers.has('Content-Type')) {\r\n            request = request.clone({ headers: request.headers.set('Content-Type', 'application/json') });\r\n        }\r\n\r\n        request = request.clone({ headers: request.headers.set('Accept', 'application/json') });\r\n\r\n        return next.handle(request).pipe(\r\n            map((event: HttpEvent<any>) => {\r\n                //console.log(event);\r\n                return event;\r\n            },(error: any) =>{\r\n                if (error instanceof HttpErrorResponse) {\r\n                    if (error.status === 401) {\r\n                        //console.log('hello');\r\n                        this.authService.logout();\r\n                    }\r\n                  }\r\n            }));\r\n    }\r\n}","import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport {\r\n  UserExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode,\r\n  UserExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode,\r\n  Token,\r\n  User,\r\n  UserControllerService\r\n} from '../rest';\r\nimport { Router } from '@angular/router';\r\n\r\nimport { catchError, tap } from 'rxjs/operators';\r\nimport { throwError, BehaviorSubject } from 'rxjs';\r\n\r\n\r\n@Injectable({providedIn:'root'})\r\nexport class AuthService {\r\n  token = new BehaviorSubject<Token>(null);\r\n  \r\n  constructor(\r\n    private http: HttpClient,\r\n    private userControllerService: UserControllerService,\r\n    private router: Router\r\n  ) {}\r\n  \r\n  autoLogin() {\r\n    const _token = JSON.parse(localStorage.getItem('token'));\r\n    //console.log(_token);\r\n    \r\n    if(!_token) return;\r\n    \r\n    this.token.next(_token);\r\n  }\r\n  \r\n  login(credentials: UserExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode) {\r\n    return this.userControllerService\r\n    .userControllerLogin(credentials)\r\n    .pipe(\r\n      catchError(errorRes => {\r\n        //console.log(errorRes);\r\n        let errorMessage = 'An error occured!';\r\n      \r\n        if(!errorRes.error || !errorRes.error.error || !errorRes.error.error.statusCode)\r\n        {\r\n          return throwError(errorMessage);\r\n        }\r\n      \r\n        switch(parseInt(errorRes.error.error.statusCode)){\r\n          case 401:\r\n            errorMessage='Invalid Login!';\r\n        }\r\n        return throwError(errorMessage);\r\n      }),\r\n      tap(token => {\r\n        this.token.next(token);\r\n        localStorage.setItem('token', JSON.stringify(token));\r\n      })\r\n    );\r\n  }\r\n  \r\n  logout() {\r\n    this.token.next(null);\r\n    this.router.navigate([\"/auth\"]);\r\n    localStorage.removeItem('token');\r\n  }\r\n  \r\n  register(newUser: UserExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode) {\r\n    return this.userControllerService\r\n    .userControllerCreate('AUTH-REF--WILL-FAIL',newUser)\r\n    .pipe(catchError(errorRes => {\r\n      \r\n      let errorMessage = 'An error occured!';\r\n      \r\n      if(!errorRes.error || !errorRes.error.error)\r\n      {\r\n        return throwError(errorMessage);\r\n      }\r\n      \r\n      switch(parseInt(errorRes.error.error.statusCode)){\r\n        case 422:\r\n          errorMessage='User already exists';\r\n      }\r\n      return throwError(errorMessage);\r\n    }));\r\n  }\r\n}","export default \"::ng-deep mat-expansion-panel-header > .mat-content {\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n}\\r\\n::ng-deep mat-expansion-panel {\\r\\n    border-radius: 30px!important;\\r\\n}\\r\\n.unopened {\\r\\n    background-color: rgb(113, 171, 193);\\r\\n}\\r\\n.unopened:hover,\\r\\n.unopened:focus {\\r\\n    background: rgb(113, 171, 193)!important;\\r\\n}\\r\\n.mat-expansion-panel-header.mat-expanded {\\r\\n    background: none!important;\\r\\n}\\r\\n.mat-expansion-panel.mat-expanded {\\r\\n    border: solid 2px rgb(113, 171, 193)!important;\\r\\n}\\r\\n.btn-primary {\\r\\n    background-color: rgb(113, 171, 193);\\r\\n    border-color: rgb(113, 171, 193);\\r\\n}\\r\\n.btn-primary:focus, .btn-primary:active {\\r\\n    background-color: rgb(33, 107, 136)!important;\\r\\n    border-color: rgb(33, 107, 136)!important;    \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvYnV0dG9ucy9hZGQtbmV3L2FkZC1uZXcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHdCQUF1QjtZQUF2Qix1QkFBdUI7QUFDM0I7QUFDQTtJQUNJLDZCQUE2QjtBQUNqQztBQUNBO0lBQ0ksb0NBQW9DO0FBQ3hDO0FBQ0E7O0lBRUksd0NBQXdDO0FBQzVDO0FBQ0E7SUFDSSwwQkFBMEI7QUFDOUI7QUFDQTtJQUNJLDhDQUE4QztBQUNsRDtBQUNBO0lBQ0ksb0NBQW9DO0lBQ3BDLGdDQUFnQztBQUNwQztBQUNBO0lBQ0ksNkNBQTZDO0lBQzdDLHlDQUF5QztBQUM3QyIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL2J1dHRvbnMvYWRkLW5ldy9hZGQtbmV3LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAgbWF0LWV4cGFuc2lvbi1wYW5lbC1oZWFkZXIgPiAubWF0LWNvbnRlbnQge1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn1cclxuOjpuZy1kZWVwIG1hdC1leHBhbnNpb24tcGFuZWwge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMzBweCFpbXBvcnRhbnQ7XHJcbn1cclxuLnVub3BlbmVkIHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxMTMsIDE3MSwgMTkzKTtcclxufVxyXG4udW5vcGVuZWQ6aG92ZXIsXHJcbi51bm9wZW5lZDpmb2N1cyB7XHJcbiAgICBiYWNrZ3JvdW5kOiByZ2IoMTEzLCAxNzEsIDE5MykhaW1wb3J0YW50O1xyXG59XHJcbi5tYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlci5tYXQtZXhwYW5kZWQge1xyXG4gICAgYmFja2dyb3VuZDogbm9uZSFpbXBvcnRhbnQ7XHJcbn1cclxuLm1hdC1leHBhbnNpb24tcGFuZWwubWF0LWV4cGFuZGVkIHtcclxuICAgIGJvcmRlcjogc29saWQgMnB4IHJnYigxMTMsIDE3MSwgMTkzKSFpbXBvcnRhbnQ7XHJcbn1cclxuLmJ0bi1wcmltYXJ5IHtcclxuICAgIGJhY2tncm91bmQtY29sb3I6IHJnYigxMTMsIDE3MSwgMTkzKTtcclxuICAgIGJvcmRlci1jb2xvcjogcmdiKDExMywgMTcxLCAxOTMpO1xyXG59XHJcbi5idG4tcHJpbWFyeTpmb2N1cywgLmJ0bi1wcmltYXJ5OmFjdGl2ZSB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZ2IoMzMsIDEwNywgMTM2KSFpbXBvcnRhbnQ7XHJcbiAgICBib3JkZXItY29sb3I6IHJnYigzMywgMTA3LCAxMzYpIWltcG9ydGFudDsgICAgXHJcbn0iXX0= */\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\nexport interface savedElement {\n  name: string,\n  description: string\n};\n\n@Component({\n  selector: 'app-add-new',\n  templateUrl: './add-new.component.html',\n  styleUrls: ['./add-new.component.css']\n})\nexport class AddNewComponent implements OnInit {\n  assetGroupName: string;\n  assetGroupDescription: string;\n\n  @Input() element: {title: string, placeholder1: string, placeholder2: string};\n  @Output() saveThis = new EventEmitter<savedElement>();\n  savedElement: { name: string; description: string; };\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  callParentSave() {\n    this.savedElement = {name: this.assetGroupName, description: this.assetGroupDescription};\n    this.saveThis.next(this.savedElement);\n  }\n\n}\n","export default \".card-header-tabs{\\r\\n    margin : 0;\\r\\n    border-bottom: 0;\\r\\n}\\r\\n.nav-tabs{\\r\\n    border-bottom: none;\\r\\n}\\r\\n.nav-tabs > li.nav-item > a.nav-link {\\r\\n  background: none;\\r\\n  color: grey;\\r\\n}\\r\\n.btn.btn-primary:active,\\r\\n.btn.btn-primary:focus {\\r\\n    background-color: transparent;\\r\\n    border-color: transparent;\\r\\n    color: red;\\r\\n}\\r\\n.btn.btn-primary{\\r\\n    background-color: transparent;\\r\\n    border-color: transparent;\\r\\n    color: black;\\r\\n}\\r\\n.btn-primary:not(:disabled):not(.disabled).active{\\r\\n    background-color: transparent;\\r\\n    border-color: transparent;\\r\\n    color: red;\\r\\n}\\r\\n.btn-danger:not(:disabled):not(.disabled).active{\\r\\n    background-color: red;\\r\\n}\\r\\n.btn-danger{\\r\\n    background-color: white;\\r\\n    color: black;\\r\\n}\\r\\n.but {\\r\\n    border-color: transparent;\\r\\n    color: black;\\r\\n    border: 0;\\r\\n}\\r\\n.but:hover {\\r\\n    background: #f44336;\\r\\n}\\r\\n.but:focus {\\r\\n    border-color: transparent;\\r\\n    border: none;\\r\\n    outline: none;\\r\\n}\\r\\n.but:not(:disabled):not(.disabled).active {\\r\\n    color: red;\\r\\n}\\r\\n.unstyled-button {\\r\\n    border: none;\\r\\n    padding: 10px;\\r\\n    background: none;\\r\\n  }\\r\\n.unstyled-button:focus{\\r\\n    outline: none;\\r\\n    color: red;\\r\\n}\\r\\n.btn:focus {\\r\\n    outline: none;\\r\\n}\\r\\n.unstyled-button:active {\\r\\n    color: red;\\r\\n}\\r\\n.unstyled-button:not(:disabled):not(.disabled).active {\\r\\n    color: red;\\r\\n}\\r\\n/* #chart_wrap {\\r\\n    position: relative;\\r\\n    padding-bottom: 100%;\\r\\n    height: 0;\\r\\n    overflow:hidden;\\r\\n    margin: 0;\\r\\n}\\r\\n#linechart {\\r\\n    position: absolute;\\r\\n    top: 0;\\r\\n    left: 0;\\r\\n    width:100%;\\r\\n    height:500px;\\r\\n}  */\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvY2hhcnRzL3BpZS1jaGFydC9waWUtY2hhcnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7SUFDVixnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLG1CQUFtQjtBQUN2QjtBQUNBO0VBQ0UsZ0JBQWdCO0VBQ2hCLFdBQVc7QUFDYjtBQUVBOztJQUVJLDZCQUE2QjtJQUM3Qix5QkFBeUI7SUFDekIsVUFBVTtBQUNkO0FBQ0E7SUFDSSw2QkFBNkI7SUFDN0IseUJBQXlCO0lBQ3pCLFlBQVk7QUFDaEI7QUFFQTtJQUNJLDZCQUE2QjtJQUM3Qix5QkFBeUI7SUFDekIsVUFBVTtBQUNkO0FBRUE7SUFDSSxxQkFBcUI7QUFDekI7QUFDQTtJQUNJLHVCQUF1QjtJQUN2QixZQUFZO0FBQ2hCO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLFNBQVM7QUFDYjtBQUNBO0lBQ0ksbUJBQW1CO0FBQ3ZCO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsWUFBWTtJQUNaLGFBQWE7QUFDakI7QUFDQTtJQUNJLFVBQVU7QUFDZDtBQUNBO0lBQ0ksWUFBWTtJQUNaLGFBQWE7SUFDYixnQkFBZ0I7RUFDbEI7QUFDRjtJQUNJLGFBQWE7SUFDYixVQUFVO0FBQ2Q7QUFDQTtJQUNJLGFBQWE7QUFDakI7QUFDQTtJQUNJLFVBQVU7QUFDZDtBQUNBO0lBQ0ksVUFBVTtBQUNkO0FBQ0E7Ozs7Ozs7Ozs7Ozs7SUFhSSIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL2NoYXJ0cy9waWUtY2hhcnQvcGllLWNoYXJ0LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2FyZC1oZWFkZXItdGFic3tcclxuICAgIG1hcmdpbiA6IDA7XHJcbiAgICBib3JkZXItYm90dG9tOiAwO1xyXG59XHJcbi5uYXYtdGFic3tcclxuICAgIGJvcmRlci1ib3R0b206IG5vbmU7XHJcbn1cclxuLm5hdi10YWJzID4gbGkubmF2LWl0ZW0gPiBhLm5hdi1saW5rIHtcclxuICBiYWNrZ3JvdW5kOiBub25lO1xyXG4gIGNvbG9yOiBncmV5O1xyXG59XHJcblxyXG4uYnRuLmJ0bi1wcmltYXJ5OmFjdGl2ZSxcclxuLmJ0bi5idG4tcHJpbWFyeTpmb2N1cyB7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcbi5idG4uYnRuLXByaW1hcnl7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbn1cclxuXHJcbi5idG4tcHJpbWFyeTpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmV7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcblxyXG4uYnRuLWRhbmdlcjpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmV7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbn1cclxuLmJ0bi1kYW5nZXJ7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiB3aGl0ZTtcclxuICAgIGNvbG9yOiBibGFjaztcclxufVxyXG4uYnV0IHtcclxuICAgIGJvcmRlci1jb2xvcjogdHJhbnNwYXJlbnQ7XHJcbiAgICBjb2xvcjogYmxhY2s7XHJcbiAgICBib3JkZXI6IDA7XHJcbn1cclxuLmJ1dDpob3ZlciB7XHJcbiAgICBiYWNrZ3JvdW5kOiAjZjQ0MzM2O1xyXG59XHJcbi5idXQ6Zm9jdXMge1xyXG4gICAgYm9yZGVyLWNvbG9yOiB0cmFuc3BhcmVudDtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbn1cclxuLmJ1dDpub3QoOmRpc2FibGVkKTpub3QoLmRpc2FibGVkKS5hY3RpdmUge1xyXG4gICAgY29sb3I6IHJlZDtcclxufVxyXG4udW5zdHlsZWQtYnV0dG9uIHtcclxuICAgIGJvcmRlcjogbm9uZTtcclxuICAgIHBhZGRpbmc6IDEwcHg7XHJcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xyXG4gIH1cclxuLnVuc3R5bGVkLWJ1dHRvbjpmb2N1c3tcclxuICAgIG91dGxpbmU6IG5vbmU7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcbi5idG46Zm9jdXMge1xyXG4gICAgb3V0bGluZTogbm9uZTtcclxufVxyXG4udW5zdHlsZWQtYnV0dG9uOmFjdGl2ZSB7XHJcbiAgICBjb2xvcjogcmVkO1xyXG59XHJcbi51bnN0eWxlZC1idXR0b246bm90KDpkaXNhYmxlZCk6bm90KC5kaXNhYmxlZCkuYWN0aXZlIHtcclxuICAgIGNvbG9yOiByZWQ7XHJcbn1cclxuLyogI2NoYXJ0X3dyYXAge1xyXG4gICAgcG9zaXRpb246IHJlbGF0aXZlO1xyXG4gICAgcGFkZGluZy1ib3R0b206IDEwMCU7XHJcbiAgICBoZWlnaHQ6IDA7XHJcbiAgICBvdmVyZmxvdzpoaWRkZW47XHJcbiAgICBtYXJnaW46IDA7XHJcbn1cclxuI2xpbmVjaGFydCB7XHJcbiAgICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgICB0b3A6IDA7XHJcbiAgICBsZWZ0OiAwO1xyXG4gICAgd2lkdGg6MTAwJTtcclxuICAgIGhlaWdodDo1MDBweDtcclxufSAgKi9cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport * as Chart from 'chart.js';\r\nimport { DeviceChannelControllerService, ResponseDeviceChannelData } from 'src/app/rest';\r\nimport * as moment from 'moment';\r\nimport { forkJoin, of, Observable, Subscription } from 'rxjs';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { DataService } from '../../../../services/data-service';\r\nimport {rotate270} from '2d-array-rotation';\r\nimport * as $ from 'jquery';\r\n\r\n@Component({\r\n  selector: 'app-pie-chart',\r\n  templateUrl: './pie-chart.component.html',\r\n  styleUrls: ['./pie-chart.component.css']\r\n})\r\nexport class PieChartComponent implements OnInit {\r\n  error: string = null;\r\n  isLoading = false;\r\n  title = 'The first google chart';\r\n  type = 'LineChart';\r\n  canvas: any;\r\n  ctx: any;\r\n  myChart: any;\r\n  dataArray: Array<object> = [];\r\n  randomColors: string[] = [];\r\n  allData = {labels: [], datasets: []};\r\n  today = new Date();\r\n  clicked = false;\r\n  fromDate: Date = new Date();\r\n  allRows = [];\r\n  period: number;\r\n  allChannels = [];\r\n  subscription: Subscription;\r\n  // options = {\r\n  //   colors: this.randomColors,\r\n  //   legend: { position: 'top' },\r\n  //   explorer: {\r\n  //     actions: ['dragToZoom', 'rightClickToReset'],\r\n  //     axis: 'horizontal',\r\n  //     keepInBounds: true\r\n  // }\r\n  // };\r\n\r\n  public deviceArray = [\r\n    {deviceId: 101, channelId: 1665},\r\n    {deviceId: 101, channelId: 1666},\r\n    {deviceId: 102, channelId: 1695},\r\n    {deviceId: 102, channelId: 1696},\r\n    {deviceId: 103, channelId: 1725},\r\n    {deviceId: 103, channelId: 1726},\r\n    {deviceId: 104, channelId: 1755},\r\n    {deviceId: 104, channelId: 1756},\r\n    {deviceId: 105, channelId: 1785},\r\n    {deviceId: 105, channelId: 1786},\r\n    {deviceId: 106, channelId: 1815},\r\n    {deviceId: 106, channelId: 1816},\r\n  ];\r\n\r\n  public selection = 'day';\r\n  public depth = 1;\r\n  public offset = 0;\r\n  public buttonGroup = [\r\n    {text: 'Plant', isClicked: false},\r\n    {text: 'Inverters', isClicked: true}\r\n  ];\r\n  public buttonGroup2 = [\r\n    {text: 'day', isClicked: true},\r\n    {text: 'month', isClicked: false},\r\n    {text: 'year', isClicked: false}\r\n  ];\r\n  public selectedDeviceObj = this.buttonGroup2[0];\r\n  public selected2 = this.buttonGroup[1];\r\n\r\n  constructor(\r\n    private deviceChannelControllerService: DeviceChannelControllerService,\r\n    public authService: AuthService,\r\n    private service: DataService\r\n  ) { }\r\n\r\n  ngOnInit() {\r\n    this.subscription = this.service.$fromDate\r\n    .subscribe( (data) => {\r\n      this.fromDate = data;\r\n      this.onRequest();\r\n    }, error => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.subscription.unsubscribe();\r\n  }\r\n\r\n  onRequest() {\r\n    const today = this.fromDate;\r\n    const tomorrow = moment(today).add(1, 'days').toDate();\r\n\r\n    const allRequests: Observable<ResponseDeviceChannelData>[] = [];\r\n    const allResponses: ResponseDeviceChannelData[] = [];\r\n    for (const i in this.deviceArray) {\r\n      allRequests\r\n      .push(this.deviceChannelControllerService.deviceChannelControllerFindByPeriod(this.deviceArray[i].deviceId,\r\n        + this.deviceArray[i].channelId, today.toString(), tomorrow.toString(), 0, 200, 'none', 'none'));\r\n    }\r\n\r\n    forkJoin(allRequests)\r\n    .subscribe\r\n    (responses => {\r\n      allResponses.push(...responses);\r\n      for (let countResponse in responses) {\r\n        const color = (this.getRandomColor());\r\n        this.randomColors.push(color);\r\n      }\r\n      this.addValue(responses);\r\n    },\r\n    errorMessage => {\r\n      // this.authService.logout();\r\n      console.log(errorMessage);\r\n    });\r\n  }\r\n\r\n  getRandomColor() {\r\n    const letters = '0123456789ABCDEF'.split('');\r\n    let color = '#';\r\n    for (let i = 0; i < 6; i++ ) {\r\n        color += letters[Math.floor(Math.random() * 16)];\r\n    }\r\n    return color;\r\n  }\r\n\r\n  setActive(button) {\r\n    for (const but of this.buttonGroup) {\r\n      but.isClicked = false;\r\n    }\r\n    button.isClicked = true;\r\n    this.onRequest();\r\n    // if (button.text === 'Plant' && button.isClicked) {\r\n    //   this.createPlant();\r\n    // } else if (button.text === 'Inverters' && button.isClicked) {\r\n    //   this.createInverter();\r\n    // }\r\n  }\r\n\r\n  onSelect(selectionObj) {\r\n    for (const but of this.buttonGroup2) {\r\n      but.isClicked = false;\r\n    }\r\n    selectionObj.isClicked = true;\r\n    this.selection = selectionObj.text;\r\n    this.onRequest();\r\n  }\r\n\r\n  createPlant() {\r\n    google.charts.load('current', { packages: ['corechart'] });\r\n    const testparam = this.allRows;\r\n    const randomColor = this.randomColors;\r\n    google.charts.setOnLoadCallback(drawThisChart);\r\n    function drawThisChart() {\r\n      const dataRow = [];\r\n      testparam.forEach(element => {\r\n        const xValues = [];\r\n        element.forEach(x => {\r\n          xValues.push(x.y);\r\n        });\r\n        const sumValues = xValues.reduce(function(a, b) {\r\n          return a + b;\r\n      }, 0);\r\n        dataRow.push([element[0].x, sumValues]);\r\n      });\r\n      const firstRow = ['timestamp', 'Plant'];\r\n      dataRow.splice(0, 0, firstRow);\r\n      const newData = google.visualization.arrayToDataTable(dataRow);\r\n      const chart = new google.visualization.LineChart(document.getElementById('linechart'));\r\n      chart.draw(newData,  {\r\n        colors: randomColor,\r\n        legend: { position: 'top' },\r\n        explorer: {\r\n          actions: ['dragToZoom', 'rightClickToReset'],\r\n          axis: 'horizontal',\r\n          keepInBounds: true\r\n      }});\r\n    }\r\n    $(window).resize(function() {\r\n      drawThisChart();\r\n    });\r\n  }\r\n\r\n  findMinMaxDate(data: ResponseDeviceChannelData[]) {\r\n    let minDate: moment.Moment  = moment(data[0].dataFloat[data[0].dataFloat.length - 1].timestamp);\r\n    let minDateFormat: string = minDate.format('YYYY-MMM-DD HH:mm');\r\n    let maxDate: moment.Moment = moment(data[0].dataFloat[0].timestamp);\r\n    let maxDateFormat: string = maxDate.format('YYYY-MMM-DD HH:mm');\r\n    for (const channel of data) {\r\n      if (maxDate.isBefore(channel.dataFloat[0].timestamp)) {\r\n        maxDate = moment(channel.dataFloat[0].timestamp);\r\n        maxDateFormat = maxDate.format('YYYY-MMM-DD HH:mm');\r\n      }\r\n      if (minDate.isAfter(channel.dataFloat[channel.dataFloat.length - 1].timestamp)) {\r\n        minDate = moment(channel.dataFloat[channel.dataFloat.length - 1].timestamp);\r\n        minDateFormat = minDate.format('YYYY-MMM-DD HH:mm');\r\n      }\r\n    }\r\n    return {maxDate, minDate, maxDateFormat, minDateFormat};\r\n  }\r\n\r\n  addValue(data: ResponseDeviceChannelData[]) {\r\n    let counter = 0;\r\n    const endarray = [];\r\n    const arrayDatasets = [];\r\n    this.allChannels = [];\r\n    const arrayLabel = [];\r\n    const {maxDate, minDate, maxDateFormat, minDateFormat} = this.findMinMaxDate(data);\r\n    const allDates = [];\r\n\r\n    for (const channel of data) {\r\n      this.allChannels.push(channel.channelType.name);\r\n      let tempMinDate = moment(channel.dataFloat[channel.dataFloat.length - 1].timestamp);\r\n      const dataXY = [];\r\n      let flagDate = maxDate;\r\n      let xy = {x: null, y: null};\r\n      channel.dataFloat.forEach(element => {\r\n        const {period, measurement, timestamp} = element;\r\n        this.period = period;\r\n        const dateString = moment(timestamp).format('YYYY-MMM-DD HH:mm');\r\n\r\n        while (moment(timestamp).isBefore(flagDate)) {\r\n          xy = {\r\n            x: flagDate.format('YYYY-MMM-DD HH:mm'),\r\n            y: null\r\n          };\r\n          flagDate = moment(flagDate).subtract(this.period, 'seconds');\r\n          dataXY.push(xy);\r\n        }\r\n\r\n        if (moment(timestamp).isSame(flagDate)) {\r\n          xy = {\r\n            x: dateString,\r\n            y: measurement\r\n          };\r\n          flagDate = moment(flagDate).subtract(this.period, 'seconds');\r\n          dataXY.push(xy);\r\n        }\r\n        arrayLabel.push(dateString);\r\n      });\r\n\r\n      counter += 1;\r\n      while (minDate.isBefore(tempMinDate)) {\r\n      tempMinDate = moment(tempMinDate).subtract(this.period, 'seconds');\r\n      xy = {\r\n        x: tempMinDate.format('YYYY-MMM-DD HH:mm'),\r\n        y: null\r\n      };\r\n      dataXY.push(xy);\r\n      }\r\n      allDates.push(dataXY);\r\n    }\r\n\r\n    this.allRows = rotate270(allDates);\r\n    for (const button of this.buttonGroup) {\r\n      if (button.text === 'Plant' && button.isClicked) {\r\n        this.createPlant();\r\n      } else if (button.text === 'Inverters' && button.isClicked) {\r\n        this.createInverter();\r\n      }\r\n    }\r\n  }\r\n\r\n  createInverter() {\r\n    google.charts.load('current', { packages: ['corechart'] });\r\n    const testparam = this.allRows;\r\n    const channels = this.allChannels;\r\n    const randomColor = this.randomColors;\r\n\r\n    // const options = this.options;\r\n    google.charts.setOnLoadCallback(drawThisChart);\r\n    function drawThisChart() {\r\n      const dataRow = [];\r\n      testparam.forEach(element => {\r\n        const xValues = [];\r\n        element.forEach(x => {\r\n          xValues.push(x.y);\r\n        });\r\n        dataRow.push([element[0].x, ...xValues]);\r\n      });\r\n      const firstRow = ['timestamp'];\r\n      channels.forEach(channel => {\r\n        firstRow.push(channel);\r\n      });\r\n      dataRow.splice(0, 0, firstRow);\r\n      const newData = google.visualization.arrayToDataTable(dataRow);\r\n      const chart = new google.visualization.LineChart(document.getElementById('linechart'));\r\n      chart.draw(newData,  {\r\n        colors: randomColor,\r\n        legend: { position: 'top' },\r\n        explorer: {\r\n          actions: ['dragToZoom', 'rightClickToReset'],\r\n          axis: 'horizontal',\r\n          keepInBounds: true\r\n      }});\r\n    }\r\n    $(window).resize(function() {\r\n      drawThisChart();\r\n    });\r\n  }\r\n}\r\n\r\n\r\n","export default \"agm-map {\\n    height: 300px;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvZHJvbmUtbWFwL2Ryb25lLW1hcC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksYUFBYTtFQUNmIiwiZmlsZSI6InNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvZHJvbmUtbWFwL2Ryb25lLW1hcC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiYWdtLW1hcCB7XG4gICAgaGVpZ2h0OiAzMDBweDtcbiAgfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { LocationService } from 'src/app/services/location-service';\n\n@Component({\n  selector: 'app-drone-map',\n  templateUrl: './drone-map.component.html',\n  styleUrls: ['./drone-map.component.css']\n})\nexport class DroneMapComponent implements OnInit {\n  title = 'The Drone Location';\n  homeLongitude: number = 10;\n  homeLatitude: number = 10;\n  currentLongtitude: number = 100;\n  currentLatitude: number = 100;\n\n  constructor(private locationService: LocationService) { }\n\n  ngOnInit() {\n    this.locationService.$homeLatitude\n    .subscribe( response => {\n      this.homeLongitude = response;\n    });\n    this.locationService.$homeLatitude\n    .subscribe( response => {\n      this.homeLatitude = response;\n    });\n    this.locationService.$currentLongtitude\n    .subscribe( response => {\n      this.currentLongtitude = response;\n    });\n    this.locationService.$currentLatitude\n    .subscribe( response => {\n      this.currentLatitude = response;\n    });\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL2ltYWdlLXZpZXcvaW1hZ2Utdmlldy5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-image-view',\n  templateUrl: './image-view.component.html',\n  styleUrls: ['./image-view.component.css']\n})\nexport class ImageViewComponent implements OnInit {\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \".lds-ring {\\r\\n  display: inline-block;\\r\\n  position: relative;\\r\\n  width: 80px;\\r\\n  height: 80px;\\r\\n}\\r\\n.lds-ring div {\\r\\n  box-sizing: border-box;\\r\\n  display: block;\\r\\n  position: absolute;\\r\\n  width: 64px;\\r\\n  height: 64px;\\r\\n  margin: 8px;\\r\\n  border: 8px solid #ADD8E6;\\r\\n  border-radius: 50%;\\r\\n  -webkit-animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\r\\n          animation: lds-ring 1.2s cubic-bezier(0.5, 0, 0.5, 1) infinite;\\r\\n  border-color: #ADD8E6 transparent transparent transparent;\\r\\n}\\r\\n.lds-ring div:nth-child(1) {\\r\\n  -webkit-animation-delay: -0.45s;\\r\\n          animation-delay: -0.45s;\\r\\n}\\r\\n.lds-ring div:nth-child(2) {\\r\\n  -webkit-animation-delay: -0.3s;\\r\\n          animation-delay: -0.3s;\\r\\n}\\r\\n.lds-ring div:nth-child(3) {\\r\\n  -webkit-animation-delay: -0.15s;\\r\\n          animation-delay: -0.15s;\\r\\n}\\r\\n@-webkit-keyframes lds-ring {\\r\\n  0% {\\r\\n    -webkit-transform: rotate(0deg);\\r\\n            transform: rotate(0deg);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: rotate(360deg);\\r\\n            transform: rotate(360deg);\\r\\n  }\\r\\n}\\r\\n@keyframes lds-ring {\\r\\n  0% {\\r\\n    -webkit-transform: rotate(0deg);\\r\\n            transform: rotate(0deg);\\r\\n  }\\r\\n  100% {\\r\\n    -webkit-transform: rotate(360deg);\\r\\n            transform: rotate(360deg);\\r\\n  }\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvbG9hZGluZy1zcGlubmVyL2xvYWRpbmctc3Bpbm5lci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0VBQ0UscUJBQXFCO0VBQ3JCLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtBQUNkO0FBQ0E7RUFDRSxzQkFBc0I7RUFDdEIsY0FBYztFQUNkLGtCQUFrQjtFQUNsQixXQUFXO0VBQ1gsWUFBWTtFQUNaLFdBQVc7RUFDWCx5QkFBeUI7RUFDekIsa0JBQWtCO0VBQ2xCLHNFQUE4RDtVQUE5RCw4REFBOEQ7RUFDOUQseURBQXlEO0FBQzNEO0FBQ0E7RUFDRSwrQkFBdUI7VUFBdkIsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRSw4QkFBc0I7VUFBdEIsc0JBQXNCO0FBQ3hCO0FBQ0E7RUFDRSwrQkFBdUI7VUFBdkIsdUJBQXVCO0FBQ3pCO0FBQ0E7RUFDRTtJQUNFLCtCQUF1QjtZQUF2Qix1QkFBdUI7RUFDekI7RUFDQTtJQUNFLGlDQUF5QjtZQUF6Qix5QkFBeUI7RUFDM0I7QUFDRjtBQVBBO0VBQ0U7SUFDRSwrQkFBdUI7WUFBdkIsdUJBQXVCO0VBQ3pCO0VBQ0E7SUFDRSxpQ0FBeUI7WUFBekIseUJBQXlCO0VBQzNCO0FBQ0YiLCJmaWxlIjoic3JjL2FwcC9jb21tb24vY29tcG9uZW50cy9sb2FkaW5nLXNwaW5uZXIvbG9hZGluZy1zcGlubmVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubGRzLXJpbmcge1xyXG4gIGRpc3BsYXk6IGlubGluZS1ibG9jaztcclxuICBwb3NpdGlvbjogcmVsYXRpdmU7XHJcbiAgd2lkdGg6IDgwcHg7XHJcbiAgaGVpZ2h0OiA4MHB4O1xyXG59XHJcbi5sZHMtcmluZyBkaXYge1xyXG4gIGJveC1zaXppbmc6IGJvcmRlci1ib3g7XHJcbiAgZGlzcGxheTogYmxvY2s7XHJcbiAgcG9zaXRpb246IGFic29sdXRlO1xyXG4gIHdpZHRoOiA2NHB4O1xyXG4gIGhlaWdodDogNjRweDtcclxuICBtYXJnaW46IDhweDtcclxuICBib3JkZXI6IDhweCBzb2xpZCAjQUREOEU2O1xyXG4gIGJvcmRlci1yYWRpdXM6IDUwJTtcclxuICBhbmltYXRpb246IGxkcy1yaW5nIDEuMnMgY3ViaWMtYmV6aWVyKDAuNSwgMCwgMC41LCAxKSBpbmZpbml0ZTtcclxuICBib3JkZXItY29sb3I6ICNBREQ4RTYgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQgdHJhbnNwYXJlbnQ7XHJcbn1cclxuLmxkcy1yaW5nIGRpdjpudGgtY2hpbGQoMSkge1xyXG4gIGFuaW1hdGlvbi1kZWxheTogLTAuNDVzO1xyXG59XHJcbi5sZHMtcmluZyBkaXY6bnRoLWNoaWxkKDIpIHtcclxuICBhbmltYXRpb24tZGVsYXk6IC0wLjNzO1xyXG59XHJcbi5sZHMtcmluZyBkaXY6bnRoLWNoaWxkKDMpIHtcclxuICBhbmltYXRpb24tZGVsYXk6IC0wLjE1cztcclxufVxyXG5Aa2V5ZnJhbWVzIGxkcy1yaW5nIHtcclxuICAwJSB7XHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgwZGVnKTtcclxuICB9XHJcbiAgMTAwJSB7XHJcbiAgICB0cmFuc2Zvcm06IHJvdGF0ZSgzNjBkZWcpO1xyXG4gIH1cclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-loading-spinner',\r\n  templateUrl: './loading-spinner.component.html',\r\n  styleUrls: ['./loading-spinner.component.css']\r\n})\r\nexport class LoadingSpinnerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".container {\\r\\n width: 100%; \\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvbWVkaWEtb2JqZWN0LXJvdW5kLXBpbGwvbWVkaWEtb2JqZWN0LXJvdW5kLXBpbGwuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtDQUNDLFdBQVc7QUFDWiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL21lZGlhLW9iamVjdC1yb3VuZC1waWxsL21lZGlhLW9iamVjdC1yb3VuZC1waWxsLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY29udGFpbmVyIHtcclxuIHdpZHRoOiAxMDAlOyBcclxufSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-media-object-round-pill',\r\n  templateUrl: './media-object-round-pill.component.html',\r\n  styleUrls: ['./media-object-round-pill.component.css']\r\n})\r\nexport class MediaObjectRoundPillComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".container {\\r\\n width: 100%;\\r\\n}\\r\\n\\r\\n.media {\\r\\n  text-align: left;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvbWVkaWEtb2JqZWN0LXJvdW5kL21lZGlhLW9iamVjdC1yb3VuZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0NBQ0MsV0FBVztBQUNaOztBQUVBO0VBQ0UsZ0JBQWdCO0FBQ2xCIiwiZmlsZSI6InNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvbWVkaWEtb2JqZWN0LXJvdW5kL21lZGlhLW9iamVjdC1yb3VuZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNvbnRhaW5lciB7XHJcbiB3aWR0aDogMTAwJTtcclxufVxyXG5cclxuLm1lZGlhIHtcclxuICB0ZXh0LWFsaWduOiBsZWZ0O1xyXG59Il19 */\"","import { Component, OnInit, Input, EventEmitter, Output } from '@angular/core';\r\nimport { AssetGroupControllerService } from 'src/app/rest';\r\nimport { AssetGroupsComponent } from 'src/app/asset-groups/asset-groups.component';\r\nimport { AlertPopupComponent } from '../popups/alert-popup/alert-popup.component';\r\nimport { MatDialog } from '@angular/material';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-media-object-round',\r\n  templateUrl: './media-object-round.component.html',\r\n  styleUrls: ['./media-object-round.component.css']\r\n})\r\nexport class MediaObjectRoundComponent implements OnInit {\r\n  @Output() deleteThis = new EventEmitter<number>();\r\n  @Output() editThis = new EventEmitter<number>();\r\n  @Output() permitions = new EventEmitter<number>();\r\n  @Input() fromComponent: string;\r\n  @Input() element: {id: number, name: string, description: string} = {\r\n      id: 0,\r\n      name: 'Object Name',\r\n      description: 'Object Description'\r\n  };\r\n\r\n  constructor(\r\n    private route: ActivatedRoute,\r\n    private router: Router,\r\n    private assetGroupsComponent: AssetGroupsComponent,\r\n    private dialog: MatDialog) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL3BvcHVwcy9hbGVydC1wb3B1cC9hbGVydC1wb3B1cC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-alert-popup',\r\n  templateUrl: './alert-popup.component.html',\r\n  styleUrls: ['./alert-popup.component.css']\r\n})\r\nexport class AlertPopupComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL3BvcHVwcy9lZGl0LXBvcC11cC9lZGl0LXBvcC11cC5jb21wb25lbnQuY3NzIn0= */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MAT_DIALOG_DATA, MatDialogRef } from '@angular/material/dialog';\r\nimport { SelectPopupComponent } from '../select-popup/select-popup.component';\r\n\r\n@Component({\r\n  selector: 'app-edit-pop-up',\r\n  templateUrl: './edit-pop-up.component.html',\r\n  styleUrls: ['./edit-pop-up.component.css']\r\n})\r\nexport class EditPopUpComponent implements OnInit {\r\n  editedValueDescription: string;\r\n  editedValueName: string;\r\n  editedValue: string;\r\n  constructor(\r\n    public dialogRef: MatDialogRef<SelectPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data) {\r\n      this.editedValue = data.value;\r\n      this.editedValueDescription = data.description;\r\n      this.editedValueName = data.name;\r\n    }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  save() {\r\n    this.data['name'] = this.editedValueName;\r\n    this.data['description'] = this.editedValueDescription;\r\n    this.dialogRef.close(this.data);\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL3BvcHVwcy9tYW5hZ2VtZW50LXBvcHVwL21hbmFnZW1lbnQtcG9wdXAuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\nimport { Router } from '@angular/router';\r\nimport { AssetGroupControllerService, AssetGroup } from 'src/app/rest';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-management-popup',\r\n  templateUrl: './management-popup.component.html',\r\n  styleUrls: ['./management-popup.component.css']\r\n})\r\nexport class ManagementPopupComponent implements OnInit {\r\n  form: FormGroup;\r\n  assetSelect: AssetGroup;\r\n  loading: boolean = false;\r\n  serviceError: boolean = false;\r\n  description: string;\r\n  allAssetGroups: AssetGroup[] = [];\r\n\r\n  constructor(\r\n    private router: Router,\r\n    private assetGroupControllerService: AssetGroupControllerService,\r\n    private fb: FormBuilder,\r\n    private authService: AuthService,\r\n    public dialogRef: MatDialogRef<ManagementPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) data) {\r\n      this.description = data.assetSelect;\r\n    }\r\n\r\n  ngOnInit() {\r\n    this.assetGroupControllerService.assetGroupControllerFindUserAssetGroups()\r\n    .subscribe(\r\n      value => {\r\n        this.allAssetGroups.push(...value);\r\n        this.loading = false;\r\n      },\r\n      errorRes => {\r\n        if (!errorRes.error || !errorRes.error.error || !errorRes.error.error.statusCode) {\r\n          this.serviceError = true;\r\n          this.loading = false;\r\n          return;\r\n        }\r\n        switch(parseInt(errorRes.error.error.statusCode)) {\r\n          case 401:\r\n            this.loading = false;\r\n            this.authService.logout();\r\n          case 406:\r\n            this.serviceError = true;\r\n            this.loading = false;\r\n        }\r\n      }\r\n    );\r\n    \r\n    this.form = this.fb.group({\r\n      description: [this.description, []]});\r\n  }\r\n  save() {\r\n    console.log(this.assetSelect.id);\r\n    this.dialogRef.close(this.form.value);\r\n    this.router.navigate(['assetGroup/' + this.assetSelect.id]);\r\n  }\r\n  close() {\r\n      this.dialogRef.close();\r\n    }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL3BvcHVwcy9zZWxlY3QtcG9wdXAvc2VsZWN0LXBvcHVwLmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { FormGroup } from '@angular/forms';\r\nimport { AuthService } from 'src/app/auth/auth.service';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { DataLogger, DataLoggerControllerService, AssetGroupControllerService, AssetGroup } from 'src/app/rest';\r\n\r\n@Component({\r\n  selector: 'app-select-popup',\r\n  templateUrl: './select-popup.component.html',\r\n  styleUrls: ['./select-popup.component.css']\r\n})\r\nexport class SelectPopupComponent implements OnInit {\r\n  description: string;\r\n  form: FormGroup;\r\n  loading: boolean = false;\r\n  serviceError: boolean = false;\r\n  assetGroups: AssetGroup[];\r\n  datalogger: DataLogger;\r\n  dataloggers: DataLogger[] = [];\r\n  insertedData: string;\r\n  popUpData = [];\r\n  selectedData: string;\r\n\r\n  constructor(\r\n    private dataLoggerControllerService: DataLoggerControllerService,\r\n    private authService: AuthService,\r\n    private assetGroupControllerService: AssetGroupControllerService,\r\n    public dialogRef: MatDialogRef<SelectPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) data) {\r\n      this.insertedData = data.value;\r\n    }\r\n\r\n  ngOnInit() {\r\n    if (this.insertedData === 'user-asset') {\r\n      this.findAssetsFromAssetGroup();\r\n    }else {\r\n      this.findDataloggers();\r\n    }\r\n  }\r\n\r\n  findDataloggers() {\r\n    this.dataLoggerControllerService.dataLoggerControllerFind()\r\n    .subscribe(\r\n      value => {\r\n        this.dataloggers.push(...value);\r\n        this.popUpData = this.dataloggers;\r\n        this.loading = false;\r\n      },\r\n      errorRes => {\r\n        if (!errorRes.error || !errorRes.error.error || !errorRes.error.error.statusCode) {\r\n          this.serviceError = true;\r\n          this.loading = false;\r\n          return;\r\n        }\r\n        switch(parseInt(errorRes.error.error.statusCode)) {\r\n          case 401:\r\n            this.loading = false;\r\n            this.authService.logout();\r\n          case 406:\r\n            this.serviceError = true;\r\n            this.loading = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n  findAssetsFromAssetGroup() {\r\n    this.assetGroups = [];\r\n    this.assetGroupControllerService.assetGroupControllerFindUserAssetGroups()\r\n    .subscribe(\r\n      value => {\r\n        this.assetGroups.push(...value);\r\n        this.popUpData = this.assetGroups;\r\n        this.loading = false;\r\n      },\r\n      errorRes => {\r\n        if (!errorRes.error || !errorRes.error.error || !errorRes.error.error.statusCode) {\r\n          this.serviceError = true;\r\n          this.loading = false;\r\n          return;\r\n        }\r\n        switch(parseInt(errorRes.error.error.statusCode)) {\r\n          case 401:\r\n            this.loading = false;\r\n            this.authService.logout();\r\n          case 406:\r\n            this.serviceError = true;\r\n            this.loading = false;\r\n        }\r\n      }\r\n    );\r\n  }\r\n\r\n}\r\n","export default \"::ng-deep .mat-form-field {\\r\\n    width: 80%;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvcmFuZ2UtZm9vdGVyL2Z1bGxkYXRlLWNvbXBvbmVudC9mdWxsZGF0ZS1jb21wb25lbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLFVBQVU7QUFDZCIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL3JhbmdlLWZvb3Rlci9mdWxsZGF0ZS1jb21wb25lbnQvZnVsbGRhdGUtY29tcG9uZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyI6Om5nLWRlZXAgLm1hdC1mb3JtLWZpZWxkIHtcclxuICAgIHdpZHRoOiA4MCU7XHJcbn0iXX0= */\"","import { Component, OnInit, EventEmitter, Output, Input } from '@angular/core';\r\nimport { FormControl } from '@angular/forms';\r\nimport moment, { Moment } from 'moment';\r\nimport { MatDatepickerInputEvent } from '@angular/material';\r\nimport { DataService } from '../../../../services/data-service';\r\n\r\n@Component({\r\n  selector: 'app-fulldate-component',\r\n  templateUrl: './fulldate-component.component.html',\r\n  styleUrls: ['./fulldate-component.component.css']\r\n})\r\nexport class FulldateComponentComponent implements OnInit {\r\n  @Input() From: number;\r\n  appEndDate: Date;\r\n  today: Date;\r\n  minDate: Date;\r\n  maxDate: Date;\r\n  currentYear: never;\r\n  dateArray: number[];\r\n  showValue;\r\n  fromDate;\r\n  toDate;\r\n\r\n  constructor(private service: DataService) {\r\n    const currentYear = new Date().getFullYear();\r\n    const currentMonth = new Date().getMonth();\r\n    const currentDay = new Date().getDate();\r\n    this.minDate = new Date(currentYear - 20, 0, 0);\r\n    this.maxDate = new Date(currentYear, currentMonth, currentDay);\r\n    this.dateArray = [currentYear, currentMonth, currentDay];\r\n    this.appEndDate = new Date(currentYear, currentMonth, currentDay);\r\n    this.showValue = new FormControl(new Date(currentYear, currentMonth, currentDay));\r\n   }\r\n\r\n  ngOnInit() {\r\n    this.findOffset();\r\n  }\r\n\r\n  addEvent(event: MatDatepickerInputEvent<Moment>) {\r\n    const eventValue = event.value;\r\n    const month = eventValue.month();\r\n    const year = eventValue.year();\r\n    const day = eventValue.date();\r\n    this.dateArray = [year, month, day];\r\n    this.appEndDate = new Date(this.dateArray[0], this.dateArray[1], this.dateArray[2]);\r\n    this.service.changeDate(this.appEndDate);\r\n    this.findOffset();\r\n  }\r\n\r\n  previousDate() {\r\n    if (this.appEndDate.getTime() === this.minDate.getTime()) {\r\n    } else {\r\n      this.appEndDate.setDate(this.appEndDate.getDate() - 1);\r\n      this.dateArray[2] = this.dateArray[2] - 1;\r\n      this.service.changeDate(this.appEndDate);\r\n      this.findOffset();\r\n    }\r\n    this.showValue = new FormControl(new Date(this.dateArray[0], this.dateArray[1], this.dateArray[2]));\r\n  }\r\n\r\n  nextDate() {\r\n    if (this.appEndDate.getTime() === this.maxDate.getTime()) {\r\n    } else {\r\n      this.appEndDate.setDate(this.appEndDate.getDate() + 1);\r\n      this.dateArray[2] = this.dateArray[2] + 1;\r\n      this.service.changeDate(this.appEndDate);\r\n      this.findOffset();\r\n    }\r\n    this.showValue = new FormControl(new Date(this.dateArray[0], this.dateArray[1], this.dateArray[2]));\r\n  }\r\n\r\n  findOffset() {\r\n    if (this.From === 0) {\r\n      this.fromDate = this.appEndDate;\r\n      this.service.fromDate(this.fromDate);\r\n    } else if(this.From === 1) {\r\n      this.toDate = this.appEndDate;\r\n      this.service.toDate(this.toDate)\r\n    }\r\n    // this.service.fromToDate(this.fromDate, this.toDate);\r\n  }\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL3JhbmdlLWZvb3Rlci9tb250aC1jb21wb25lbnQvbW9udGgtY29tcG9uZW50LmNvbXBvbmVudC5jc3MifQ== */\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\r\nimport {MatDatepicker, MatDatepickerInputEvent} from '@angular/material/datepicker';\r\nimport {default as _rollupMoment, Moment} from 'moment';\r\nimport * as _moment from 'moment';\r\nimport { DataService } from '../../../../services/data-service';\r\n\r\nconst moment = _rollupMoment || _moment;\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'MM/YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'MM/YYYY',\r\n    monthYearLabel: 'MMM YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'MMMM YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-month-component',\r\n  templateUrl: './month-component.component.html',\r\n  styleUrls: ['./month-component.component.css'],\r\n  providers: [\r\n    // `MomentDateAdapter` can be automatically provided by importing `MomentDateModule` in your\r\n    // application's root module. We provide it at the component level here, due to limitations of\r\n    // our example generation script.\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\r\n    },\r\n\r\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\r\n  ],\r\n})\r\nexport class MonthComponentComponent implements OnInit {\r\n  date = new FormControl(moment());\r\n  minDate: Date;\r\n  maxDate: Date;\r\n  minArray: number[];\r\n  maxArray: number[];\r\n  constructor(private service: DataService) {\r\n    const currentYear = new Date().getFullYear();\r\n    const currentMonth = new Date().getMonth();\r\n    const currentDay = new Date().getDate();\r\n    this.minDate = new Date(currentYear - 20, 0, 0);\r\n    this.maxDate = new Date(currentYear, currentMonth, currentDay);\r\n    this.minArray = [this.minDate.getMonth(), this.minDate.getFullYear()];\r\n    this.maxArray = [currentMonth, currentYear];\r\n    console.log(this.maxArray);\r\n  }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  chosenYearHandler(normalizedYear: Moment) {\r\n    const ctrlValue = this.date.value;\r\n    ctrlValue.year(normalizedYear.year());\r\n    this.date.setValue(ctrlValue);\r\n  }\r\n\r\n  chosenMonthHandler(normalizedMonth: Moment, datepicker: MatDatepicker<Moment>) {\r\n    const ctrlValue = this.date.value;\r\n    ctrlValue.month(normalizedMonth.month());\r\n    this.date.setValue(ctrlValue);\r\n    datepicker.close();\r\n    const month = normalizedMonth.month();\r\n    const year = normalizedMonth.year();\r\n  }\r\n\r\n  previousDate() {\r\n    let ctrlValue = this.date.value;\r\n    if (this.minArray[1] === ctrlValue.year() && this.minArray[0] === ctrlValue.month()) {\r\n      console.log('den kns tpt');\r\n    } else {\r\n      ctrlValue.month(ctrlValue.month() - 1);\r\n      this.date.setValue(ctrlValue);\r\n      const appEndDate = new Date(this.date.value.year(), this.date.value.month(), 1);\r\n      this.service.changeDate(appEndDate);\r\n    }\r\n  }\r\n  \r\n  nextDate() {\r\n    let ctrlValue = this.date.value;\r\n    if (this.maxArray[1] === ctrlValue.year() && this.maxArray[0] === ctrlValue.month()) {\r\n      console.log('den kns tpt');\r\n    } else {\r\n      ctrlValue.month(ctrlValue.month() + 1);\r\n      this.date.setValue(ctrlValue);\r\n      const appEndDate = new Date(this.date.value.year(), this.date.value.month(), 1);\r\n      this.service.changeDate(appEndDate);\r\n    }\r\n  }\r\n}","export default \"img {\\r\\n    display: block;\\r\\n    max-width: 100%;\\r\\n    height: auto;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvcmFuZ2UtZm9vdGVyL3JhbmdlLWZvb3Rlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksY0FBYztJQUNkLGVBQWU7SUFDZixZQUFZO0FBQ2hCIiwiZmlsZSI6InNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvcmFuZ2UtZm9vdGVyL3JhbmdlLWZvb3Rlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiaW1nIHtcclxuICAgIGRpc3BsYXk6IGJsb2NrO1xyXG4gICAgbWF4LXdpZHRoOiAxMDAlO1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG59Il19 */\"","import {Component, Input, ViewChild} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\r\nimport {MatDatepicker} from '@angular/material/datepicker';\r\nimport {default as _rollupMoment, Moment} from 'moment';\r\nimport * as _moment from 'moment';\r\nimport { FulldateComponentComponent } from './fulldate-component/fulldate-component.component';\r\nimport { DataService } from '../../../services/data-service';\r\n\r\n\r\n@Component({\r\n  selector: 'app-range-footer',\r\n  templateUrl: './range-footer.component.html',\r\n  styleUrls: ['./range-footer.component.css'],\r\n})\r\nexport class RangeFooterComponent {\r\n  @Input() childMessage: string;\r\n  clicked = false;\r\n  buttonImg = 'assets/images/plus.svg';\r\n\r\n  constructor(private service: DataService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  onChangeButton() {\r\n    this.clicked = !this.clicked;\r\n    this.service.click(this.clicked);\r\n    if (this.clicked === false) {\r\n      this.buttonImg = 'assets/images/plus.svg';\r\n    } else if (this.clicked === true) {\r\n      this.buttonImg = 'assets/images/delete.svg';\r\n    }\r\n  }\r\n}","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL3JhbmdlLWZvb3Rlci95ZWFyLWNvbXBvbmVudC95ZWFyLWNvbXBvbmVudC5jb21wb25lbnQuY3NzIn0= */\"","import {Component, OnInit} from '@angular/core';\r\nimport {FormControl} from '@angular/forms';\r\nimport {MomentDateAdapter, MAT_MOMENT_DATE_ADAPTER_OPTIONS} from '@angular/material-moment-adapter';\r\nimport {DateAdapter, MAT_DATE_FORMATS, MAT_DATE_LOCALE} from '@angular/material/core';\r\nimport {MatDatepicker} from '@angular/material/datepicker';\r\nimport {default as _rollupMoment, Moment} from 'moment';\r\nimport * as _moment from 'moment';\r\nimport { DataService } from '../../../../services/data-service';\r\n\r\nconst moment = _rollupMoment || _moment;\r\nexport const MY_FORMATS = {\r\n  parse: {\r\n    dateInput: 'YYYY',\r\n  },\r\n  display: {\r\n    dateInput: 'YYYY',\r\n    dateA11yLabel: 'LL',\r\n    monthYearA11yLabel: 'YYYY',\r\n  },\r\n};\r\n\r\n@Component({\r\n  selector: 'app-year-component',\r\n  templateUrl: './year-component.component.html',\r\n  styleUrls: ['./year-component.component.css'],\r\n  providers: [\r\n    {\r\n      provide: DateAdapter,\r\n      useClass: MomentDateAdapter,\r\n      deps: [MAT_DATE_LOCALE, MAT_MOMENT_DATE_ADAPTER_OPTIONS]\r\n    },\r\n\r\n    {provide: MAT_DATE_FORMATS, useValue: MY_FORMATS},\r\n  ],\r\n})\r\nexport class YearComponentComponent implements OnInit {\r\n\r\n  date = new FormControl(moment());\r\n  minDate: Date;\r\n  maxDate: Date;\r\n  minYear: number;\r\n  maxYear: number;\r\n  constructor(private service: DataService) {\r\n    const currentYear = new Date().getFullYear();\r\n    const currentMonth = new Date().getMonth();\r\n    const currentDay = new Date().getDate();\r\n    this.minDate = new Date(currentYear - 20, 0, 0);\r\n    this.maxDate = new Date(currentYear, currentMonth, currentDay);\r\n    this.maxYear = currentYear;\r\n    this.minYear = this.minDate.getFullYear();\r\n   }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  chosenYearHandler(normalizedYear: Moment, datepicker: MatDatepicker<Moment>) {\r\n    const ctrlValue = this.date.value;\r\n    ctrlValue.year(normalizedYear.year());\r\n    this.date.setValue(ctrlValue);\r\n    datepicker.close();\r\n  }\r\n\r\n  previousDate() {\r\n    const ctrlValue = this.date.value;\r\n    if (this.minYear === ctrlValue.year()) {\r\n    } else {\r\n      ctrlValue.year(ctrlValue.year() - 1);\r\n      this.date.setValue(ctrlValue);\r\n      const appEndDate = new Date(this.date.value.year(), 0, 1);\r\n      this.service.changeDate(appEndDate);\r\n    }\r\n  }\r\n\r\n  nextDate() {\r\n    const ctrlValue = this.date.value;\r\n    if (this.maxYear === ctrlValue.year()) {\r\n    } else {\r\n      ctrlValue.year(ctrlValue.year() + 1);\r\n      this.date.setValue(ctrlValue);\r\n      const appEndDate = new Date(this.date.value.year(), 0, 1);\r\n      this.service.changeDate(appEndDate);\r\n    }\r\n  }\r\n}\r\n","export default \"mat-card img{\\n    -o-object-fit: cover;\\n       object-fit: cover; /*this makes the image in src fit to the size specified below*/\\n    width: 100%; /* Here you can use wherever you want to specify the width and also the height of the <img>*/\\n    height: 100%;\\n  }\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvY29tbW9uL2NvbXBvbmVudHMvdGhlcm1vZ3JhcGh5L3RoZXJtb2dyYXBoeS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksb0JBQWlCO09BQWpCLGlCQUFpQixFQUFFLDhEQUE4RDtJQUNqRixXQUFXLEVBQUUsNEZBQTRGO0lBQ3pHLFlBQVk7RUFDZCIsImZpbGUiOiJzcmMvYXBwL2NvbW1vbi9jb21wb25lbnRzL3RoZXJtb2dyYXBoeS90aGVybW9ncmFwaHkuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIm1hdC1jYXJkIGltZ3tcbiAgICBvYmplY3QtZml0OiBjb3ZlcjsgLyp0aGlzIG1ha2VzIHRoZSBpbWFnZSBpbiBzcmMgZml0IHRvIHRoZSBzaXplIHNwZWNpZmllZCBiZWxvdyovXG4gICAgd2lkdGg6IDEwMCU7IC8qIEhlcmUgeW91IGNhbiB1c2Ugd2hlcmV2ZXIgeW91IHdhbnQgdG8gc3BlY2lmeSB0aGUgd2lkdGggYW5kIGFsc28gdGhlIGhlaWdodCBvZiB0aGUgPGltZz4qL1xuICAgIGhlaWdodDogMTAwJTtcbiAgfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { ActivatedRoute } from '@angular/router';\nimport { Mission } from 'src/app/models/mission';\nimport { ThessalyAPIService } from 'src/app/services/thessaly-api.service';\n\n@Component({\n  selector: 'app-thermography',\n  templateUrl: './thermography.component.html',\n  styleUrls: ['./thermography.component.css']\n})\nexport class ThermographyComponent implements OnInit {\n  errorMessage: string;\n  imageIds: Mission;\n\n  constructor(\n    private thessalyApiService: ThessalyAPIService,\n    private route: ActivatedRoute) { }\n\n  ngOnInit() {\n   // this.getImages();\n  }\n\n  getImages(missionName: string) {\n    this.thessalyApiService.controllerGetImage('GetImageIDs', {MissionName: missionName})\n    .subscribe(\n      response => {\n        this.imageIds = response;\n        console.log(response);\n      },\n      error => {\n        this.errorMessage = error;\n      }\n    );\n  }\n\n  downloadImage(missionName: string, imageId: Mission[], imageRes: string) {\n    this.thessalyApiService.controllerGetImage('DownloadImage', {MissionName: missionName, ImageID: imageId, ImageRes: imageRes})\n    .subscribe(\n      response => {\n        console.log(response);\n      },\n      error => {\n        this.errorMessage = error;\n      }\n    );\n  }\n}\n","import {\r\n  Directive,\r\n  HostListener,\r\n  ElementRef,\r\n  Renderer2\r\n} from '@angular/core';\r\n\r\n@Directive({\r\n  selector: '[appDropdown]'\r\n})\r\nexport class DropdownDirective {\r\n  \r\n  constructor(private elRef: ElementRef, private renderer: Renderer2) { }\r\n  open: boolean = false;\r\n  \r\n  @HostListener('click') toggleOpen() {\r\n    console.log(this.elRef.nativeElement);\r\n    if(!this.open) {\r\n      this.renderer.addClass(this.elRef.nativeElement,'show');\r\n    }\r\n    else {\r\n      this.renderer.removeClass(this.elRef.nativeElement,'show');\r\n    }\r\n    \r\n    this.open = !this.open;\r\n  }\r\n}","export default \"/* .container-fluid {\\r\\n    padding-right: 15px;\\r\\n    padding-left: 15px;\\r\\n    margin-right: auto;\\r\\n    margin-left: auto;\\r\\n} */\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztHQUtHIiwiZmlsZSI6InNyYy9hcHAvZGFzaGJvYXJkL2Rhc2hib2FyZC5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLyogLmNvbnRhaW5lci1mbHVpZCB7XHJcbiAgICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xyXG4gICAgcGFkZGluZy1sZWZ0OiAxNXB4O1xyXG4gICAgbWFyZ2luLXJpZ2h0OiBhdXRvO1xyXG4gICAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbn0gKi8iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Router } from '@angular/router';\r\n\r\n@Component({\r\n  selector: 'app-dashboard',\r\n  templateUrl: './dashboard.component.html',\r\n  styleUrls: ['./dashboard.component.css']\r\n})\r\nexport class DashboardComponent implements OnInit {\r\n\r\n  constructor(private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    \r\n  }\r\n}\r\n","export default \".circle {\\r\\n    border-radius: 50%;\\r\\n    width: 36px;\\r\\n    height: 36px;\\r\\n    border: 2px solid #666;\\r\\n    color: #666;\\r\\n    text-align: center;\\r\\n    font: 25px Arial, sans-serif;\\r\\n}\\r\\n::ng-deep .mat-tab-labels {\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    padding-top: 5px;\\r\\n    height: 2rem;\\r\\n}\\r\\n::ng-deep .mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar{\\r\\n    background: none;\\r\\n}\\r\\n::ng-deep .mat-tab-label.mat-tab-label-active {\\r\\n    color:red;\\r\\n    opacity: 1;\\r\\n}\\r\\n::ng-deep .mat-tab-label{\\r\\n    border-right-color: black;\\r\\n    border-right-width: 2px;\\r\\n    border-right-style: solid;    \\r\\n}\\r\\n::ng-deep .mat-tab-label.mat-tab-label{\\r\\n    height: auto;\\r\\n}\\r\\n::ng-deep mat-tab-group {\\r\\n    position: -webkit-sticky;\\r\\n    position: sticky;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXZlbnRzL2V2ZW50cy5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsNEJBQTRCO0FBQ2hDO0FBQ0E7SUFDSSx3QkFBdUI7WUFBdkIsdUJBQXVCO0lBQ3ZCLGdCQUFnQjtJQUNoQixZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxnQkFBZ0I7QUFDcEI7QUFDQTtJQUNJLFNBQVM7SUFDVCxVQUFVO0FBQ2Q7QUFDQTtJQUNJLHlCQUF5QjtJQUN6Qix1QkFBdUI7SUFDdkIseUJBQXlCO0FBQzdCO0FBQ0E7SUFDSSxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSx3QkFBZ0I7SUFBaEIsZ0JBQWdCO0FBQ3BCIiwiZmlsZSI6InNyYy9hcHAvZXZlbnRzL2V2ZW50cy5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLmNpcmNsZSB7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB3aWR0aDogMzZweDtcclxuICAgIGhlaWdodDogMzZweDtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICM2NjY7XHJcbiAgICBjb2xvcjogIzY2NjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQ6IDI1cHggQXJpYWwsIHNhbnMtc2VyaWY7XHJcbn1cclxuOjpuZy1kZWVwIC5tYXQtdGFiLWxhYmVscyB7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgICBoZWlnaHQ6IDJyZW07XHJcbn1cclxuOjpuZy1kZWVwIC5tYXQtdGFiLWdyb3VwLm1hdC1wcmltYXJ5IC5tYXQtaW5rLWJhciwgLm1hdC10YWItbmF2LWJhci5tYXQtcHJpbWFyeSAubWF0LWluay1iYXJ7XHJcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xyXG59XHJcbjo6bmctZGVlcCAubWF0LXRhYi1sYWJlbC5tYXQtdGFiLWxhYmVsLWFjdGl2ZSB7XHJcbiAgICBjb2xvcjpyZWQ7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG59XHJcbjo6bmctZGVlcCAubWF0LXRhYi1sYWJlbHtcclxuICAgIGJvcmRlci1yaWdodC1jb2xvcjogYmxhY2s7XHJcbiAgICBib3JkZXItcmlnaHQtd2lkdGg6IDJweDtcclxuICAgIGJvcmRlci1yaWdodC1zdHlsZTogc29saWQ7ICAgIFxyXG59XHJcbjo6bmctZGVlcCAubWF0LXRhYi1sYWJlbC5tYXQtdGFiLWxhYmVse1xyXG4gICAgaGVpZ2h0OiBhdXRvO1xyXG59XHJcbjo6bmctZGVlcCBtYXQtdGFiLWdyb3VwIHtcclxuICAgIHBvc2l0aW9uOiBzdGlja3k7XHJcbn1cclxuIl19 */\"","import { Component, OnInit } from '@angular/core';\r\nimport { DeviceEventControllerService, DeviceEventWithRelations, ResponseEventAssetEvents } from '../rest';\r\nimport { Token } from '../rest/model/token';\r\nimport jwt_decode from 'jwt-decode';\r\nimport moment from 'moment';\r\n\r\n@Component({\r\n  selector: 'app-events',\r\n  templateUrl: './events.component.html',\r\n  styleUrls: ['./events.component.css']\r\n})\r\nexport class EventsComponent implements OnInit {\r\n  serviceError = false;\r\n  loading = false;\r\n  eventArray: DeviceEventWithRelations[] = [];\r\n  events: any;\r\n  userID: number;\r\n\r\n  constructor(private deviceEventController: DeviceEventControllerService) { }\r\n\r\n  ngOnInit() {\r\n    this.getIdFromToken();\r\n    this.getEvents();\r\n  }\r\n\r\n  getEvents() {\r\n    this.loading = true;\r\n    this.deviceEventController.deviceEventControllerFind(7, 0, 10)\r\n    .subscribe(response => {\r\n      this.eventArray = response;\r\n      this.loading = false;\r\n    }, errorRes => {\r\n      if (!errorRes.error || !errorRes.error.error || !errorRes.error.error.statusCode) {\r\n        this.serviceError = true;\r\n        this.loading = false;\r\n        return;\r\n      }\r\n      switch (parseInt(errorRes.error.error.statusCode)) {\r\n        case 401:\r\n          this.loading = false;\r\n        case 406:\r\n          this.serviceError = true;\r\n          this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  getIdFromToken() {\r\n    const token: Token = JSON.parse(localStorage.getItem('token')).token;\r\n    const decoded = jwt_decode(token);\r\n    this.userID = decoded.id;\r\n  }\r\n\r\n  checkSeen(id: number, counter: number) {\r\n    const view = JSON.parse(this.eventArray[counter].viewedBy);\r\n    view.map(v => parseInt(v, 10));\r\n    if (view.includes(this.userID)) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  }\r\n\r\n  seeEvent(eventID: number) {\r\n    this.deviceEventController.deviceEventControllerUpdateViewedBy(eventID)\r\n    .subscribe(response => {\r\n      this.getEvents();\r\n    }, errorRes => {\r\n      if (!errorRes.error || !errorRes.error.error || !errorRes.error.error.statusCode) {\r\n        this.serviceError = true;\r\n        this.loading = false;\r\n        return;\r\n      }\r\n      switch (parseInt(errorRes.error.error.statusCode)) {\r\n        case 401:\r\n          this.loading = false;\r\n        case 406:\r\n          this.serviceError = true;\r\n          this.loading = false;\r\n      }\r\n    });\r\n  }\r\n\r\n  timeEvent(time: string) {\r\n    return moment(time).format('YYYY-MMM-DD HH:mm');\r\n  }\r\n}\r\n","export default \".circle {\\n    border-radius: 50%;\\n    width: 36px;\\n    height: 36px;\\n    border: 2px solid #666;\\n    color: #666;\\n    text-align: center;\\n    font: 25px Arial, sans-serif;\\n}\\n::ng-deep .mat-tab-labels {\\n    -webkit-box-pack: center;\\n            justify-content: center;\\n    padding-top: 5px;\\n    height: 2rem;\\n}\\n::ng-deep .mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar{\\n    background: none;\\n}\\n::ng-deep .mat-tab-label.mat-tab-label-active {\\n    color:red;\\n    opacity: 1;\\n}\\n::ng-deep .mat-tab-label{\\n    border-right-color: black;\\n    border-right-width: 2px;\\n    border-right-style: solid;    \\n}\\n::ng-deep .mat-tab-label.mat-tab-label{\\n    height: auto;\\n}\\n::ng-deep mat-tab-group {\\n    position: -webkit-sticky;\\n    position: sticky;\\n}\\n\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvZXZlbnRzL3RlbGVtZXRyeS1ldmVudC90ZWxlbWV0cnktZXZlbnQuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGtCQUFrQjtJQUNsQixXQUFXO0lBQ1gsWUFBWTtJQUNaLHNCQUFzQjtJQUN0QixXQUFXO0lBQ1gsa0JBQWtCO0lBQ2xCLDRCQUE0QjtBQUNoQztBQUNBO0lBQ0ksd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2QixnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxTQUFTO0lBQ1QsVUFBVTtBQUNkO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsdUJBQXVCO0lBQ3ZCLHlCQUF5QjtBQUM3QjtBQUNBO0lBQ0ksWUFBWTtBQUNoQjtBQUNBO0lBQ0ksd0JBQWdCO0lBQWhCLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL2V2ZW50cy90ZWxlbWV0cnktZXZlbnQvdGVsZW1ldHJ5LWV2ZW50LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuY2lyY2xlIHtcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XG4gICAgd2lkdGg6IDM2cHg7XG4gICAgaGVpZ2h0OiAzNnB4O1xuICAgIGJvcmRlcjogMnB4IHNvbGlkICM2NjY7XG4gICAgY29sb3I6ICM2NjY7XG4gICAgdGV4dC1hbGlnbjogY2VudGVyO1xuICAgIGZvbnQ6IDI1cHggQXJpYWwsIHNhbnMtc2VyaWY7XG59XG46Om5nLWRlZXAgLm1hdC10YWItbGFiZWxzIHtcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xuICAgIGhlaWdodDogMnJlbTtcbn1cbjo6bmctZGVlcCAubWF0LXRhYi1ncm91cC5tYXQtcHJpbWFyeSAubWF0LWluay1iYXIsIC5tYXQtdGFiLW5hdi1iYXIubWF0LXByaW1hcnkgLm1hdC1pbmstYmFye1xuICAgIGJhY2tncm91bmQ6IG5vbmU7XG59XG46Om5nLWRlZXAgLm1hdC10YWItbGFiZWwubWF0LXRhYi1sYWJlbC1hY3RpdmUge1xuICAgIGNvbG9yOnJlZDtcbiAgICBvcGFjaXR5OiAxO1xufVxuOjpuZy1kZWVwIC5tYXQtdGFiLWxhYmVse1xuICAgIGJvcmRlci1yaWdodC1jb2xvcjogYmxhY2s7XG4gICAgYm9yZGVyLXJpZ2h0LXdpZHRoOiAycHg7XG4gICAgYm9yZGVyLXJpZ2h0LXN0eWxlOiBzb2xpZDsgICAgXG59XG46Om5nLWRlZXAgLm1hdC10YWItbGFiZWwubWF0LXRhYi1sYWJlbHtcbiAgICBoZWlnaHQ6IGF1dG87XG59XG46Om5nLWRlZXAgbWF0LXRhYi1ncm91cCB7XG4gICAgcG9zaXRpb246IHN0aWNreTtcbn1cbiJdfQ== */\"","import { Component, OnInit } from '@angular/core';\nimport { Token } from '../../rest/model/token';\nimport { DeviceEventControllerService, DeviceEventWithRelations } from 'src/app/rest';\nimport jwt_decode from 'jwt-decode';\nimport moment from 'moment';\n\n@Component({\n  selector: 'app-telemetry-event',\n  templateUrl: './telemetry-event.component.html',\n  styleUrls: ['./telemetry-event.component.css']\n})\nexport class TelemetryEventComponent implements OnInit {\n  serviceError = false;\n  loading = false;\n  telemetryEventArray: DeviceEventWithRelations[] = [];\n  events: any;\n  userID: number;\n\n  constructor(private deviceEventController: DeviceEventControllerService) { }\n\n  ngOnInit() {\n    this.getIdFromToken();\n    this.getEvents();\n  }\n  \n  getEvents() {\n    this.loading = true;\n    this.deviceEventController.deviceEventControllerFind(7, 0, 10)\n    .subscribe(response => {\n      this.telemetryEventArray = response;\n      this.loading = false;\n    }, errorRes => {\n      if (!errorRes.error || !errorRes.error.error || !errorRes.error.error.statusCode) {\n        this.serviceError = true;\n        this.loading = false;\n        return;\n      }\n      switch (parseInt(errorRes.error.error.statusCode)) {\n        case 401:\n          this.loading = false;\n        case 406:\n          this.serviceError = true;\n          this.loading = false;\n      }\n    });\n  }\n\n  getIdFromToken() {\n    const token: Token = JSON.parse(localStorage.getItem('token')).token;\n    const decoded = jwt_decode(token);\n    this.userID = decoded.id;\n  }\n\n  checkSeen(id: number, counter: number) {\n    const view = JSON.parse(this.telemetryEventArray[counter].viewedBy);\n    view.map(v => parseInt(v, 10));\n    if (view.includes(this.userID)) {\n      return true;\n    } else {\n      return false;\n    }\n  }\n\n  seeEvent(eventID: number) {\n    this.deviceEventController.deviceEventControllerUpdateViewedBy(eventID)\n    .subscribe(response => {\n      this.getEvents();\n    }, errorRes => {\n      if (!errorRes.error || !errorRes.error.error || !errorRes.error.error.statusCode) {\n        this.serviceError = true;\n        this.loading = false;\n        return;\n      }\n      switch (parseInt(errorRes.error.error.statusCode)) {\n        case 401:\n          this.loading = false;\n        case 406:\n          this.serviceError = true;\n          this.loading = false;\n      }\n    });\n  }\n\n  timeEvent(time: string) {\n    return moment(time).format('YYYY-MMM-DD HH:mm');\n  }\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2V2ZW50cy90aGVybW9ncmFwaHktZXZlbnQvdGhlcm1vZ3JhcGh5LWV2ZW50LmNvbXBvbmVudC5jc3MifQ== */\"","import { Component, OnInit } from '@angular/core';\n\n@Component({\n  selector: 'app-thermography-event',\n  templateUrl: './thermography-event.component.html',\n  styleUrls: ['./thermography-event.component.css']\n})\nexport class ThermographyEventComponent implements OnInit {\n  thermographyEventArray = [];\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n}\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL2Zvb3Rlci9mb290ZXIuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-footer',\r\n  templateUrl: './footer.component.html',\r\n  styleUrls: ['./footer.component.css']\r\n})\r\nexport class FooterComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"/* .container-fluid {\\r\\n  padding-right: 15px;\\r\\n  padding-left: 15px;\\r\\n  margin-right: auto;\\r\\n  margin-left: auto;\\r\\n} */\\r\\n.inline{\\r\\n  display: inline-block;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL2hlYWRlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBOzs7OztHQUtHO0FBQ0g7RUFDRSxxQkFBcUI7QUFDdkIiLCJmaWxlIjoic3JjL2FwcC9oZWFkZXIvaGVhZGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIvKiAuY29udGFpbmVyLWZsdWlkIHtcclxuICBwYWRkaW5nLXJpZ2h0OiAxNXB4O1xyXG4gIHBhZGRpbmctbGVmdDogMTVweDtcclxuICBtYXJnaW4tcmlnaHQ6IGF1dG87XHJcbiAgbWFyZ2luLWxlZnQ6IGF1dG87XHJcbn0gKi9cclxuLmlubGluZXtcclxuICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbn0iXX0= */\"","import { Component, OnInit, OnDestroy, ViewChild } from '@angular/core';\r\nimport { Subscription } from 'rxjs';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { NotificationComponent } from './notification/notification.component';\r\n\r\n@Component({\r\n  selector: 'app-header',\r\n  templateUrl: './header.component.html',\r\n  styleUrls: ['./header.component.css']\r\n})\r\nexport class HeaderComponent implements OnInit, OnDestroy {\r\n  private tokenSub: Subscription;\r\n  openMenu=false;\r\n  isAuthenticated = false;\r\n  @ViewChild (NotificationComponent, {static: false}) notify;\r\n  array : any[];\r\n  \r\n  constructor(private authService: AuthService) { }\r\n  \r\n  ngOnInit() {\r\n    this.tokenSub = this.authService.token.subscribe(token => {\r\n      this.isAuthenticated = !!token;\r\n    });\r\n  }\r\n  ngAfterViewInit() {\r\n    this.array = this.notify.eventsArray;\r\n  }\r\n  \r\n  ngOnDestroy() {\r\n    this.tokenSub.unsubscribe();\r\n  }\r\n  \r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n}\r\n","export default \".notify {\\r\\n    color: yellow;\\r\\n    border-radius: 50%;\\r\\n    font-size: 150%;\\r\\n  }\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvaGVhZGVyL25vdGlmaWNhdGlvbi9ub3RpZmljYXRpb24uY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLGFBQWE7SUFDYixrQkFBa0I7SUFDbEIsZUFBZTtFQUNqQiIsImZpbGUiOiJzcmMvYXBwL2hlYWRlci9ub3RpZmljYXRpb24vbm90aWZpY2F0aW9uLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubm90aWZ5IHtcclxuICAgIGNvbG9yOiB5ZWxsb3c7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBmb250LXNpemU6IDE1MCU7XHJcbiAgfSJdfQ== */\"","import { Component, OnInit } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-notify',\r\n  templateUrl: './notification.component.html',\r\n  styleUrls: ['./notification.component.css']\r\n})\r\nexport class NotificationComponent implements OnInit {\r\n  eventsArray: any[] = [1,2,3,4,5,6];\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \".sidenav-container {\\r\\n  height: 100%;\\r\\n}\\r\\n\\r\\n.sidenav {\\r\\n  width: 200px;\\r\\n  box-shadow: 0 16px 38px -12px rgba(0, 0, 0, 0.56), 0 4px 25px 0px rgba(0, 0, 0, 0.12), 0 8px 10px -5px rgba(0, 0, 0, 0.2);\\r\\n  border: none;\\r\\n}\\r\\n\\r\\n.sidenav .mat-toolbar {\\r\\n  background: inherit;\\r\\n}\\r\\n\\r\\n.mat-toolbar.mat-primary {\\r\\n  position: -webkit-sticky;\\r\\n  position: sticky;\\r\\n  top: 0;\\r\\n  z-index: 1;\\r\\n}\\r\\n\\r\\n/*#footer {\\r\\n  background-color: blue;\\r\\n  height: 24px;\\r\\n  width: 100%;\\r\\n  color: white;\\r\\n  text-align: center;\\r\\n}*/\\r\\n\\r\\n.footer {\\r\\n  position: absolute;\\r\\n  bottom: 0;\\r\\n  display: -webkit-box;\\r\\n  display: flex;\\r\\n  width: 100%;\\r\\n  background-color: rgb(183, 201, 203);\\r\\n  color: rgb(28, 101, 133);\\r\\n}\\r\\n\\r\\n#main {\\r\\n  /* Firefox */\\r\\n/* WebKit */\\r\\n  /* Opera */\\r\\n  min-height: -o-calc(100% - 84px);\\r\\n  /* Standard */\\r\\n  min-height: calc(100% - 84px);\\r\\n}\\r\\n\\r\\n/* ::ng-deep .mat-drawer-inner-container {\\r\\n  background-image: linear-gradient(to top, rgba(234, 0, 255, 0.685), rgba(183, 0, 255, 0)); \\r\\n} */\\r\\n\\r\\n::ng-deep .mat-drawer-inner-container {\\r\\n  background: rgba(218, 216, 221, 0.404);\\r\\n}\\r\\n\\r\\n.bgimg {\\r\\n  display:block;\\r\\n  width:auto;\\r\\n  height:auto;\\r\\n  background: url('PV-Auto-Scout-logo-final12675.png');\\r\\n  background-repeat: no-repeat;\\r\\n  background-position: center center;  \\r\\n  background-size: contain;\\r\\n}\\r\\n\\r\\n.centerize {\\r\\n    display : -webkit-box;\\r\\n    display : flex;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWFpbi1uYXYvbWFpbi1uYXYuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtFQUNFLFlBQVk7QUFDZDs7QUFFQTtFQUNFLFlBQVk7RUFDWix5SEFBeUg7RUFDekgsWUFBWTtBQUNkOztBQUVBO0VBQ0UsbUJBQW1CO0FBQ3JCOztBQUVBO0VBQ0Usd0JBQWdCO0VBQWhCLGdCQUFnQjtFQUNoQixNQUFNO0VBQ04sVUFBVTtBQUNaOztBQUVBOzs7Ozs7RUFNRTs7QUFFRjtFQUNFLGtCQUFrQjtFQUNsQixTQUFTO0VBQ1Qsb0JBQWE7RUFBYixhQUFhO0VBQ2IsV0FBVztFQUNYLG9DQUFvQztFQUNwQyx3QkFBd0I7QUFDMUI7O0FBR0E7RUFDRSxZQUFZO0FBRWQsV0FBVztFQUVULFVBQVU7RUFDVixnQ0FBZ0M7RUFDaEMsYUFBYTtFQUNiLDZCQUE2QjtBQUMvQjs7QUFDQTs7R0FFRzs7QUFDSDtFQUNFLHNDQUFzQztBQUN4Qzs7QUFDQTtFQUNFLGFBQWE7RUFDYixVQUFVO0VBQ1YsV0FBVztFQUNYLG9EQUFzRTtFQUN0RSw0QkFBNEI7RUFDNUIsa0NBQWtDO0VBQ2xDLHdCQUF3QjtBQUMxQjs7QUFDQTtJQUNJLHFCQUFjO0lBQWQsY0FBYztJQUNkLHlCQUFtQjtZQUFuQixtQkFBbUI7SUFDbkIsd0JBQXVCO1lBQXZCLHVCQUF1QjtBQUMzQiIsImZpbGUiOiJzcmMvYXBwL21haW4tbmF2L21haW4tbmF2LmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIuc2lkZW5hdi1jb250YWluZXIge1xyXG4gIGhlaWdodDogMTAwJTtcclxufVxyXG5cclxuLnNpZGVuYXYge1xyXG4gIHdpZHRoOiAyMDBweDtcclxuICBib3gtc2hhZG93OiAwIDE2cHggMzhweCAtMTJweCByZ2JhKDAsIDAsIDAsIDAuNTYpLCAwIDRweCAyNXB4IDBweCByZ2JhKDAsIDAsIDAsIDAuMTIpLCAwIDhweCAxMHB4IC01cHggcmdiYSgwLCAwLCAwLCAwLjIpO1xyXG4gIGJvcmRlcjogbm9uZTtcclxufVxyXG5cclxuLnNpZGVuYXYgLm1hdC10b29sYmFyIHtcclxuICBiYWNrZ3JvdW5kOiBpbmhlcml0O1xyXG59XHJcblxyXG4ubWF0LXRvb2xiYXIubWF0LXByaW1hcnkge1xyXG4gIHBvc2l0aW9uOiBzdGlja3k7XHJcbiAgdG9wOiAwO1xyXG4gIHotaW5kZXg6IDE7XHJcbn1cclxuXHJcbi8qI2Zvb3RlciB7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcclxuICBoZWlnaHQ6IDI0cHg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgY29sb3I6IHdoaXRlO1xyXG4gIHRleHQtYWxpZ246IGNlbnRlcjtcclxufSovXHJcblxyXG4uZm9vdGVyIHtcclxuICBwb3NpdGlvbjogYWJzb2x1dGU7XHJcbiAgYm90dG9tOiAwO1xyXG4gIGRpc3BsYXk6IGZsZXg7XHJcbiAgd2lkdGg6IDEwMCU7XHJcbiAgYmFja2dyb3VuZC1jb2xvcjogcmdiKDE4MywgMjAxLCAyMDMpO1xyXG4gIGNvbG9yOiByZ2IoMjgsIDEwMSwgMTMzKTtcclxufVxyXG5cclxuXHJcbiNtYWluIHtcclxuICAvKiBGaXJlZm94ICovXHJcbiAgbWluLWhlaWdodDogLW1vei1jYWxjKDEwMCUgLSA4NHB4KTtcclxuLyogV2ViS2l0ICovXHJcbiAgbWluLWhlaWdodDogLXdlYmtpdC1jYWxjKDEwMCUgLSA4NHB4KTtcclxuICAvKiBPcGVyYSAqL1xyXG4gIG1pbi1oZWlnaHQ6IC1vLWNhbGMoMTAwJSAtIDg0cHgpO1xyXG4gIC8qIFN0YW5kYXJkICovXHJcbiAgbWluLWhlaWdodDogY2FsYygxMDAlIC0gODRweCk7XHJcbn1cclxuLyogOjpuZy1kZWVwIC5tYXQtZHJhd2VyLWlubmVyLWNvbnRhaW5lciB7XHJcbiAgYmFja2dyb3VuZC1pbWFnZTogbGluZWFyLWdyYWRpZW50KHRvIHRvcCwgcmdiYSgyMzQsIDAsIDI1NSwgMC42ODUpLCByZ2JhKDE4MywgMCwgMjU1LCAwKSk7IFxyXG59ICovXHJcbjo6bmctZGVlcCAubWF0LWRyYXdlci1pbm5lci1jb250YWluZXIge1xyXG4gIGJhY2tncm91bmQ6IHJnYmEoMjE4LCAyMTYsIDIyMSwgMC40MDQpO1xyXG59XHJcbi5iZ2ltZyB7XHJcbiAgZGlzcGxheTpibG9jaztcclxuICB3aWR0aDphdXRvO1xyXG4gIGhlaWdodDphdXRvO1xyXG4gIGJhY2tncm91bmQ6IHVybCgnc3JjL2Fzc2V0cy9pbWFnZXMvUFYtQXV0by1TY291dC1sb2dvLWZpbmFsMTI2NzUucG5nJyk7XHJcbiAgYmFja2dyb3VuZC1yZXBlYXQ6IG5vLXJlcGVhdDtcclxuICBiYWNrZ3JvdW5kLXBvc2l0aW9uOiBjZW50ZXIgY2VudGVyOyAgXHJcbiAgYmFja2dyb3VuZC1zaXplOiBjb250YWluO1xyXG59XHJcbi5jZW50ZXJpemUge1xyXG4gICAgZGlzcGxheSA6IGZsZXg7XHJcbiAgICBhbGlnbi1pdGVtczogY2VudGVyO1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbn0iXX0= */\"","import { Component } from '@angular/core';\r\nimport { BreakpointObserver, Breakpoints } from '@angular/cdk/layout';\r\nimport { Observable, Subscription } from 'rxjs';\r\nimport { map, shareReplay } from 'rxjs/operators';\r\nimport { AuthService } from '../auth/auth.service';\r\nimport { Router, ActivatedRoute } from '@angular/router';\r\nimport { Location } from '@angular/common';\r\n\r\n\r\n@Component({\r\n  selector: 'app-main-nav',\r\n  templateUrl: './main-nav.component.html',\r\n  styleUrls: ['./main-nav.component.css']\r\n})\r\nexport class MainNavComponent {\r\n  private tokenSub: Subscription;\r\n  private displayHeader = 'My plants';\r\n  isAuthenticated = false;\r\n  routerOutletComponent: any;\r\n  routerOutletComponentClassName: any;\r\n\r\n  isHandset$: Observable<boolean> = this.breakpointObserver.observe(Breakpoints.Handset)\r\n    .pipe(\r\n      map(result => result.matches),\r\n      shareReplay()\r\n    );\r\n\r\n  constructor(\r\n    private breakpointObserver: BreakpointObserver,\r\n    private authService: AuthService,\r\n    public router: Router,\r\n    private location: Location ) { }\r\n\r\n  ngOnInit() {\r\n    this.tokenSub = this.authService.token.subscribe(token => {\r\n      this.isAuthenticated = !!token;\r\n    });\r\n  }\r\n\r\n  ngOnDestroy() {\r\n    this.tokenSub.unsubscribe();\r\n  }\r\n\r\n  onLogout() {\r\n    this.authService.logout();\r\n  }\r\n\r\n  navTo(endPath: string) {\r\n    const path = this.router.routerState.snapshot.root.firstChild.url[0].path + '/'\r\n        + this.router.routerState.snapshot.root.firstChild.url[1].path + '/'\r\n        + this.router.routerState.snapshot.root.firstChild.url[2].path + '/'\r\n        + this.router.routerState.snapshot.root.firstChild.url[3].path + '/';\r\n    this.router.navigate([path + endPath]);\r\n  }\r\n\r\n  navToAssetGroup() {\r\n    this.router.navigate(['/assetGroups']);\r\n  }\r\n\r\n  navToAssets() {\r\n    this.displayHeader = 'Asset';\r\n    if (this.router.url.includes('asset')) {\r\n      const path = this.router.routerState.snapshot.root.firstChild.url[0].path + '/'\r\n        + this.router.routerState.snapshot.root.firstChild.url[1].path;\r\n      this.router.navigate([path]);\r\n    }\r\n  }\r\n\r\n  onActivate(event) {\r\n    this.routerOutletComponent = event;\r\n    this.routerOutletComponentClassName = event.constructor.name;\r\n    console.log(this.routerOutletComponentClassName);\r\n  }\r\n}\r\n","export default \"::ng-deep mat-expansion-panel-header > .mat-content {\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n}\\r\\n::ng-deep mat-expansion-panel {\\r\\n    border-radius: 30px!important;\\r\\n}\\r\\n.unopened {\\r\\n    background-color: blue;\\r\\n}\\r\\n.unopened:hover {\\r\\n    background: blue!important;\\r\\n}\\r\\n.mat-expansion-panel-header.mat-expanded {\\r\\n    background: none!important;\\r\\n}\\r\\n.mat-expansion-panel.mat-expanded {\\r\\n    border: solid 2px blue!important;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWlzc2lvbi1jb250cm9sbGVyL2NvbmZpZy9jb25maWcuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHdCQUF1QjtZQUF2Qix1QkFBdUI7QUFDM0I7QUFDQTtJQUNJLDZCQUE2QjtBQUNqQztBQUNBO0lBQ0ksc0JBQXNCO0FBQzFCO0FBQ0E7SUFDSSwwQkFBMEI7QUFDOUI7QUFDQTtJQUNJLDBCQUEwQjtBQUM5QjtBQUNBO0lBQ0ksZ0NBQWdDO0FBQ3BDIiwiZmlsZSI6InNyYy9hcHAvbWlzc2lvbi1jb250cm9sbGVyL2NvbmZpZy9jb25maWcuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIjo6bmctZGVlcCBtYXQtZXhwYW5zaW9uLXBhbmVsLWhlYWRlciA+IC5tYXQtY29udGVudCB7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG46Om5nLWRlZXAgbWF0LWV4cGFuc2lvbi1wYW5lbCB7XHJcbiAgICBib3JkZXItcmFkaXVzOiAzMHB4IWltcG9ydGFudDtcclxufVxyXG4udW5vcGVuZWQge1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogYmx1ZTtcclxufVxyXG4udW5vcGVuZWQ6aG92ZXIge1xyXG4gICAgYmFja2dyb3VuZDogYmx1ZSFpbXBvcnRhbnQ7XHJcbn1cclxuLm1hdC1leHBhbnNpb24tcGFuZWwtaGVhZGVyLm1hdC1leHBhbmRlZCB7XHJcbiAgICBiYWNrZ3JvdW5kOiBub25lIWltcG9ydGFudDtcclxufVxyXG4ubWF0LWV4cGFuc2lvbi1wYW5lbC5tYXQtZXhwYW5kZWQge1xyXG4gICAgYm9yZGVyOiBzb2xpZCAycHggYmx1ZSFpbXBvcnRhbnQ7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ThessalyAPIService } from 'src/app/services/thessaly-api.service';\r\n\r\n@Component({\r\n  selector: 'app-config',\r\n  templateUrl: './config.component.html',\r\n  styleUrls: ['./config.component.css']\r\n})\r\nexport class ConfigComponent implements OnInit {\r\n\r\n  tempMissionsList = [\"Mission 1\", \"Mission 2\", \"Mission 3\"];\r\n  errorMessage: string;\r\n  selectedFile64: any;\r\n  missionName: string;\r\n  ImageBaseData:string | ArrayBuffer=null;\r\n\r\n  constructor(private thessalyApiService: ThessalyAPIService) { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n  getAllMissions() {\r\n    this.thessalyApiService.controllerGetMission('GetMissionsHistory')\r\n    .subscribe(\r\n      response => {\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  handleFileInput(event) {\r\n    var selectedFile = event.target.files[0];\r\n\r\n    getBase64(selectedFile).\r\n    then(data => {\r\n        this.selectedFile64 = data;\r\n    });\r\n\r\n    function getBase64(file) {\r\n      return new Promise((resolve, reject) => {\r\n        const reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = () => resolve(reader.result);\r\n        reader.onerror = error => reject(error);\r\n      });\r\n    }\r\n\r\n  }\r\n\r\n  loadMission() {\r\n    this.thessalyApiService.controllerPostMission('LoadMission', {MissionName: this.missionName, MissionBin: this.selectedFile64})\r\n    .subscribe(\r\n      response => {\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  getBase64Image(img) {\r\n    // Create an empty canvas element\r\n    var canvas = document.createElement(\"canvas\");\r\n    canvas.width = img.width;\r\n    canvas.height = img.height;\r\n\r\n    // Copy the image contents to the canvas\r\n    var ctx = canvas.getContext(\"2d\");\r\n    ctx.drawImage(img, 0, 0);\r\n\r\n    // Get the data-URL formatted image\r\n    // Firefox supports PNG and JPEG. You could check img.src to\r\n    // guess the original format, but be aware the using \"image/jpg\"\r\n    // will re-encode the image.\r\n    var dataURL = canvas.toDataURL(\"image/png\");\r\n\r\n    return dataURL.replace(/^data:image\\/(png|jpg);base64,/, \"\");\r\n  }\r\n}\r\n","export default \"mat-card-title { \\r\\n    text-align: center \\r\\n}\\r\\n.border {\\r\\n    border-radius: 20px;\\r\\n    box-shadow: 10px 10px 10px -1px rgba(0, 0, 0, 0.14);\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWlzc2lvbi1jb250cm9sbGVyL2NvbnRyb2xzL2NvbnRyb2xzLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSTtBQUNKO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsbURBQW1EO0FBQ3ZEIiwiZmlsZSI6InNyYy9hcHAvbWlzc2lvbi1jb250cm9sbGVyL2NvbnRyb2xzL2NvbnRyb2xzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyJtYXQtY2FyZC10aXRsZSB7IFxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyIFxyXG59XHJcbi5ib3JkZXIge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICAgIGJveC1zaGFkb3c6IDEwcHggMTBweCAxMHB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjE0KTtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Mission } from 'src/app/models/mission';\r\nimport { ThessalyAPIService } from 'src/app/services/thessaly-api.service';\r\n\r\n@Component({\r\n  selector: 'app-controls',\r\n  templateUrl: './controls.component.html',\r\n  styleUrls: ['./controls.component.css']\r\n})\r\nexport class ControlsComponent implements OnInit {\r\n\r\n  tempMissionList = ['Mission 1', 'Mission 2', 'Mission 3'];\r\n  missionList: Mission;\r\n  imageList = [\r\n    'play_arrow',\r\n    'pause'];\r\n  counter = 0;\r\n  selectedImage = this.imageList[0];\r\n  selectedMission: string;\r\n  state = 'start';\r\n  errorMessage: string;\r\n  color = 'green';\r\n  currentMissionStatus: Mission = {MissionName: 'empty', MissionStatus: 'empty'};\r\n\r\n  constructor(private thessalyApiService: ThessalyAPIService) { }\r\n\r\n  ngOnInit() {\r\n    // this.missionName();\r\n    // this.startMission();\r\n  }\r\n\r\n  onClickStart() {\r\n    // if (this.counter === 0) {\r\n    //   this.startMission();\r\n    // } else if (this.counter % 2 === 0) {\r\n    //   this.resumeMission();\r\n    // } else {\r\n    //   this.suspendMission();\r\n    // }\r\n    this.counter += 1;\r\n    this.selectedImage = this.imageList[this.counter % 2];\r\n    this.color = 'yellow';\r\n  }\r\n\r\n  onClickStop() {\r\n    this.counter = 0;\r\n    this.color = 'green';\r\n    this.selectedImage = this.imageList[0];\r\n    // this.abortMission();\r\n  }\r\n\r\n  missionName() {\r\n    this.thessalyApiService.controllerGetMission('GetMissionStatus')\r\n    .subscribe(\r\n      response => {\r\n        this.missionList = response;\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  currentMission() {\r\n    this.thessalyApiService.controllerGetMission('GetMissionStatus')\r\n    .subscribe(\r\n      response => {\r\n        this.currentMissionStatus = response;\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  startMission() {\r\n    this.thessalyApiService.controllerPostMission('StartMission', {MissionName: 'peratis_all'})\r\n    .subscribe(\r\n      response => {\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  suspendMission() {\r\n    this.thessalyApiService.controllerPostMission('SuspendMission', {})\r\n    .subscribe(\r\n      response => {\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  resumeMission() {\r\n    this.thessalyApiService.controllerPostMission('ResumeMission', {})\r\n    .subscribe(\r\n      response => {\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  abortMission() {\r\n    this.thessalyApiService.controllerPostMission('AbortMission', {})\r\n    .subscribe(\r\n      response => {\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \".row {\\r\\n    margin: 0;\\r\\n}\\r\\nmat-card-title { \\r\\n    text-align: center \\r\\n}\\r\\n.dot {\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    background-color: red;\\r\\n    border-radius: 50%;\\r\\n    display: inline-block;\\r\\n}\\r\\n.border {\\r\\n    border-radius: 20px;\\r\\n    box-shadow: 10px 10px 10px -1px rgba(0, 0, 0, 0.14);\\r\\n}\\r\\n.centerize {\\r\\n    display : -webkit-box;\\r\\n    display : flex;\\r\\n    margin : auto;\\r\\n    -webkit-box-align: center;\\r\\n            align-items: center;\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWlzc2lvbi1jb250cm9sbGVyL2Ryb25lLWNvbnRyb2xsZXIvZHJvbmUtY29udHJvbGxlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksU0FBUztBQUNiO0FBQ0E7SUFDSTtBQUNKO0FBQ0E7SUFDSSxZQUFZO0lBQ1osV0FBVztJQUNYLHFCQUFxQjtJQUNyQixrQkFBa0I7SUFDbEIscUJBQXFCO0FBQ3pCO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsbURBQW1EO0FBQ3ZEO0FBQ0E7SUFDSSxxQkFBYztJQUFkLGNBQWM7SUFDZCxhQUFhO0lBQ2IseUJBQW1CO1lBQW5CLG1CQUFtQjtJQUNuQix3QkFBdUI7WUFBdkIsdUJBQXVCO0FBQzNCIiwiZmlsZSI6InNyYy9hcHAvbWlzc2lvbi1jb250cm9sbGVyL2Ryb25lLWNvbnRyb2xsZXIvZHJvbmUtY29udHJvbGxlci5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsiLnJvdyB7XHJcbiAgICBtYXJnaW46IDA7XHJcbn1cclxubWF0LWNhcmQtdGl0bGUgeyBcclxuICAgIHRleHQtYWxpZ246IGNlbnRlciBcclxufVxyXG4uZG90IHtcclxuICAgIGhlaWdodDogMTAwJTtcclxuICAgIHdpZHRoOiAxMDAlO1xyXG4gICAgYmFja2dyb3VuZC1jb2xvcjogcmVkO1xyXG4gICAgYm9yZGVyLXJhZGl1czogNTAlO1xyXG4gICAgZGlzcGxheTogaW5saW5lLWJsb2NrO1xyXG59XHJcbi5ib3JkZXIge1xyXG4gICAgYm9yZGVyLXJhZGl1czogMjBweDtcclxuICAgIGJveC1zaGFkb3c6IDEwcHggMTBweCAxMHB4IC0xcHggcmdiYSgwLCAwLCAwLCAwLjE0KTtcclxufVxyXG4uY2VudGVyaXplIHtcclxuICAgIGRpc3BsYXkgOiBmbGV4O1xyXG4gICAgbWFyZ2luIDogYXV0bztcclxuICAgIGFsaWduLWl0ZW1zOiBjZW50ZXI7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxufVxyXG4iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { DroneStatus } from 'src/app/models/droneStatus';\r\nimport { LocationService } from 'src/app/services/location-service';\r\nimport { ThessalyAPIService } from 'src/app/services/thessaly-api.service';\r\n\r\n@Component({\r\n  selector: 'app-drone-controller',\r\n  templateUrl: './drone-controller.component.html',\r\n  styleUrls: ['./drone-controller.component.css']\r\n})\r\nexport class DroneControllerComponent implements OnInit {\r\n  errorMessage: string;\r\n  imageUrl = 'assets/images/';\r\n  droneStatusResponse: DroneStatus;\r\n  fightStatusImageUrl = 'assets/images/loading.svg';\r\n  vehicleModeImageUrl = 'assets/images/loading.svg';\r\n  batteryStatus = 50;\r\n\r\n  constructor(\r\n    private thessalyApiService: ThessalyAPIService,\r\n    private routeActive: ActivatedRoute,\r\n    private router: Router,\r\n    private locationService: LocationService) { }\r\n\r\n  ngOnInit() {\r\n    this.fightStatusImageUrl = 'assets/images/landing.svg';\r\n    this.vehicleModeImageUrl = 'assets/images/pause.svg';\r\n    this.getDroneSatus();\r\n  }\r\n\r\n  getDroneSatus() {\r\n    this.thessalyApiService.controllerDrone()\r\n    .subscribe(\r\n      response => {\r\n        this.droneStatusResponse = response;\r\n        this.locationService.coordinates(\r\n          this.droneStatusResponse.CurrentPosition.Latitude, this.droneStatusResponse.CurrentPosition.Longitude,\r\n          this.droneStatusResponse.HomePosition.Latitude, this.droneStatusResponse.HomePosition.Longitude);\r\n        // console.log(response);\r\n        // this.batteryStatus = parseInt(response.BatteryLevel, 10);\r\n        // this.getImages();\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  getImages() {\r\n    this.fightStatusImageUrl = this.imageUrl + this.droneStatusResponse.FlightStatus;\r\n    this.vehicleModeImageUrl = this.imageUrl + this.droneStatusResponse.VehicleMode;\r\n  }\r\n\r\n  openDetails() {\r\n    this.router.navigate(['../droneMap'], {relativeTo: this.routeActive});\r\n  }\r\n}\r\n","export default \".row {\\r\\n    margin: 0;\\r\\n}\\r\\nmat-card-title { \\r\\n    text-align: center \\r\\n}\\r\\n.dot {\\r\\n    height: 100%;\\r\\n    width: 100%;\\r\\n    background-color: red;\\r\\n    border-radius: 50%;\\r\\n    display: inline-block;\\r\\n  }\\r\\n.responsive {\\r\\n    width: 100%;\\r\\n    height: auto;\\r\\n}\\r\\n.border {\\r\\n    border-radius: 20px;\\r\\n    box-shadow: 10px 10px 10px -1px rgba(0, 0, 0, 0.14);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWlzc2lvbi1jb250cm9sbGVyL2hhbmdhci1jb250cm9sbGVyL2hhbmdhci1jb250cm9sbGVyLmNvbXBvbmVudC5jc3MiXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IkFBQUE7SUFDSSxTQUFTO0FBQ2I7QUFDQTtJQUNJO0FBQ0o7QUFDQTtJQUNJLFlBQVk7SUFDWixXQUFXO0lBQ1gscUJBQXFCO0lBQ3JCLGtCQUFrQjtJQUNsQixxQkFBcUI7RUFDdkI7QUFDRjtJQUNJLFdBQVc7SUFDWCxZQUFZO0FBQ2hCO0FBQ0E7SUFDSSxtQkFBbUI7SUFDbkIsbURBQW1EO0FBQ3ZEIiwiZmlsZSI6InNyYy9hcHAvbWlzc2lvbi1jb250cm9sbGVyL2hhbmdhci1jb250cm9sbGVyL2hhbmdhci1jb250cm9sbGVyLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIucm93IHtcclxuICAgIG1hcmdpbjogMDtcclxufVxyXG5tYXQtY2FyZC10aXRsZSB7IFxyXG4gICAgdGV4dC1hbGlnbjogY2VudGVyIFxyXG59XHJcbi5kb3Qge1xyXG4gICAgaGVpZ2h0OiAxMDAlO1xyXG4gICAgd2lkdGg6IDEwMCU7XHJcbiAgICBiYWNrZ3JvdW5kLWNvbG9yOiByZWQ7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICBkaXNwbGF5OiBpbmxpbmUtYmxvY2s7XHJcbiAgfVxyXG4ucmVzcG9uc2l2ZSB7XHJcbiAgICB3aWR0aDogMTAwJTtcclxuICAgIGhlaWdodDogYXV0bztcclxufVxyXG4uYm9yZGVyIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgICBib3gtc2hhZG93OiAxMHB4IDEwcHggMTBweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4xNCk7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { throwError } from 'rxjs';\r\nimport { catchError, map } from 'rxjs/operators';\r\nimport { HangarStatus } from 'src/app/models/hangarStatus';\r\nimport { ThessalyAPIService } from 'src/app/services/thessaly-api.service';\r\n\r\n@Component({\r\n  selector: 'app-hangar-controller',\r\n  templateUrl: './hangar-controller.component.html',\r\n  styleUrls: ['./hangar-controller.component.css']\r\n})\r\nexport class HangarControllerComponent implements OnInit {\r\n  errorMessage: string;\r\n  hangarStatusResponse: HangarStatus;\r\n  imageUrl = 'assets/images/';\r\n  hatchImageUrl = 'assets/images/loading.svg';\r\n  dockingImageUrl = 'assets/images/loading.svg';\r\n  chargingImageUrl = 'assets/images/loading.svg';\r\n\r\n  constructor(\r\n    private thessalyApiService: ThessalyAPIService) { }\r\n\r\n  ngOnInit() {\r\n    this.getHangarStatus();\r\n  }\r\n\r\n  getHangarStatus() {\r\n    this.thessalyApiService.controllerHangarGetState()\r\n    .subscribe(\r\n      response => {\r\n        this.hangarStatusResponse = response;\r\n        console.log(response);\r\n        this.getImages();\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  getImages() {\r\n\r\n    if (this.hangarStatusResponse.Hatch === 'OPEN') {\r\n      this.hatchImageUrl = this.imageUrl + 'opened.svg';\r\n    } else if (this.hangarStatusResponse.Hatch === 'CLOSE') {\r\n      this.hatchImageUrl = this.imageUrl + 'close.svg';\r\n    } else if (this.hangarStatusResponse.Hatch === 'OPENING') {\r\n      this.hatchImageUrl = this.imageUrl + 'opening.svg';\r\n    } else if (this.hangarStatusResponse.Hatch === 'CLOSING') {\r\n      this.hatchImageUrl = this.imageUrl + 'closing.svg';\r\n    } else {\r\n      console.log('I dont get right response');\r\n    }\r\n\r\n    if (this.hangarStatusResponse.Docking === 'DOCKED') {\r\n      this.dockingImageUrl = this.imageUrl + 'TopDocking.svg';\r\n    } else if (this.hangarStatusResponse.Docking === 'NOTDOCKED') {\r\n      this.dockingImageUrl = this.imageUrl + 'Bottom.svg';\r\n    } else {\r\n      console.log('I dont get right response');\r\n    }\r\n\r\n    if (this.hangarStatusResponse.Charging === 'True') {\r\n      this.chargingImageUrl = this.imageUrl + 'battery-charging.svg';\r\n    }  else {\r\n      this.chargingImageUrl = this.imageUrl + 'battery.svg';\r\n    }\r\n  }\r\n}\r\n","export default \"mat-card-title { \\r\\n    text-align: center \\r\\n}\\r\\n.border {\\r\\n    border-radius: 20px;\\r\\n    box-shadow: 10px 10px 10px -1px rgba(0, 0, 0, 0.14);\\r\\n}\\r\\n.circle {\\r\\n    border-radius: 50%;\\r\\n    width: 36px;\\r\\n    height: 36px;\\r\\n    border: 2px solid #666;\\r\\n    color: #666;\\r\\n    text-align: center;\\r\\n    font: 25px Arial, sans-serif;\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWlzc2lvbi1jb250cm9sbGVyL2hpc3RvcnkvaGlzdG9yeS5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7QUFDSjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLG1EQUFtRDtBQUN2RDtBQUNBO0lBQ0ksa0JBQWtCO0lBQ2xCLFdBQVc7SUFDWCxZQUFZO0lBQ1osc0JBQXNCO0lBQ3RCLFdBQVc7SUFDWCxrQkFBa0I7SUFDbEIsNEJBQTRCO0FBQ2hDIiwiZmlsZSI6InNyYy9hcHAvbWlzc2lvbi1jb250cm9sbGVyL2hpc3RvcnkvaGlzdG9yeS5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmQtdGl0bGUgeyBcclxuICAgIHRleHQtYWxpZ246IGNlbnRlciBcclxufVxyXG4uYm9yZGVyIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgICBib3gtc2hhZG93OiAxMHB4IDEwcHggMTBweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4xNCk7XHJcbn1cclxuLmNpcmNsZSB7XHJcbiAgICBib3JkZXItcmFkaXVzOiA1MCU7XHJcbiAgICB3aWR0aDogMzZweDtcclxuICAgIGhlaWdodDogMzZweDtcclxuICAgIGJvcmRlcjogMnB4IHNvbGlkICM2NjY7XHJcbiAgICBjb2xvcjogIzY2NjtcclxuICAgIHRleHQtYWxpZ246IGNlbnRlcjtcclxuICAgIGZvbnQ6IDI1cHggQXJpYWwsIHNhbnMtc2VyaWY7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Mission } from 'src/app/models/mission';\r\nimport { ActivatedRoute, Router } from '@angular/router';\r\nimport { ThessalyAPIService } from 'src/app/services/thessaly-api.service';\r\nimport { ContentObserver } from '@angular/cdk/observers';\r\n\r\n@Component({\r\n  selector: 'app-history',\r\n  templateUrl: './history.component.html',\r\n  styleUrls: ['./history.component.css']\r\n})\r\nexport class HistoryComponent implements OnInit {\r\n  history = [\r\n    { MissionName: 'Mission 1 Default event', StartTime: '1/1/1', FinishTime: '2/3/4/4', StartEvent: 'Timer'},\r\n    { MissionName: 'Mission 2 User', StartTime: '1/12/1', FinishTime: '2/3/4', StartEvent: 'SolarMonitor'},\r\n  ];\r\n  historu: Mission[] = [];\r\n  errorMessage: string;\r\n  constructor(\r\n    private thessalyApiService: ThessalyAPIService,\r\n    private routeActive: ActivatedRoute,\r\n    private router: Router) { }\r\n\r\n  ngOnInit() {\r\n    // this.getMissionHistory();\r\n  }\r\n\r\n  getMissionHistory() {\r\n    this.thessalyApiService.controllerGetMission('GetStoredMissions')\r\n    .subscribe(\r\n      response => {\r\n        this.historu.push(response);\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  openThermography(missionName: string) {\r\n    this.router.navigate(['../' + missionName + '/thermography'], { relativeTo: this.routeActive});\r\n  }\r\n}\r\n","export default \".mat-tab-labels {\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    padding-top: 5px;\\r\\n    height: 2rem;\\r\\n}\\r\\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar{\\r\\n    background: none;\\r\\n}\\r\\n.mat-tab-label.mat-tab-label-active {\\r\\n    color:red;\\r\\n    opacity: 1;\\r\\n}\\r\\n.mat-tab-label{\\r\\n    border-right-color: black;\\r\\n    border-right-width: 2px;\\r\\n    border-right-style: solid;    \\r\\n}\\r\\n.mat-tab-label.mat-tab-label{\\r\\n    height: auto;\\r\\n}\\r\\nmat-tab-group {\\r\\n    position: -webkit-sticky;\\r\\n    position: sticky;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWlzc2lvbi1jb250cm9sbGVyL21pc3Npb24tY29udHJvbGxlci5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0ksd0JBQXVCO1lBQXZCLHVCQUF1QjtJQUN2QixnQkFBZ0I7SUFDaEIsWUFBWTtBQUNoQjtBQUNBO0lBQ0ksZ0JBQWdCO0FBQ3BCO0FBQ0E7SUFDSSxTQUFTO0lBQ1QsVUFBVTtBQUNkO0FBQ0E7SUFDSSx5QkFBeUI7SUFDekIsdUJBQXVCO0lBQ3ZCLHlCQUF5QjtBQUM3QjtBQUNBO0lBQ0ksWUFBWTtBQUNoQjtBQUNBO0lBQ0ksd0JBQWdCO0lBQWhCLGdCQUFnQjtBQUNwQiIsImZpbGUiOiJzcmMvYXBwL21pc3Npb24tY29udHJvbGxlci9taXNzaW9uLWNvbnRyb2xsZXIuY29tcG9uZW50LmNzcyIsInNvdXJjZXNDb250ZW50IjpbIi5tYXQtdGFiLWxhYmVscyB7XHJcbiAgICBqdXN0aWZ5LWNvbnRlbnQ6IGNlbnRlcjtcclxuICAgIHBhZGRpbmctdG9wOiA1cHg7XHJcbiAgICBoZWlnaHQ6IDJyZW07XHJcbn1cclxuLm1hdC10YWItZ3JvdXAubWF0LXByaW1hcnkgLm1hdC1pbmstYmFyLCAubWF0LXRhYi1uYXYtYmFyLm1hdC1wcmltYXJ5IC5tYXQtaW5rLWJhcntcclxuICAgIGJhY2tncm91bmQ6IG5vbmU7XHJcbn1cclxuLm1hdC10YWItbGFiZWwubWF0LXRhYi1sYWJlbC1hY3RpdmUge1xyXG4gICAgY29sb3I6cmVkO1xyXG4gICAgb3BhY2l0eTogMTtcclxufVxyXG4ubWF0LXRhYi1sYWJlbHtcclxuICAgIGJvcmRlci1yaWdodC1jb2xvcjogYmxhY2s7XHJcbiAgICBib3JkZXItcmlnaHQtd2lkdGg6IDJweDtcclxuICAgIGJvcmRlci1yaWdodC1zdHlsZTogc29saWQ7ICAgIFxyXG59XHJcbi5tYXQtdGFiLWxhYmVsLm1hdC10YWItbGFiZWx7XHJcbiAgICBoZWlnaHQ6IGF1dG87XHJcbn1cclxubWF0LXRhYi1ncm91cCB7XHJcbiAgICBwb3NpdGlvbjogc3RpY2t5O1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, ViewEncapsulation } from '@angular/core';\r\n\r\n@Component({\r\n  selector: 'app-mission-controller',\r\n  templateUrl: './mission-controller.component.html',\r\n  styleUrls: ['./mission-controller.component.css'],\r\n  encapsulation: ViewEncapsulation.None\r\n\r\n})\r\nexport class MissionControllerComponent implements OnInit {\r\n\r\n  constructor() { }\r\n\r\n  ngOnInit() {\r\n  }\r\n\r\n}\r\n","export default \"\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsImZpbGUiOiJzcmMvYXBwL21pc3Npb24tY29udHJvbGxlci9taXNzaW9uL2RpYWxvZy1wb3B1cC9kaWFsb2ctcG9wdXAuY29tcG9uZW50LmNzcyJ9 */\"","import { Component, OnInit, Inject } from '@angular/core';\r\nimport { MatDialogRef, MAT_DIALOG_DATA } from '@angular/material/dialog';\r\nimport { FormBuilder, FormGroup } from '@angular/forms';\r\n\r\n@Component({\r\n  selector: 'app-dialog-popup',\r\n  templateUrl: './dialog-popup.component.html',\r\n  styleUrls: ['./dialog-popup.component.css']\r\n})\r\n\r\nexport class DialogPopupComponent implements OnInit {\r\n  form: FormGroup;\r\n  description: string;\r\n  timeArray: string[];\r\n  timeInput: number;\r\n  timeInput2: string;\r\n  valuesArray: string[] = ['Second(s)', 'Minute(s)', 'Hour(s)'];\r\n  singleSelect: string;\r\n  constructor(\r\n    private fb: FormBuilder,\r\n    private dialogRef: MatDialogRef<DialogPopupComponent>,\r\n    @Inject(MAT_DIALOG_DATA) public data) {\r\n      this.description = data.singleSelect;\r\n  }\r\n\r\n  ngOnInit() {\r\n    this.form = this.fb.group({\r\n      description: [this.description, []]});\r\n  }\r\n\r\n  save() {\r\n    this.data = [this.timeInput, this.singleSelect];\r\n    console.log(this.timeInput, this.singleSelect);\r\n    this.dialogRef.close(this.data);\r\n  }\r\n\r\n  close() {\r\n    this.dialogRef.close();\r\n  }\r\n}\r\n","export default \"mat-card-title { \\r\\n    text-align: center \\r\\n}\\r\\n.border {\\r\\n    border-radius: 20px;\\r\\n    box-shadow: 10px 10px 10px -1px rgba(0, 0, 0, 0.14);\\r\\n}\\r\\nspan {\\r\\n    position:absolute;\\r\\n    bottom:0;\\r\\n}\\r\\n.default:focus {\\r\\n    color: blue;\\r\\n}\\r\\n\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWlzc2lvbi1jb250cm9sbGVyL21pc3Npb24vbWlzc2lvbi5jb21wb25lbnQuY3NzIl0sIm5hbWVzIjpbXSwibWFwcGluZ3MiOiJBQUFBO0lBQ0k7QUFDSjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLG1EQUFtRDtBQUN2RDtBQUNBO0lBQ0ksaUJBQWlCO0lBQ2pCLFFBQVE7QUFDWjtBQUNBO0lBQ0ksV0FBVztBQUNmIiwiZmlsZSI6InNyYy9hcHAvbWlzc2lvbi1jb250cm9sbGVyL21pc3Npb24vbWlzc2lvbi5jb21wb25lbnQuY3NzIiwic291cmNlc0NvbnRlbnQiOlsibWF0LWNhcmQtdGl0bGUgeyBcclxuICAgIHRleHQtYWxpZ246IGNlbnRlciBcclxufVxyXG4uYm9yZGVyIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgICBib3gtc2hhZG93OiAxMHB4IDEwcHggMTBweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4xNCk7XHJcbn1cclxuc3BhbiB7XHJcbiAgICBwb3NpdGlvbjphYnNvbHV0ZTtcclxuICAgIGJvdHRvbTowO1xyXG59XHJcbi5kZWZhdWx0OmZvY3VzIHtcclxuICAgIGNvbG9yOiBibHVlO1xyXG59XHJcbiJdfQ== */\"","import { Component, OnInit, Input } from '@angular/core';\r\nimport { MatDialog, MatDialogConfig } from '@angular/material';\r\nimport { ThessalyAPIService } from 'src/app/services/thessaly-api.service';\r\nimport { DialogPopupComponent } from './dialog-popup/dialog-popup.component';\r\n\r\n@Component({\r\n  selector: 'app-mission',\r\n  templateUrl: './mission.component.html',\r\n  styleUrls: ['./mission.component.css']\r\n})\r\nexport class MissionComponent implements OnInit {\r\n  @Input() missionTitle = 'Mission 0';\r\n  errorMessage: string;\r\n  totalSeconds: number;\r\n  constructor(\r\n    private dialog: MatDialog,\r\n    private thessalyApiService: ThessalyAPIService) { }\r\n\r\n  ngOnInit() {\r\n    //mia fora na trexei to call oxi polles \r\n  }\r\n\r\n  openDialog(): void {\r\n    const dialogConfig = new MatDialogConfig();\r\n    dialogConfig.disableClose = true;\r\n    dialogConfig.width = '250px';\r\n    dialogConfig.height = '250px';\r\n    dialogConfig.autoFocus = true;\r\n    dialogConfig.data = { value: 'den lew'};\r\n    const dialogRef = this.dialog.open(DialogPopupComponent, dialogConfig);\r\n    dialogRef.afterClosed().subscribe(result => {\r\n      if (typeof result !== 'undefined') {\r\n        if (result[1] === 'Minute(s)') {\r\n          this.totalSeconds = result[0] * 60;\r\n        } else if (result[1] === 'Hour(s)') {\r\n          this.totalSeconds = result[0] * 3600;\r\n        } else {\r\n          this.totalSeconds = result[0];\r\n        }\r\n      }\r\n    });\r\n   }\r\n\r\n   setPeriodForDefaultMission() {\r\n    //this.thessalyApiService.controllerPostMission('SetPeriodForDefaultMission', {Period: this.totalSeconds})\r\n    this.thessalyApiService.controllerPostMission('SetPeriodForDefaultMission', {Period: 500})\r\n    .subscribe(\r\n      response => {\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  setMissionDefault(missionName: string) {\r\n    this.thessalyApiService.controllerPostMission('SetDefaultMission', {MissionName: missionName})\r\n    .subscribe(\r\n      response => {\r\n        this.setPeriodForDefaultMission();\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n      }\r\n    );\r\n  }\r\n\r\n  removeMission(missionName: string) {\r\n    this.thessalyApiService.controllerPostMission('RemoveMission', {MissionName: missionName})\r\n    .subscribe(\r\n      response => {\r\n        console.log(response);\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n      }\r\n    );\r\n  }\r\n}\r\n","export default \".mat-tab-labels {\\r\\n    -webkit-box-pack: center;\\r\\n            justify-content: center;\\r\\n    padding-top: 5px;\\r\\n    height: 2rem;\\r\\n}\\r\\n.mat-tab-group.mat-primary .mat-ink-bar, .mat-tab-nav-bar.mat-primary .mat-ink-bar{\\r\\n    background: none;\\r\\n}\\r\\n.mat-tab-label.mat-tab-label-active {\\r\\n    color:blue;\\r\\n    opacity: 1;\\r\\n}\\r\\n.mat-tab-label{\\r\\n    border-right-color: black;\\r\\n    border-right-width: 2px;\\r\\n    border-right-style: solid;    \\r\\n}\\r\\n.mat-tab-label.mat-tab-label{\\r\\n    height: auto;\\r\\n}\\r\\n.col-12 {\\r\\n    position: inline;\\r\\n}\\r\\nmat-card-title { \\r\\n    text-align: center \\r\\n}\\r\\n.border {\\r\\n    border-radius: 20px;\\r\\n    box-shadow: 10px 10px 10px -1px rgba(0, 0, 0, 0.14);\\r\\n}\\r\\n/*# sourceMappingURL=data:application/json;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbInNyYy9hcHAvbWlzc2lvbi1jb250cm9sbGVyL3N0YXR1cy9zdGF0dXMuY29tcG9uZW50LmNzcyJdLCJuYW1lcyI6W10sIm1hcHBpbmdzIjoiQUFBQTtJQUNJLHdCQUF1QjtZQUF2Qix1QkFBdUI7SUFDdkIsZ0JBQWdCO0lBQ2hCLFlBQVk7QUFDaEI7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0ksVUFBVTtJQUNWLFVBQVU7QUFDZDtBQUNBO0lBQ0kseUJBQXlCO0lBQ3pCLHVCQUF1QjtJQUN2Qix5QkFBeUI7QUFDN0I7QUFDQTtJQUNJLFlBQVk7QUFDaEI7QUFDQTtJQUNJLGdCQUFnQjtBQUNwQjtBQUNBO0lBQ0k7QUFDSjtBQUNBO0lBQ0ksbUJBQW1CO0lBQ25CLG1EQUFtRDtBQUN2RCIsImZpbGUiOiJzcmMvYXBwL21pc3Npb24tY29udHJvbGxlci9zdGF0dXMvc3RhdHVzLmNvbXBvbmVudC5jc3MiLCJzb3VyY2VzQ29udGVudCI6WyIubWF0LXRhYi1sYWJlbHMge1xyXG4gICAganVzdGlmeS1jb250ZW50OiBjZW50ZXI7XHJcbiAgICBwYWRkaW5nLXRvcDogNXB4O1xyXG4gICAgaGVpZ2h0OiAycmVtO1xyXG59XHJcbi5tYXQtdGFiLWdyb3VwLm1hdC1wcmltYXJ5IC5tYXQtaW5rLWJhciwgLm1hdC10YWItbmF2LWJhci5tYXQtcHJpbWFyeSAubWF0LWluay1iYXJ7XHJcbiAgICBiYWNrZ3JvdW5kOiBub25lO1xyXG59XHJcbi5tYXQtdGFiLWxhYmVsLm1hdC10YWItbGFiZWwtYWN0aXZlIHtcclxuICAgIGNvbG9yOmJsdWU7XHJcbiAgICBvcGFjaXR5OiAxO1xyXG59XHJcbi5tYXQtdGFiLWxhYmVse1xyXG4gICAgYm9yZGVyLXJpZ2h0LWNvbG9yOiBibGFjaztcclxuICAgIGJvcmRlci1yaWdodC13aWR0aDogMnB4O1xyXG4gICAgYm9yZGVyLXJpZ2h0LXN0eWxlOiBzb2xpZDsgICAgXHJcbn1cclxuLm1hdC10YWItbGFiZWwubWF0LXRhYi1sYWJlbHtcclxuICAgIGhlaWdodDogYXV0bztcclxufVxyXG4uY29sLTEyIHtcclxuICAgIHBvc2l0aW9uOiBpbmxpbmU7XHJcbn1cclxubWF0LWNhcmQtdGl0bGUgeyBcclxuICAgIHRleHQtYWxpZ246IGNlbnRlciBcclxufVxyXG4uYm9yZGVyIHtcclxuICAgIGJvcmRlci1yYWRpdXM6IDIwcHg7XHJcbiAgICBib3gtc2hhZG93OiAxMHB4IDEwcHggMTBweCAtMXB4IHJnYmEoMCwgMCwgMCwgMC4xNCk7XHJcbn0iXX0= */\"","import { Component, OnInit } from '@angular/core';\r\nimport { Mission } from 'src/app/models/mission';\r\nimport { ThessalyAPIService } from 'src/app/services/thessaly-api.service';\r\n\r\n@Component({\r\n  selector: 'app-status',\r\n  templateUrl: './status.component.html',\r\n  styleUrls: ['./status.component.css']\r\n})\r\nexport class StatusComponent implements OnInit {\r\n  errorMessage: string;\r\n  currentMissionStatus: Mission = {MissionName: 'empty', MissionStatus: 'empty'};\r\n  constructor(private thessalyApiService: ThessalyAPIService) { }\r\n\r\n  ngOnInit() {\r\n    this.currentMission();\r\n  }\r\n\r\n  currentMission() {\r\n    this.thessalyApiService.controllerGetMission('GetMissionStatus')\r\n    .subscribe(\r\n      response => {\r\n        this.currentMissionStatus = response;\r\n      },\r\n      error => {\r\n        this.errorMessage = error;\r\n      }\r\n    );\r\n  }\r\n}\r\n","import { NgModule, ModuleWithProviders, SkipSelf, Optional } from '@angular/core';\nimport { Configuration } from './configuration';\nimport { HttpClient } from '@angular/common/http';\n\nimport { AssetControllerService } from './api/assetController.service';\nimport { AssetGroupControllerService } from './api/assetGroupController.service';\nimport { DashboardElementControllerService } from './api/dashboardElementController.service';\nimport { DataLoggerControllerService } from './api/dataLoggerController.service';\nimport { DeviceChannelControllerService } from './api/deviceChannelController.service';\nimport { DeviceControllerService } from './api/deviceController.service';\nimport { DeviceEventControllerService } from './api/deviceEventController.service';\nimport { DeviceGroupMembershipControllerService } from './api/deviceGroupMembershipController.service';\nimport { DeviceTypeChannelTypeControllerService } from './api/deviceTypeChannelTypeController.service';\nimport { DeviceTypeControllerService } from './api/deviceTypeController.service';\nimport { EventControllerService } from './api/eventController.service';\nimport { PingControllerService } from './api/pingController.service';\nimport { SchedulerControllerService } from './api/schedulerController.service';\nimport { SolarMonitorControllerService } from './api/solarMonitorController.service';\nimport { UserControllerService } from './api/userController.service';\nimport { UserSubscriptionControllerService } from './api/userSubscriptionController.service';\nimport { VirtualAccessControllerService } from './api/virtualAccessController.service';\n\n@NgModule({\n  imports:      [],\n  declarations: [],\n  exports:      [],\n  providers: []\n})\nexport class ApiModule {\n    public static forRoot(configurationFactory: () => Configuration): ModuleWithProviders<ApiModule> {\n        return {\n            ngModule: ApiModule,\n            providers: [ { provide: Configuration, useFactory: configurationFactory } ]\n        };\n    }\n\n    constructor( @Optional() @SkipSelf() parentModule: ApiModule,\n                 @Optional() http: HttpClient) {\n        if (parentModule) {\n            throw new Error('ApiModule is already loaded. Import in your base AppModule only.');\n        }\n        if (!http) {\n            throw new Error('You need to import the HttpClientModule in your AppModule! \\n' +\n            'See also https://github.com/angular/angular/issues/20575');\n        }\n    }\n}\n","export * from './assetController.service';\nimport { AssetControllerService } from './assetController.service';\nexport * from './assetGroupController.service';\nimport { AssetGroupControllerService } from './assetGroupController.service';\nexport * from './dashboardElementController.service';\nimport { DashboardElementControllerService } from './dashboardElementController.service';\nexport * from './dataLoggerController.service';\nimport { DataLoggerControllerService } from './dataLoggerController.service';\nexport * from './deviceChannelController.service';\nimport { DeviceChannelControllerService } from './deviceChannelController.service';\nexport * from './deviceController.service';\nimport { DeviceControllerService } from './deviceController.service';\nexport * from './deviceEventController.service';\nimport { DeviceEventControllerService } from './deviceEventController.service';\nexport * from './deviceGroupMembershipController.service';\nimport { DeviceGroupMembershipControllerService } from './deviceGroupMembershipController.service';\nexport * from './deviceTypeChannelTypeController.service';\nimport { DeviceTypeChannelTypeControllerService } from './deviceTypeChannelTypeController.service';\nexport * from './deviceTypeController.service';\nimport { DeviceTypeControllerService } from './deviceTypeController.service';\nexport * from './eventController.service';\nimport { EventControllerService } from './eventController.service';\nexport * from './pingController.service';\nimport { PingControllerService } from './pingController.service';\nexport * from './schedulerController.service';\nimport { SchedulerControllerService } from './schedulerController.service';\nexport * from './solarMonitorController.service';\nimport { SolarMonitorControllerService } from './solarMonitorController.service';\nexport * from './userController.service';\nimport { UserControllerService } from './userController.service';\nexport * from './userSubscriptionController.service';\nimport { UserSubscriptionControllerService } from './userSubscriptionController.service';\nexport * from './virtualAccessController.service';\nimport { VirtualAccessControllerService } from './virtualAccessController.service';\nexport const APIS = [AssetControllerService, AssetGroupControllerService, DashboardElementControllerService, DataLoggerControllerService, DeviceChannelControllerService, DeviceControllerService, DeviceEventControllerService, DeviceGroupMembershipControllerService, DeviceTypeChannelTypeControllerService, DeviceTypeControllerService, EventControllerService, PingControllerService, SchedulerControllerService, SolarMonitorControllerService, UserControllerService, UserSubscriptionControllerService, VirtualAccessControllerService];\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { Asset } from '../model/models';\nimport { AssetExcludingId } from '../model/models';\nimport { AssetExcludingIdAssetGroupId } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssetControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Used for creating a new &lt;b&gt;Asset&lt;/b&gt;, by an authorized &lt;b&gt;User&lt;/b&gt;, identified by the provided &lt;i&gt;token&lt;/i&gt;. An &lt;b&gt;Asset&lt;/b&gt; is a way of logical grouping of &lt;b&gt;Devices&lt;/b&gt;. One &lt;b&gt;Asset&lt;/b&gt; can contain many &lt;b&gt;Devices&lt;/b&gt; and can belong to one &lt;b&gt;AssetGroup&lt;/b&gt;. &lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-assetgroupcontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;AssetGroupController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-devicecontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DeviceController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsasset\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;AssetModel&lt;/a&gt;&lt;/i&gt;\n     * @param assetExcludingId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assetControllerCreate(assetExcludingId?: AssetExcludingId, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Asset>;\n    public assetControllerCreate(assetExcludingId?: AssetExcludingId, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Asset>>;\n    public assetControllerCreate(assetExcludingId?: AssetExcludingId, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Asset>>;\n    public assetControllerCreate(assetExcludingId?: AssetExcludingId, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Asset>(`${this.configuration.basePath}/asset`,\n            assetExcludingId,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Used for deleting an &lt;b&gt;Asset&lt;/b&gt;, identified by &lt;i&gt;id&lt;/i&gt; by an authorized &lt;b&gt;User&lt;/b&gt; identified by the provided &lt;i&gt;token&lt;/i&gt;. &lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsasset\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;AssetModel&lt;/a&gt;&lt;/i&gt;\n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assetControllerDeleteById(id: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public assetControllerDeleteById(id: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public assetControllerDeleteById(id: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public assetControllerDeleteById(id: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling assetControllerDeleteById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/asset/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Used for getting the &lt;b&gt;Assets&lt;/b&gt; belonging to an &lt;b&gt;AssetGroup&lt;/b&gt;, in turn belonging to an authorized &lt;b&gt;User&lt;/b&gt; or &lt;b&gt;Virtual User&lt;/b&gt;.  An &lt;b&gt;Asset&lt;/b&gt; is a way of logical grouping of &lt;b&gt;Devices&lt;/b&gt;. One &lt;b&gt;Asset&lt;/b&gt; can contain many &lt;b&gt;Devices&lt;/b&gt; and can belong to the &lt;b&gt;AssetGroup&lt;/b&gt; with the provided &lt;i&gt;assetGroupId&lt;/i&gt;. An &lt;b&gt;AssetGroup&lt;/b&gt; can have many &lt;b&gt;Assets&lt;/b&gt;. &lt;i&gt;&lt;b&gt;. &lt;br&gt;&lt;br&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-assetgroupcontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;AssetGroupController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-devicecontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DeviceController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsasset\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;AssetModel&lt;/a&gt;&lt;/i&gt;\n     * @param assetGroupId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assetControllerFind(assetGroupId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<Asset>>;\n    public assetControllerFind(assetGroupId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<Asset>>>;\n    public assetControllerFind(assetGroupId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<Asset>>>;\n    public assetControllerFind(assetGroupId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (assetGroupId === null || assetGroupId === undefined) {\n            throw new Error('Required parameter assetGroupId was null or undefined when calling assetControllerFind.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<Asset>>(`${this.configuration.basePath}/assets/${encodeURIComponent(String(assetGroupId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Used for getting the &lt;b&gt;Asset&lt;/b&gt; identified by &lt;i&gt;assetName&lt;/i&gt;, by an authorized &lt;b&gt;User&lt;/b&gt; or &lt;b&gt;Virtual User&lt;/b&gt; identified by the provided &lt;i&gt;token&lt;/i&gt;. An &lt;b&gt;Asset&lt;/b&gt; is a way of logical grouping of &lt;b&gt;Devices&lt;/b&gt;. One &lt;b&gt;Asset&lt;/b&gt; can contain many &lt;b&gt;Devices&lt;/b&gt; and can belong to one &lt;b&gt;AssetGroup&lt;/b&gt;.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-assetgroupcontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;AssetGroupController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-devicecontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DeviceController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsasset\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;AssetModel&lt;/a&gt;&lt;/i&gt;\n     * @param assetName \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assetControllerFindByName(assetName: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Asset>;\n    public assetControllerFindByName(assetName: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Asset>>;\n    public assetControllerFindByName(assetName: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Asset>>;\n    public assetControllerFindByName(assetName: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (assetName === null || assetName === undefined) {\n            throw new Error('Required parameter assetName was null or undefined when calling assetControllerFindByName.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Asset>(`${this.configuration.basePath}/asset/by-name/${encodeURIComponent(String(assetName))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Used for getting the &lt;b&gt;Assets&lt;/b&gt; of an authorized &lt;b&gt;User&lt;/b&gt; identified by the provided &lt;i&gt;userId&lt;/i&gt;, by an authorized &lt;b&gt;Admin&lt;/b&gt;. An &lt;b&gt;Asset&lt;/b&gt; is a way of logical grouping of &lt;b&gt;Devices&lt;/b&gt;. One &lt;b&gt;Asset&lt;/b&gt; can contain many &lt;b&gt;Devices&lt;/b&gt; and can belong to one &lt;b&gt;AssetGroup&lt;/b&gt;.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-assetgroupcontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;AssetGroupController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-devicecontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DeviceController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsasset\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;AssetModel&lt;/a&gt;&lt;/i&gt;\n     * @param userId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assetControllerFindByUserId(userId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<Asset>>;\n    public assetControllerFindByUserId(userId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<Asset>>>;\n    public assetControllerFindByUserId(userId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<Asset>>>;\n    public assetControllerFindByUserId(userId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (userId === null || userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling assetControllerFindByUserId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<Asset>>(`${this.configuration.basePath}/assets/by-user/${encodeURIComponent(String(userId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Edit (Patch) Asset by Id\n     * @param id \n     * @param assetExcludingIdAssetGroupId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assetControllerUpdateById(id: number, assetExcludingIdAssetGroupId?: AssetExcludingIdAssetGroupId, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public assetControllerUpdateById(id: number, assetExcludingIdAssetGroupId?: AssetExcludingIdAssetGroupId, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public assetControllerUpdateById(id: number, assetExcludingIdAssetGroupId?: AssetExcludingIdAssetGroupId, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public assetControllerUpdateById(id: number, assetExcludingIdAssetGroupId?: AssetExcludingIdAssetGroupId, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling assetControllerUpdateById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.patch<any>(`${this.configuration.basePath}/asset/${encodeURIComponent(String(id))}`,\n            assetExcludingIdAssetGroupId,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { AssetGroup } from '../model/models';\nimport { AssetGroupExcludingIdUserId } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AssetGroupControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * @param assetGroupExcludingIdUserId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assetGroupControllerCreateAssetGroup(assetGroupExcludingIdUserId?: AssetGroupExcludingIdUserId, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<AssetGroup>;\n    public assetGroupControllerCreateAssetGroup(assetGroupExcludingIdUserId?: AssetGroupExcludingIdUserId, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<AssetGroup>>;\n    public assetGroupControllerCreateAssetGroup(assetGroupExcludingIdUserId?: AssetGroupExcludingIdUserId, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<AssetGroup>>;\n    public assetGroupControllerCreateAssetGroup(assetGroupExcludingIdUserId?: AssetGroupExcludingIdUserId, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<AssetGroup>(`${this.configuration.basePath}/asset-group/user`,\n            assetGroupExcludingIdUserId,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assetGroupControllerDeleteById(id: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public assetGroupControllerDeleteById(id: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public assetGroupControllerDeleteById(id: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public assetGroupControllerDeleteById(id: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling assetGroupControllerDeleteById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/asset-group/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assetGroupControllerFindUserAssetGroups(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<AssetGroup>>;\n    public assetGroupControllerFindUserAssetGroups(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<AssetGroup>>>;\n    public assetGroupControllerFindUserAssetGroups(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<AssetGroup>>>;\n    public assetGroupControllerFindUserAssetGroups(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<AssetGroup>>(`${this.configuration.basePath}/asset-groups/user`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Edit (PATCH) AssetGroup\n     * @param id \n     * @param assetGroupExcludingIdUserId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public assetGroupControllerUpdateById(id: number, assetGroupExcludingIdUserId?: AssetGroupExcludingIdUserId, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public assetGroupControllerUpdateById(id: number, assetGroupExcludingIdUserId?: AssetGroupExcludingIdUserId, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public assetGroupControllerUpdateById(id: number, assetGroupExcludingIdUserId?: AssetGroupExcludingIdUserId, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public assetGroupControllerUpdateById(id: number, assetGroupExcludingIdUserId?: AssetGroupExcludingIdUserId, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling assetGroupControllerUpdateById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.patch<any>(`${this.configuration.basePath}/asset-group/${encodeURIComponent(String(id))}`,\n            assetGroupExcludingIdUserId,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { DashboardElement } from '../model/models';\nimport { DashboardElementWithScope } from '../model/models';\nimport { NewDashboardElement } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DashboardElementControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * @param newDashboardElement \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public dashboardElementControllerCreate(newDashboardElement?: NewDashboardElement, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<DashboardElement>;\n    public dashboardElementControllerCreate(newDashboardElement?: NewDashboardElement, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<DashboardElement>>;\n    public dashboardElementControllerCreate(newDashboardElement?: NewDashboardElement, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<DashboardElement>>;\n    public dashboardElementControllerCreate(newDashboardElement?: NewDashboardElement, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<DashboardElement>(`${this.configuration.basePath}/dashboard-element`,\n            newDashboardElement,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public dashboardElementControllerDeleteById(id: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public dashboardElementControllerDeleteById(id: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public dashboardElementControllerDeleteById(id: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public dashboardElementControllerDeleteById(id: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling dashboardElementControllerDeleteById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/dashboard-element/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param assetId \n     * @param userId \n     * @param location \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public dashboardElementControllerFindByUserIdAssetIdLocation(assetId: number, userId: number, location: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<DashboardElementWithScope>>;\n    public dashboardElementControllerFindByUserIdAssetIdLocation(assetId: number, userId: number, location: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<DashboardElementWithScope>>>;\n    public dashboardElementControllerFindByUserIdAssetIdLocation(assetId: number, userId: number, location: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<DashboardElementWithScope>>>;\n    public dashboardElementControllerFindByUserIdAssetIdLocation(assetId: number, userId: number, location: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (assetId === null || assetId === undefined) {\n            throw new Error('Required parameter assetId was null or undefined when calling dashboardElementControllerFindByUserIdAssetIdLocation.');\n        }\n        if (userId === null || userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling dashboardElementControllerFindByUserIdAssetIdLocation.');\n        }\n        if (location === null || location === undefined) {\n            throw new Error('Required parameter location was null or undefined when calling dashboardElementControllerFindByUserIdAssetIdLocation.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<DashboardElementWithScope>>(`${this.configuration.basePath}/dashboard-elements/asset-id/${encodeURIComponent(String(assetId))}/user-id/${encodeURIComponent(String(userId))}/location/${encodeURIComponent(String(location))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public dashboardElementControllerMoveElementDown(id: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public dashboardElementControllerMoveElementDown(id: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public dashboardElementControllerMoveElementDown(id: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public dashboardElementControllerMoveElementDown(id: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling dashboardElementControllerMoveElementDown.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.patch<any>(`${this.configuration.basePath}/dashboard-element/${encodeURIComponent(String(id))}/move-down`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public dashboardElementControllerMoveElementUp(id: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public dashboardElementControllerMoveElementUp(id: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public dashboardElementControllerMoveElementUp(id: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public dashboardElementControllerMoveElementUp(id: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling dashboardElementControllerMoveElementUp.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.patch<any>(`${this.configuration.basePath}/dashboard-element/${encodeURIComponent(String(id))}/move-up`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { DataLogger } from '../model/models';\nimport { DataLoggerExcludingIdAuthTokenConfigUserId } from '../model/models';\nimport { RequestDataLoggerSetupCsv2ExcludingFileFormat } from '../model/models';\nimport { RequestDataLoggerSetupXml2ExcludingFileFormat } from '../model/models';\nimport { ResponseDataLoggerSetupStep2 } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DataLoggerControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Used for creating a new &lt;b&gt;DataLogger&lt;/b&gt; by and authorized &lt;b&gt;User&lt;/b&gt;, identified by the provided &lt;i&gt;token&lt;/i&gt;. &lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsdatalogger\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DataLoggerModel&lt;/a&gt;&lt;/i&gt;\n     * @param dataLoggerExcludingIdAuthTokenConfigUserId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public dataLoggerControllerCreate(dataLoggerExcludingIdAuthTokenConfigUserId?: DataLoggerExcludingIdAuthTokenConfigUserId, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<DataLogger>;\n    public dataLoggerControllerCreate(dataLoggerExcludingIdAuthTokenConfigUserId?: DataLoggerExcludingIdAuthTokenConfigUserId, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<DataLogger>>;\n    public dataLoggerControllerCreate(dataLoggerExcludingIdAuthTokenConfigUserId?: DataLoggerExcludingIdAuthTokenConfigUserId, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<DataLogger>>;\n    public dataLoggerControllerCreate(dataLoggerExcludingIdAuthTokenConfigUserId?: DataLoggerExcludingIdAuthTokenConfigUserId, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<DataLogger>(`${this.configuration.basePath}/data-logger`,\n            dataLoggerExcludingIdAuthTokenConfigUserId,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Deletes a&lt;b&gt; DataLogger&lt;/b&gt; identified by &lt;i&gt;id&lt;/i&gt;, owned by a &lt;b&gt;User&lt;/b&gt; identified by the provided &lt;i&gt;token.&lt;/i&gt;&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsdatalogger\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DataLoggerModel&lt;/a&gt;&lt;/i&gt;\n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public dataLoggerControllerDeleteById(id: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public dataLoggerControllerDeleteById(id: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public dataLoggerControllerDeleteById(id: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public dataLoggerControllerDeleteById(id: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling dataLoggerControllerDeleteById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/data-logger/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns an array of &lt;b&gt;DataLoggers&lt;/b&gt; owned by a &lt;b&gt;User&lt;/b&gt; identified by the provided &lt;i&gt;token.&lt;/i&gt;&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsdatalogger\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DataLoggerModel&lt;/a&gt;&lt;/i&gt;\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public dataLoggerControllerFind(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<DataLogger>>;\n    public dataLoggerControllerFind(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<DataLogger>>>;\n    public dataLoggerControllerFind(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<DataLogger>>>;\n    public dataLoggerControllerFind(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<DataLogger>>(`${this.configuration.basePath}/data-loggers`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Step 1 of setup process of &lt;b&gt;DataLoggers&lt;/b&gt; sending data via FTP. It is used for sending a sample uncompressed &lt;i&gt;file&lt;/i&gt; containing raw data, as it was generated by the &lt;b&gt;DataLogger&lt;/b&gt; (hardware) identified by &lt;i&gt;dataLoggerToken&lt;/i&gt;.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#tocsdatalogger\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DataLoggerModel&lt;/a&gt;&lt;/i&gt;\n     * @param id \n     * @param dataLoggerToken \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public dataLoggerControllerSetupFromFtp1(id: number, dataLoggerToken: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public dataLoggerControllerSetupFromFtp1(id: number, dataLoggerToken: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public dataLoggerControllerSetupFromFtp1(id: number, dataLoggerToken: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public dataLoggerControllerSetupFromFtp1(id: number, dataLoggerToken: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling dataLoggerControllerSetupFromFtp1.');\n        }\n        if (dataLoggerToken === null || dataLoggerToken === undefined) {\n            throw new Error('Required parameter dataLoggerToken was null or undefined when calling dataLoggerControllerSetupFromFtp1.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/data-logger/setup-ftp/step1/${encodeURIComponent(String(id))}/${encodeURIComponent(String(dataLoggerToken))}`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Step 3 of setup process of &lt;b&gt;DataLoggers&lt;/b&gt; sending data via FTP. It is used for initiating &lt;b&gt;DeviceTypes&lt;/b&gt;, &lt;b&gt;ChannelTypes&lt;/b&gt; and &lt;b&gt;Devices&lt;/b&gt;. Accepts as input the output of Step 2. Make sure that the &lt;i&gt;manufacturer&lt;/i&gt; property is added.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-devicecontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DeviceController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-devicetypecontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DeviceTypeController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-devicetypechanneltypecontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DeviceTypeChannelTypeController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsdatalogger\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DataLoggerModel&lt;/a&gt;&lt;/i&gt;\n     * @param id \n     * @param responseDataLoggerSetupStep2 \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public dataLoggerControllerSetupFromFtp3(id: number, responseDataLoggerSetupStep2?: ResponseDataLoggerSetupStep2, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public dataLoggerControllerSetupFromFtp3(id: number, responseDataLoggerSetupStep2?: ResponseDataLoggerSetupStep2, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public dataLoggerControllerSetupFromFtp3(id: number, responseDataLoggerSetupStep2?: ResponseDataLoggerSetupStep2, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public dataLoggerControllerSetupFromFtp3(id: number, responseDataLoggerSetupStep2?: ResponseDataLoggerSetupStep2, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling dataLoggerControllerSetupFromFtp3.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/data-logger/setup-ftp/step3/${encodeURIComponent(String(id))}`,\n            responseDataLoggerSetupStep2,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Step 2 of setup process of &lt;b&gt;DataLoggers&lt;/b&gt; sending CSV data via FTP. It is used for mapping properties of the sent &lt;i&gt;file&lt;/i&gt; to properties of models in the system. &lt;b&gt;DataLogger&lt;/b&gt; to be setup, is identified by &lt;i&gt;id&lt;/i&gt; and &lt;b&gt;User&lt;/b&gt; performing operation is identified by &lt;i&gt;token&lt;/i&gt;. Endpoint response represents the results of the mapping (required in Step 3). If it is satisfactory, it is saved by setting the property &lt;i&gt;confirm&lt;/i&gt; to &lt;i&gt;true&lt;/i&gt;.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsdatalogger\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DataLoggerModel&lt;/a&gt;&lt;/i&gt;\n     * @param id \n     * @param requestDataLoggerSetupCsv2ExcludingFileFormat \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public dataLoggerControllerSetupFromFtpCsv2(id: number, requestDataLoggerSetupCsv2ExcludingFileFormat?: RequestDataLoggerSetupCsv2ExcludingFileFormat, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseDataLoggerSetupStep2>;\n    public dataLoggerControllerSetupFromFtpCsv2(id: number, requestDataLoggerSetupCsv2ExcludingFileFormat?: RequestDataLoggerSetupCsv2ExcludingFileFormat, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseDataLoggerSetupStep2>>;\n    public dataLoggerControllerSetupFromFtpCsv2(id: number, requestDataLoggerSetupCsv2ExcludingFileFormat?: RequestDataLoggerSetupCsv2ExcludingFileFormat, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseDataLoggerSetupStep2>>;\n    public dataLoggerControllerSetupFromFtpCsv2(id: number, requestDataLoggerSetupCsv2ExcludingFileFormat?: RequestDataLoggerSetupCsv2ExcludingFileFormat, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling dataLoggerControllerSetupFromFtpCsv2.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<ResponseDataLoggerSetupStep2>(`${this.configuration.basePath}/data-logger/setup-ftp/step2/csv/${encodeURIComponent(String(id))}`,\n            requestDataLoggerSetupCsv2ExcludingFileFormat,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Step 2 of setup process of &lt;b&gt;DataLoggers&lt;/b&gt; sending XML data via FTP. It is used for mapping properties of the sent &lt;i&gt;file&lt;/i&gt; to properties of models in the system. &lt;b&gt;DataLogger&lt;/b&gt; to be setup, is identified by &lt;i&gt;id&lt;/i&gt; and &lt;b&gt;User&lt;/b&gt; performing operation is identified by &lt;i&gt;token&lt;/i&gt;. Endpoint response represents the results of the mapping (required in Step 3). If it is satisfactory, it is saved by setting the property &lt;i&gt;confirm&lt;/i&gt; to &lt;i&gt;true&lt;/i&gt;.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsdatalogger\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DataLoggerModel&lt;/a&gt;&lt;/i&gt;\n     * @param id \n     * @param requestDataLoggerSetupXml2ExcludingFileFormat \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public dataLoggerControllerSetupFromFtpXml2(id: number, requestDataLoggerSetupXml2ExcludingFileFormat?: RequestDataLoggerSetupXml2ExcludingFileFormat, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseDataLoggerSetupStep2>;\n    public dataLoggerControllerSetupFromFtpXml2(id: number, requestDataLoggerSetupXml2ExcludingFileFormat?: RequestDataLoggerSetupXml2ExcludingFileFormat, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseDataLoggerSetupStep2>>;\n    public dataLoggerControllerSetupFromFtpXml2(id: number, requestDataLoggerSetupXml2ExcludingFileFormat?: RequestDataLoggerSetupXml2ExcludingFileFormat, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseDataLoggerSetupStep2>>;\n    public dataLoggerControllerSetupFromFtpXml2(id: number, requestDataLoggerSetupXml2ExcludingFileFormat?: RequestDataLoggerSetupXml2ExcludingFileFormat, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling dataLoggerControllerSetupFromFtpXml2.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<ResponseDataLoggerSetupStep2>(`${this.configuration.basePath}/data-logger/setup-ftp/step2/xml/${encodeURIComponent(String(id))}`,\n            requestDataLoggerSetupXml2ExcludingFileFormat,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Used for receiving data, sent in CSV format by a &lt;b&gt;DataLogger&lt;/b&gt; identified by &lt;i&gt;id&lt;/i&gt; and &lt;i&gt;dataLoggerToken&lt;/i&gt;. If the &lt;b&gt;DataLogger&lt;/b&gt; is sending data via FTP, endpoint is called internally.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#tocsdatalogger\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DataLoggerModel&lt;/a&gt;&lt;/i&gt;\n     * @param id \n     * @param dataLoggerToken \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public dataLoggerControllerUploadDataFromCsv(id: number, dataLoggerToken: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public dataLoggerControllerUploadDataFromCsv(id: number, dataLoggerToken: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public dataLoggerControllerUploadDataFromCsv(id: number, dataLoggerToken: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public dataLoggerControllerUploadDataFromCsv(id: number, dataLoggerToken: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling dataLoggerControllerUploadDataFromCsv.');\n        }\n        if (dataLoggerToken === null || dataLoggerToken === undefined) {\n            throw new Error('Required parameter dataLoggerToken was null or undefined when calling dataLoggerControllerUploadDataFromCsv.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/data-logger/data-from-csv/${encodeURIComponent(String(id))}/${encodeURIComponent(String(dataLoggerToken))}`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Used for receiving data, sent in XML format by a &lt;b&gt;DataLogger&lt;/b&gt; identified by &lt;i&gt;id&lt;/i&gt; and &lt;i&gt;dataLoggerToken&lt;/i&gt;. If the &lt;b&gt;DataLogger&lt;/b&gt; is sending data via FTP, endpoint is called internally.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#tocsdatalogger\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DataLoggerModel&lt;/a&gt;&lt;/i&gt;\n     * @param id \n     * @param dataLoggerToken \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public dataLoggerControllerUploadDataFromXml(id: number, dataLoggerToken: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public dataLoggerControllerUploadDataFromXml(id: number, dataLoggerToken: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public dataLoggerControllerUploadDataFromXml(id: number, dataLoggerToken: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public dataLoggerControllerUploadDataFromXml(id: number, dataLoggerToken: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling dataLoggerControllerUploadDataFromXml.');\n        }\n        if (dataLoggerToken === null || dataLoggerToken === undefined) {\n            throw new Error('Required parameter dataLoggerToken was null or undefined when calling dataLoggerControllerUploadDataFromXml.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/data-logger/data-from-xml/${encodeURIComponent(String(id))}/${encodeURIComponent(String(dataLoggerToken))}`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ResponseDeviceChannelData } from '../model/models';\nimport { Timestamp } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceChannelControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * @param deviceId \n     * @param channelId \n     * @param fromTS \n     * @param toTs \n     * @param page \n     * @param count \n     * @param groupBy \n     * @param operation \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceChannelControllerFindByPeriod(deviceId: number, channelId: number, fromTS: string, toTs: string, page: number, count: number, groupBy: string, operation: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseDeviceChannelData>;\n    public deviceChannelControllerFindByPeriod(deviceId: number, channelId: number, fromTS: string, toTs: string, page: number, count: number, groupBy: string, operation: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseDeviceChannelData>>;\n    public deviceChannelControllerFindByPeriod(deviceId: number, channelId: number, fromTS: string, toTs: string, page: number, count: number, groupBy: string, operation: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseDeviceChannelData>>;\n    public deviceChannelControllerFindByPeriod(deviceId: number, channelId: number, fromTS: string, toTs: string, page: number, count: number, groupBy: string, operation: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deviceId === null || deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deviceChannelControllerFindByPeriod.');\n        }\n        if (channelId === null || channelId === undefined) {\n            throw new Error('Required parameter channelId was null or undefined when calling deviceChannelControllerFindByPeriod.');\n        }\n        if (fromTS === null || fromTS === undefined) {\n            throw new Error('Required parameter fromTS was null or undefined when calling deviceChannelControllerFindByPeriod.');\n        }\n        if (toTs === null || toTs === undefined) {\n            throw new Error('Required parameter toTs was null or undefined when calling deviceChannelControllerFindByPeriod.');\n        }\n        if (page === null || page === undefined) {\n            throw new Error('Required parameter page was null or undefined when calling deviceChannelControllerFindByPeriod.');\n        }\n        if (count === null || count === undefined) {\n            throw new Error('Required parameter count was null or undefined when calling deviceChannelControllerFindByPeriod.');\n        }\n        if (groupBy === null || groupBy === undefined) {\n            throw new Error('Required parameter groupBy was null or undefined when calling deviceChannelControllerFindByPeriod.');\n        }\n        if (operation === null || operation === undefined) {\n            throw new Error('Required parameter operation was null or undefined when calling deviceChannelControllerFindByPeriod.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ResponseDeviceChannelData>(`${this.configuration.basePath}/device-channel/data-by-period/${encodeURIComponent(String(deviceId))}/${encodeURIComponent(String(channelId))}/from/${encodeURIComponent(String(fromTS))}/to/${encodeURIComponent(String(toTs))}/page/${encodeURIComponent(String(page))}/count/${encodeURIComponent(String(count))}/groupBy/${encodeURIComponent(String(groupBy))}/operation/${encodeURIComponent(String(operation))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param deviceId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceChannelControllerFindDeviceAllLastRecordedTS(deviceId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Timestamp>;\n    public deviceChannelControllerFindDeviceAllLastRecordedTS(deviceId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Timestamp>>;\n    public deviceChannelControllerFindDeviceAllLastRecordedTS(deviceId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Timestamp>>;\n    public deviceChannelControllerFindDeviceAllLastRecordedTS(deviceId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deviceId === null || deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deviceChannelControllerFindDeviceAllLastRecordedTS.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Timestamp>(`${this.configuration.basePath}/device-channel/last-timestamp-in-device/${encodeURIComponent(String(deviceId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param deviceId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceChannelControllerFindDeviceAllLastTS(deviceId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ResponseDeviceChannelData>>;\n    public deviceChannelControllerFindDeviceAllLastTS(deviceId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ResponseDeviceChannelData>>>;\n    public deviceChannelControllerFindDeviceAllLastTS(deviceId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ResponseDeviceChannelData>>>;\n    public deviceChannelControllerFindDeviceAllLastTS(deviceId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deviceId === null || deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deviceChannelControllerFindDeviceAllLastTS.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ResponseDeviceChannelData>>(`${this.configuration.basePath}/device-channel/data-last-timestamp/all-channels/${encodeURIComponent(String(deviceId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param deviceId \n     * @param channelId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceChannelControllerFindDeviceChannelLastTS(deviceId: number, channelId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseDeviceChannelData>;\n    public deviceChannelControllerFindDeviceChannelLastTS(deviceId: number, channelId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseDeviceChannelData>>;\n    public deviceChannelControllerFindDeviceChannelLastTS(deviceId: number, channelId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseDeviceChannelData>>;\n    public deviceChannelControllerFindDeviceChannelLastTS(deviceId: number, channelId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deviceId === null || deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deviceChannelControllerFindDeviceChannelLastTS.');\n        }\n        if (channelId === null || channelId === undefined) {\n            throw new Error('Required parameter channelId was null or undefined when calling deviceChannelControllerFindDeviceChannelLastTS.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<ResponseDeviceChannelData>(`${this.configuration.basePath}/device-channel/data-last-timestamp/${encodeURIComponent(String(deviceId))}/${encodeURIComponent(String(channelId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param serialNo \n     * @param channelName \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceChannelControllerFindDeviceChannelLastTSSnChName(serialNo: string, channelName: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ResponseDeviceChannelData>;\n    public deviceChannelControllerFindDeviceChannelLastTSSnChName(serialNo: string, channelName: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ResponseDeviceChannelData>>;\n    public deviceChannelControllerFindDeviceChannelLastTSSnChName(serialNo: string, channelName: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ResponseDeviceChannelData>>;\n    public deviceChannelControllerFindDeviceChannelLastTSSnChName(serialNo: string, channelName: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (serialNo === null || serialNo === undefined) {\n            throw new Error('Required parameter serialNo was null or undefined when calling deviceChannelControllerFindDeviceChannelLastTSSnChName.');\n        }\n        if (channelName === null || channelName === undefined) {\n            throw new Error('Required parameter channelName was null or undefined when calling deviceChannelControllerFindDeviceChannelLastTSSnChName.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<ResponseDeviceChannelData>(`${this.configuration.basePath}/device-channel/data-last-timestamp-by-name/${encodeURIComponent(String(serialNo))}/${encodeURIComponent(String(channelName))}`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { Channel } from '../model/models';\nimport { ChannelExcludingIdDeviceId } from '../model/models';\nimport { ChannelType } from '../model/models';\nimport { Device } from '../model/models';\nimport { DeviceExcludingDescriptionSerialNoDataLoggerIdDeviceTypeId } from '../model/models';\nimport { DeviceExcludingIdDataLoggerId } from '../model/models';\nimport { DeviceExcludingIdSerialNoDataLoggerIdDeviceTypeId } from '../model/models';\nimport { DeviceWithType } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Used for creating a new &lt;b&gt;Device&lt;/b&gt;, belonging to a &lt;b&gt;DataLogger&lt;/b&gt; with id &lt;i&gt;dataLoggerId&lt;/i&gt; by an authorized &lt;b&gt;User&lt;/b&gt; identified by the provided &lt;i&gt;token&lt;/i&gt;.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-dataloggercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DataLoggerController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsdevice\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DeviceModel&lt;/a&gt;&lt;/i&gt;\n     * @param dataLoggerId \n     * @param deviceExcludingIdDataLoggerId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceControllerCreate(dataLoggerId: number, deviceExcludingIdDataLoggerId?: DeviceExcludingIdDataLoggerId, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Device>;\n    public deviceControllerCreate(dataLoggerId: number, deviceExcludingIdDataLoggerId?: DeviceExcludingIdDataLoggerId, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Device>>;\n    public deviceControllerCreate(dataLoggerId: number, deviceExcludingIdDataLoggerId?: DeviceExcludingIdDataLoggerId, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Device>>;\n    public deviceControllerCreate(dataLoggerId: number, deviceExcludingIdDataLoggerId?: DeviceExcludingIdDataLoggerId, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dataLoggerId === null || dataLoggerId === undefined) {\n            throw new Error('Required parameter dataLoggerId was null or undefined when calling deviceControllerCreate.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Device>(`${this.configuration.basePath}/device/${encodeURIComponent(String(dataLoggerId))}`,\n            deviceExcludingIdDataLoggerId,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Used for creating a new &lt;b&gt;Channel&lt;/b&gt;, belonging to a &lt;b&gt;Device&lt;/b&gt; with id &lt;i&gt;deviceId&lt;/i&gt; by an authorized &lt;b&gt;User&lt;/b&gt; identified by the provided &lt;i&gt;token&lt;/i&gt;.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocschannel\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;ChannelModel&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsdevice\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DeviceModel&lt;/a&gt;&lt;/i&gt;\n     * @param deviceId \n     * @param channelExcludingIdDeviceId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceControllerCreateChannel(deviceId: number, channelExcludingIdDeviceId?: ChannelExcludingIdDeviceId, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Channel>;\n    public deviceControllerCreateChannel(deviceId: number, channelExcludingIdDeviceId?: ChannelExcludingIdDeviceId, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Channel>>;\n    public deviceControllerCreateChannel(deviceId: number, channelExcludingIdDeviceId?: ChannelExcludingIdDeviceId, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Channel>>;\n    public deviceControllerCreateChannel(deviceId: number, channelExcludingIdDeviceId?: ChannelExcludingIdDeviceId, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deviceId === null || deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deviceControllerCreateChannel.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Channel>(`${this.configuration.basePath}/device/${encodeURIComponent(String(deviceId))}/channel`,\n            channelExcludingIdDeviceId,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Disable monitoring of &lt;b&gt;Channel&lt;/b&gt; identified by &lt;i&gt;channelId&lt;/i&gt;, in &lt;b&gt;Device&lt;/b&gt; identified by &lt;i&gt;deviceId&lt;/i&gt;, owned by &lt;b&gt;User&lt;/b&gt; authorized by &lt;i&gt;token&lt;/i&gt;.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocschannel\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;ChannelModel&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsdevice\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DeviceModel&lt;/a&gt;&lt;/i&gt;\n     * @param deviceId \n     * @param channelId \n     * @param all \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceControllerDisableChannelMonitoring(deviceId: number, channelId: number, all: boolean, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public deviceControllerDisableChannelMonitoring(deviceId: number, channelId: number, all: boolean, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public deviceControllerDisableChannelMonitoring(deviceId: number, channelId: number, all: boolean, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public deviceControllerDisableChannelMonitoring(deviceId: number, channelId: number, all: boolean, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (deviceId === null || deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deviceControllerDisableChannelMonitoring.');\n        }\n        if (channelId === null || channelId === undefined) {\n            throw new Error('Required parameter channelId was null or undefined when calling deviceControllerDisableChannelMonitoring.');\n        }\n        if (all === null || all === undefined) {\n            throw new Error('Required parameter all was null or undefined when calling deviceControllerDisableChannelMonitoring.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<any>(`${this.configuration.basePath}/device/${encodeURIComponent(String(deviceId))}/channel/${encodeURIComponent(String(channelId))}/disable-monitoring/all/${encodeURIComponent(String(all))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Enable monitoring of &lt;b&gt;Channel&lt;/b&gt; identified by &lt;i&gt;channelId&lt;/i&gt;, in &lt;b&gt;Device&lt;/b&gt; identified by &lt;i&gt;deviceId&lt;/i&gt;, owned by &lt;b&gt;User&lt;/b&gt; authorized by &lt;i&gt;token&lt;/i&gt;.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocschannel\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;ChannelModel&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsdevice\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DeviceModel&lt;/a&gt;&lt;/i&gt;\n     * @param deviceId \n     * @param channelId \n     * @param all \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceControllerEnableChannelMonitoring(deviceId: number, channelId: number, all: boolean, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public deviceControllerEnableChannelMonitoring(deviceId: number, channelId: number, all: boolean, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public deviceControllerEnableChannelMonitoring(deviceId: number, channelId: number, all: boolean, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public deviceControllerEnableChannelMonitoring(deviceId: number, channelId: number, all: boolean, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (deviceId === null || deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deviceControllerEnableChannelMonitoring.');\n        }\n        if (channelId === null || channelId === undefined) {\n            throw new Error('Required parameter channelId was null or undefined when calling deviceControllerEnableChannelMonitoring.');\n        }\n        if (all === null || all === undefined) {\n            throw new Error('Required parameter all was null or undefined when calling deviceControllerEnableChannelMonitoring.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<any>(`${this.configuration.basePath}/device/${encodeURIComponent(String(deviceId))}/channel/${encodeURIComponent(String(channelId))}/enable-monitoring/all/${encodeURIComponent(String(all))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Used for getting the &lt;b&gt;Devices&lt;/b&gt;, belonging to a &lt;b&gt;DataLogger&lt;/b&gt; with id &lt;i&gt;dataLoggerId&lt;/i&gt; by an authorized &lt;b&gt;User&lt;/b&gt; identified by the provided &lt;i&gt;token&lt;/i&gt;.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-dataloggercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DataLoggerController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsdevice\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DeviceModel&lt;/a&gt;&lt;/i&gt;\n     * @param dataLoggerId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceControllerFind(dataLoggerId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<Device>>;\n    public deviceControllerFind(dataLoggerId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<Device>>>;\n    public deviceControllerFind(dataLoggerId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<Device>>>;\n    public deviceControllerFind(dataLoggerId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (dataLoggerId === null || dataLoggerId === undefined) {\n            throw new Error('Required parameter dataLoggerId was null or undefined when calling deviceControllerFind.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<Device>>(`${this.configuration.basePath}/devices/${encodeURIComponent(String(dataLoggerId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Used for getting the  &lt;b&gt;Channel&lt;/b&gt;&lt;b&gt;Types&lt;/b&gt; of &lt;b&gt;Channels&lt;/b&gt; belonging to a &lt;b&gt;Device&lt;/b&gt; with id &lt;i&gt;deviceId&lt;/i&gt;, by an authorized &lt;b&gt;User&lt;/b&gt; identified by the provided &lt;i&gt;token&lt;/i&gt;.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocschannel\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;ChannelModel&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocschanneltype\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;ChannelTypeModel&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsdevice\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DeviceModel&lt;/a&gt;&lt;/i&gt;\n     * @param deviceId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceControllerFindChannelTypes(deviceId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ChannelType>>;\n    public deviceControllerFindChannelTypes(deviceId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ChannelType>>>;\n    public deviceControllerFindChannelTypes(deviceId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ChannelType>>>;\n    public deviceControllerFindChannelTypes(deviceId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deviceId === null || deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deviceControllerFindChannelTypes.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ChannelType>>(`${this.configuration.basePath}/device/${encodeURIComponent(String(deviceId))}/channelTypes`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Used for getting &lt;b&gt;Channel&lt;/b&gt;&lt;b&gt;s&lt;/b&gt;, belonging to a &lt;b&gt;Device&lt;/b&gt; with id &lt;i&gt;deviceId&lt;/i&gt;, by an authorized &lt;b&gt;User&lt;/b&gt; identified by the provided &lt;i&gt;token&lt;/i&gt;.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#pv-auto-scout-usercontroller\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserController&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocschannel\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;ChannelModel&lt;/a&gt;, &lt;a href&#x3D;\\&quot;/documentation.html#tocsdevice\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;DeviceModel&lt;/a&gt;&lt;/i&gt;\n     * @param deviceId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceControllerFindChannels(deviceId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<Channel>>;\n    public deviceControllerFindChannels(deviceId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<Channel>>>;\n    public deviceControllerFindChannels(deviceId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<Channel>>>;\n    public deviceControllerFindChannels(deviceId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deviceId === null || deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deviceControllerFindChannels.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<Channel>>(`${this.configuration.basePath}/device/${encodeURIComponent(String(deviceId))}/channels`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns array of devices with their device types\n     * @param deviceExcludingDescriptionSerialNoDataLoggerIdDeviceTypeId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceControllerGetDevicesWithType(deviceExcludingDescriptionSerialNoDataLoggerIdDeviceTypeId?: Array<DeviceExcludingDescriptionSerialNoDataLoggerIdDeviceTypeId>, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<DeviceWithType>>;\n    public deviceControllerGetDevicesWithType(deviceExcludingDescriptionSerialNoDataLoggerIdDeviceTypeId?: Array<DeviceExcludingDescriptionSerialNoDataLoggerIdDeviceTypeId>, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<DeviceWithType>>>;\n    public deviceControllerGetDevicesWithType(deviceExcludingDescriptionSerialNoDataLoggerIdDeviceTypeId?: Array<DeviceExcludingDescriptionSerialNoDataLoggerIdDeviceTypeId>, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<DeviceWithType>>>;\n    public deviceControllerGetDevicesWithType(deviceExcludingDescriptionSerialNoDataLoggerIdDeviceTypeId?: Array<DeviceExcludingDescriptionSerialNoDataLoggerIdDeviceTypeId>, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Array<DeviceWithType>>(`${this.configuration.basePath}/devices/with-device-type`,\n            deviceExcludingDescriptionSerialNoDataLoggerIdDeviceTypeId,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param deviceExcludingIdSerialNoDataLoggerIdDeviceTypeId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceControllerUpdateById(id: number, deviceExcludingIdSerialNoDataLoggerIdDeviceTypeId?: DeviceExcludingIdSerialNoDataLoggerIdDeviceTypeId, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public deviceControllerUpdateById(id: number, deviceExcludingIdSerialNoDataLoggerIdDeviceTypeId?: DeviceExcludingIdSerialNoDataLoggerIdDeviceTypeId, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public deviceControllerUpdateById(id: number, deviceExcludingIdSerialNoDataLoggerIdDeviceTypeId?: DeviceExcludingIdSerialNoDataLoggerIdDeviceTypeId, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public deviceControllerUpdateById(id: number, deviceExcludingIdSerialNoDataLoggerIdDeviceTypeId?: DeviceExcludingIdSerialNoDataLoggerIdDeviceTypeId, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deviceControllerUpdateById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.patch<any>(`${this.configuration.basePath}/device/${encodeURIComponent(String(id))}`,\n            deviceExcludingIdSerialNoDataLoggerIdDeviceTypeId,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { DeviceEventWithRelations } from '../model/models';\nimport { LoopbackCount } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceEventControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * @param assetId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceEventControllerCountNotViewed(assetId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<LoopbackCount>;\n    public deviceEventControllerCountNotViewed(assetId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<LoopbackCount>>;\n    public deviceEventControllerCountNotViewed(assetId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<LoopbackCount>>;\n    public deviceEventControllerCountNotViewed(assetId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (assetId === null || assetId === undefined) {\n            throw new Error('Required parameter assetId was null or undefined when calling deviceEventControllerCountNotViewed.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LoopbackCount>(`${this.configuration.basePath}/device-events/by-asset/count-not-viewed/${encodeURIComponent(String(assetId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param assetId \n     * @param page \n     * @param count \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceEventControllerFind(assetId: number, page: number, count: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<DeviceEventWithRelations>>;\n    public deviceEventControllerFind(assetId: number, page: number, count: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<DeviceEventWithRelations>>>;\n    public deviceEventControllerFind(assetId: number, page: number, count: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<DeviceEventWithRelations>>>;\n    public deviceEventControllerFind(assetId: number, page: number, count: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (assetId === null || assetId === undefined) {\n            throw new Error('Required parameter assetId was null or undefined when calling deviceEventControllerFind.');\n        }\n        if (page === null || page === undefined) {\n            throw new Error('Required parameter page was null or undefined when calling deviceEventControllerFind.');\n        }\n        if (count === null || count === undefined) {\n            throw new Error('Required parameter count was null or undefined when calling deviceEventControllerFind.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<DeviceEventWithRelations>>(`${this.configuration.basePath}/device-events/assetId/${encodeURIComponent(String(assetId))}/page/${encodeURIComponent(String(page))}/count/${encodeURIComponent(String(count))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param eventId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceEventControllerUpdateViewedBy(eventId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public deviceEventControllerUpdateViewedBy(eventId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public deviceEventControllerUpdateViewedBy(eventId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public deviceEventControllerUpdateViewedBy(eventId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (eventId === null || eventId === undefined) {\n            throw new Error('Required parameter eventId was null or undefined when calling deviceEventControllerUpdateViewedBy.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<any>(`${this.configuration.basePath}/device-events/mark-read/${encodeURIComponent(String(eventId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { DeviceGroupMembership } from '../model/models';\nimport { DeviceGroupMembershipExcludingId } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceGroupMembershipControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * @param deviceGroupMembershipExcludingId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceGroupMembershipControllerCreate(deviceGroupMembershipExcludingId?: DeviceGroupMembershipExcludingId, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<DeviceGroupMembership>;\n    public deviceGroupMembershipControllerCreate(deviceGroupMembershipExcludingId?: DeviceGroupMembershipExcludingId, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<DeviceGroupMembership>>;\n    public deviceGroupMembershipControllerCreate(deviceGroupMembershipExcludingId?: DeviceGroupMembershipExcludingId, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<DeviceGroupMembership>>;\n    public deviceGroupMembershipControllerCreate(deviceGroupMembershipExcludingId?: DeviceGroupMembershipExcludingId, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<DeviceGroupMembership>(`${this.configuration.basePath}/device-group-memberships`,\n            deviceGroupMembershipExcludingId,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceGroupMembershipControllerDeleteById(id: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public deviceGroupMembershipControllerDeleteById(id: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public deviceGroupMembershipControllerDeleteById(id: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public deviceGroupMembershipControllerDeleteById(id: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deviceGroupMembershipControllerDeleteById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/device-group-memberships/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param assetId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceGroupMembershipControllerFindByAssetId(assetId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<DeviceGroupMembership>>;\n    public deviceGroupMembershipControllerFindByAssetId(assetId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<DeviceGroupMembership>>>;\n    public deviceGroupMembershipControllerFindByAssetId(assetId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<DeviceGroupMembership>>>;\n    public deviceGroupMembershipControllerFindByAssetId(assetId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (assetId === null || assetId === undefined) {\n            throw new Error('Required parameter assetId was null or undefined when calling deviceGroupMembershipControllerFindByAssetId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<DeviceGroupMembership>>(`${this.configuration.basePath}/device-group-memberships/by-asset/${encodeURIComponent(String(assetId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param deviceId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceGroupMembershipControllerFindByDeviceId(deviceId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<DeviceGroupMembership>>;\n    public deviceGroupMembershipControllerFindByDeviceId(deviceId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<DeviceGroupMembership>>>;\n    public deviceGroupMembershipControllerFindByDeviceId(deviceId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<DeviceGroupMembership>>>;\n    public deviceGroupMembershipControllerFindByDeviceId(deviceId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deviceId === null || deviceId === undefined) {\n            throw new Error('Required parameter deviceId was null or undefined when calling deviceGroupMembershipControllerFindByDeviceId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<DeviceGroupMembership>>(`${this.configuration.basePath}/device-group-memberships/by-device/${encodeURIComponent(String(deviceId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { ChannelType } from '../model/models';\nimport { ChannelTypeExcludingIdDeviceTypeId } from '../model/models';\nimport { ChannelTypeExcludingIdNameDeviceTypeId } from '../model/models';\nimport { ChannelTypeExcludingNameDescriptionUnitChannelTypeDeviceTypeId } from '../model/models';\nimport { LoopbackCount } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceTypeChannelTypeControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * @param deviceTypeId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceTypeChannelTypeControllerCount(deviceTypeId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<LoopbackCount>;\n    public deviceTypeChannelTypeControllerCount(deviceTypeId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<LoopbackCount>>;\n    public deviceTypeChannelTypeControllerCount(deviceTypeId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<LoopbackCount>>;\n    public deviceTypeChannelTypeControllerCount(deviceTypeId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deviceTypeId === null || deviceTypeId === undefined) {\n            throw new Error('Required parameter deviceTypeId was null or undefined when calling deviceTypeChannelTypeControllerCount.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LoopbackCount>(`${this.configuration.basePath}/device-type-channel-type/${encodeURIComponent(String(deviceTypeId))}/count`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param deviceTypeId \n     * @param channelTypeExcludingIdDeviceTypeId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceTypeChannelTypeControllerCreate(deviceTypeId: number, channelTypeExcludingIdDeviceTypeId?: ChannelTypeExcludingIdDeviceTypeId, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<ChannelType>;\n    public deviceTypeChannelTypeControllerCreate(deviceTypeId: number, channelTypeExcludingIdDeviceTypeId?: ChannelTypeExcludingIdDeviceTypeId, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<ChannelType>>;\n    public deviceTypeChannelTypeControllerCreate(deviceTypeId: number, channelTypeExcludingIdDeviceTypeId?: ChannelTypeExcludingIdDeviceTypeId, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<ChannelType>>;\n    public deviceTypeChannelTypeControllerCreate(deviceTypeId: number, channelTypeExcludingIdDeviceTypeId?: ChannelTypeExcludingIdDeviceTypeId, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deviceTypeId === null || deviceTypeId === undefined) {\n            throw new Error('Required parameter deviceTypeId was null or undefined when calling deviceTypeChannelTypeControllerCreate.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<ChannelType>(`${this.configuration.basePath}/device-type-channel-type/${encodeURIComponent(String(deviceTypeId))}`,\n            channelTypeExcludingIdDeviceTypeId,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param deviceTypeId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceTypeChannelTypeControllerDeviceTypeChannelCategories(deviceTypeId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ChannelTypeExcludingNameDescriptionUnitChannelTypeDeviceTypeId>>;\n    public deviceTypeChannelTypeControllerDeviceTypeChannelCategories(deviceTypeId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ChannelTypeExcludingNameDescriptionUnitChannelTypeDeviceTypeId>>>;\n    public deviceTypeChannelTypeControllerDeviceTypeChannelCategories(deviceTypeId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ChannelTypeExcludingNameDescriptionUnitChannelTypeDeviceTypeId>>>;\n    public deviceTypeChannelTypeControllerDeviceTypeChannelCategories(deviceTypeId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deviceTypeId === null || deviceTypeId === undefined) {\n            throw new Error('Required parameter deviceTypeId was null or undefined when calling deviceTypeChannelTypeControllerDeviceTypeChannelCategories.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ChannelTypeExcludingNameDescriptionUnitChannelTypeDeviceTypeId>>(`${this.configuration.basePath}/device-type-channel-type/${encodeURIComponent(String(deviceTypeId))}/channel-categories`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param deviceTypeId \n     * @param page \n     * @param count \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceTypeChannelTypeControllerFind(deviceTypeId: number, page: number, count: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ChannelType>>;\n    public deviceTypeChannelTypeControllerFind(deviceTypeId: number, page: number, count: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ChannelType>>>;\n    public deviceTypeChannelTypeControllerFind(deviceTypeId: number, page: number, count: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ChannelType>>>;\n    public deviceTypeChannelTypeControllerFind(deviceTypeId: number, page: number, count: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (deviceTypeId === null || deviceTypeId === undefined) {\n            throw new Error('Required parameter deviceTypeId was null or undefined when calling deviceTypeChannelTypeControllerFind.');\n        }\n        if (page === null || page === undefined) {\n            throw new Error('Required parameter page was null or undefined when calling deviceTypeChannelTypeControllerFind.');\n        }\n        if (count === null || count === undefined) {\n            throw new Error('Required parameter count was null or undefined when calling deviceTypeChannelTypeControllerFind.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ChannelType>>(`${this.configuration.basePath}/device-type-channel-type/${encodeURIComponent(String(deviceTypeId))}/page/${encodeURIComponent(String(page))}/count/${encodeURIComponent(String(count))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param channelTypeId \n     * @param channelTypeExcludingIdNameDeviceTypeId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceTypeChannelTypeControllerUpdateById(channelTypeId: number, channelTypeExcludingIdNameDeviceTypeId?: ChannelTypeExcludingIdNameDeviceTypeId, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public deviceTypeChannelTypeControllerUpdateById(channelTypeId: number, channelTypeExcludingIdNameDeviceTypeId?: ChannelTypeExcludingIdNameDeviceTypeId, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public deviceTypeChannelTypeControllerUpdateById(channelTypeId: number, channelTypeExcludingIdNameDeviceTypeId?: ChannelTypeExcludingIdNameDeviceTypeId, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public deviceTypeChannelTypeControllerUpdateById(channelTypeId: number, channelTypeExcludingIdNameDeviceTypeId?: ChannelTypeExcludingIdNameDeviceTypeId, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (channelTypeId === null || channelTypeId === undefined) {\n            throw new Error('Required parameter channelTypeId was null or undefined when calling deviceTypeChannelTypeControllerUpdateById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.patch<any>(`${this.configuration.basePath}/device-type-channel-type/channel-type/${encodeURIComponent(String(channelTypeId))}`,\n            channelTypeExcludingIdNameDeviceTypeId,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { DeviceType } from '../model/models';\nimport { DeviceTypeExcludingIdModelManufacturer } from '../model/models';\nimport { DeviceTypeExcludingModelDescriptionManufacturer } from '../model/models';\nimport { LoopbackCount } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class DeviceTypeControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceTypeControllerCount(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<LoopbackCount>;\n    public deviceTypeControllerCount(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<LoopbackCount>>;\n    public deviceTypeControllerCount(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<LoopbackCount>>;\n    public deviceTypeControllerCount(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<LoopbackCount>(`${this.configuration.basePath}/device-type/count`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param deviceType \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceTypeControllerCreate(deviceType?: DeviceType, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<DeviceType>;\n    public deviceTypeControllerCreate(deviceType?: DeviceType, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<DeviceType>>;\n    public deviceTypeControllerCreate(deviceType?: DeviceType, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<DeviceType>>;\n    public deviceTypeControllerCreate(deviceType?: DeviceType, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<DeviceType>(`${this.configuration.basePath}/device-type`,\n            deviceType,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param page \n     * @param count \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceTypeControllerFind(page: number, count: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<DeviceType>>;\n    public deviceTypeControllerFind(page: number, count: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<DeviceType>>>;\n    public deviceTypeControllerFind(page: number, count: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<DeviceType>>>;\n    public deviceTypeControllerFind(page: number, count: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (page === null || page === undefined) {\n            throw new Error('Required parameter page was null or undefined when calling deviceTypeControllerFind.');\n        }\n        if (count === null || count === undefined) {\n            throw new Error('Required parameter count was null or undefined when calling deviceTypeControllerFind.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<DeviceType>>(`${this.configuration.basePath}/device-type/get-all/page/${encodeURIComponent(String(page))}/count/${encodeURIComponent(String(count))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param assetId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceTypeControllerGetAssetDeviceCategories(assetId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<DeviceTypeExcludingModelDescriptionManufacturer>>;\n    public deviceTypeControllerGetAssetDeviceCategories(assetId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<DeviceTypeExcludingModelDescriptionManufacturer>>>;\n    public deviceTypeControllerGetAssetDeviceCategories(assetId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<DeviceTypeExcludingModelDescriptionManufacturer>>>;\n    public deviceTypeControllerGetAssetDeviceCategories(assetId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (assetId === null || assetId === undefined) {\n            throw new Error('Required parameter assetId was null or undefined when calling deviceTypeControllerGetAssetDeviceCategories.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<DeviceTypeExcludingModelDescriptionManufacturer>>(`${this.configuration.basePath}/device-type/device-categories-in-asset/${encodeURIComponent(String(assetId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param deviceTypeExcludingIdModelManufacturer \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public deviceTypeControllerUpdateById(id: number, deviceTypeExcludingIdModelManufacturer?: DeviceTypeExcludingIdModelManufacturer, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public deviceTypeControllerUpdateById(id: number, deviceTypeExcludingIdModelManufacturer?: DeviceTypeExcludingIdModelManufacturer, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public deviceTypeControllerUpdateById(id: number, deviceTypeExcludingIdModelManufacturer?: DeviceTypeExcludingIdModelManufacturer, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public deviceTypeControllerUpdateById(id: number, deviceTypeExcludingIdModelManufacturer?: DeviceTypeExcludingIdModelManufacturer, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling deviceTypeControllerUpdateById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.patch<any>(`${this.configuration.basePath}/device-type/${encodeURIComponent(String(id))}`,\n            deviceTypeExcludingIdModelManufacturer,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { Event } from '../model/models';\nimport { EventExcludingIdResolvedTimestampResolutionTimestamp } from '../model/models';\nimport { EventRelatedDevice } from '../model/models';\nimport { EventRelatedDeviceExcludingId } from '../model/models';\nimport { EventRule } from '../model/models';\nimport { EventRuleSubscription } from '../model/models';\nimport { EventRuleSubscriptionExcludingIdLastExecTimestamp } from '../model/models';\nimport { RequestEventCreateRule } from '../model/models';\nimport { ResponseEventAssetEvents } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class EventControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * @param eventExcludingIdResolvedTimestampResolutionTimestamp \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public eventControllerCreateNow(eventExcludingIdResolvedTimestampResolutionTimestamp?: EventExcludingIdResolvedTimestampResolutionTimestamp, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Event>;\n    public eventControllerCreateNow(eventExcludingIdResolvedTimestampResolutionTimestamp?: EventExcludingIdResolvedTimestampResolutionTimestamp, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Event>>;\n    public eventControllerCreateNow(eventExcludingIdResolvedTimestampResolutionTimestamp?: EventExcludingIdResolvedTimestampResolutionTimestamp, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Event>>;\n    public eventControllerCreateNow(eventExcludingIdResolvedTimestampResolutionTimestamp?: EventExcludingIdResolvedTimestampResolutionTimestamp, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Event>(`${this.configuration.basePath}/event`,\n            eventExcludingIdResolvedTimestampResolutionTimestamp,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param eventRelatedDeviceExcludingId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public eventControllerCreateRelatedDev(eventRelatedDeviceExcludingId?: EventRelatedDeviceExcludingId, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<EventRelatedDevice>;\n    public eventControllerCreateRelatedDev(eventRelatedDeviceExcludingId?: EventRelatedDeviceExcludingId, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<EventRelatedDevice>>;\n    public eventControllerCreateRelatedDev(eventRelatedDeviceExcludingId?: EventRelatedDeviceExcludingId, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<EventRelatedDevice>>;\n    public eventControllerCreateRelatedDev(eventRelatedDeviceExcludingId?: EventRelatedDeviceExcludingId, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<EventRelatedDevice>(`${this.configuration.basePath}/event/related-device`,\n            eventRelatedDeviceExcludingId,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param requestEventCreateRule \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public eventControllerCreateRule(requestEventCreateRule?: RequestEventCreateRule, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<EventRule>;\n    public eventControllerCreateRule(requestEventCreateRule?: RequestEventCreateRule, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<EventRule>>;\n    public eventControllerCreateRule(requestEventCreateRule?: RequestEventCreateRule, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<EventRule>>;\n    public eventControllerCreateRule(requestEventCreateRule?: RequestEventCreateRule, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<EventRule>(`${this.configuration.basePath}/event/rule`,\n            requestEventCreateRule,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param eventRuleSubscriptionExcludingIdLastExecTimestamp \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public eventControllerCreateRuleSubscription(eventRuleSubscriptionExcludingIdLastExecTimestamp?: EventRuleSubscriptionExcludingIdLastExecTimestamp, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<EventRuleSubscription>;\n    public eventControllerCreateRuleSubscription(eventRuleSubscriptionExcludingIdLastExecTimestamp?: EventRuleSubscriptionExcludingIdLastExecTimestamp, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<EventRuleSubscription>>;\n    public eventControllerCreateRuleSubscription(eventRuleSubscriptionExcludingIdLastExecTimestamp?: EventRuleSubscriptionExcludingIdLastExecTimestamp, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<EventRuleSubscription>>;\n    public eventControllerCreateRuleSubscription(eventRuleSubscriptionExcludingIdLastExecTimestamp?: EventRuleSubscriptionExcludingIdLastExecTimestamp, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<EventRuleSubscription>(`${this.configuration.basePath}/event/rule/subscription`,\n            eventRuleSubscriptionExcludingIdLastExecTimestamp,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param assetId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public eventControllerFind(assetId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ResponseEventAssetEvents>>;\n    public eventControllerFind(assetId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ResponseEventAssetEvents>>>;\n    public eventControllerFind(assetId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ResponseEventAssetEvents>>>;\n    public eventControllerFind(assetId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (assetId === null || assetId === undefined) {\n            throw new Error('Required parameter assetId was null or undefined when calling eventControllerFind.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ResponseEventAssetEvents>>(`${this.configuration.basePath}/events/all/${encodeURIComponent(String(assetId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param assetId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public eventControllerFindUnresolved(assetId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<ResponseEventAssetEvents>>;\n    public eventControllerFindUnresolved(assetId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<ResponseEventAssetEvents>>>;\n    public eventControllerFindUnresolved(assetId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<ResponseEventAssetEvents>>>;\n    public eventControllerFindUnresolved(assetId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (assetId === null || assetId === undefined) {\n            throw new Error('Required parameter assetId was null or undefined when calling eventControllerFindUnresolved.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<ResponseEventAssetEvents>>(`${this.configuration.basePath}/events/unresolved/${encodeURIComponent(String(assetId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public eventControllerProcessSubscriptions(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public eventControllerProcessSubscriptions(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public eventControllerProcessSubscriptions(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public eventControllerProcessSubscriptions(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<any>(`${this.configuration.basePath}/event/process`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public eventControllerUpdateById(id: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public eventControllerUpdateById(id: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public eventControllerUpdateById(id: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public eventControllerUpdateById(id: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling eventControllerUpdateById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.patch<any>(`${this.configuration.basePath}/event/resolve/${encodeURIComponent(String(id))}`,\n            null,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { InlineResponse200 } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class PingControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Ping the server\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public pingControllerPing(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<InlineResponse200>;\n    public pingControllerPing(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<InlineResponse200>>;\n    public pingControllerPing(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<InlineResponse200>>;\n    public pingControllerPing(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<InlineResponse200>(`${this.configuration.basePath}/ping`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SchedulerControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * @param attempt \n     * @param serverKey \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public schedulerControllerProcessEvents(attempt: number, serverKey: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public schedulerControllerProcessEvents(attempt: number, serverKey: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public schedulerControllerProcessEvents(attempt: number, serverKey: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public schedulerControllerProcessEvents(attempt: number, serverKey: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (attempt === null || attempt === undefined) {\n            throw new Error('Required parameter attempt was null or undefined when calling schedulerControllerProcessEvents.');\n        }\n        if (serverKey === null || serverKey === undefined) {\n            throw new Error('Required parameter serverKey was null or undefined when calling schedulerControllerProcessEvents.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<any>(`${this.configuration.basePath}/scheduler/process/events/${encodeURIComponent(String(attempt))}/${encodeURIComponent(String(serverKey))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param serverKey \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public schedulerControllerProcessFtpRejected(serverKey: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public schedulerControllerProcessFtpRejected(serverKey: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public schedulerControllerProcessFtpRejected(serverKey: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public schedulerControllerProcessFtpRejected(serverKey: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (serverKey === null || serverKey === undefined) {\n            throw new Error('Required parameter serverKey was null or undefined when calling schedulerControllerProcessFtpRejected.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<any>(`${this.configuration.basePath}/scheduler/process/ftp-rejected/${encodeURIComponent(String(serverKey))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { InlineObject } from '../model/models';\nimport { InlineResponse2001 } from '../model/models';\nimport { InlineResponse2002 } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class SolarMonitorControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public solarMonitorControllerFindLastTs(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<InlineResponse2002>;\n    public solarMonitorControllerFindLastTs(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<InlineResponse2002>>;\n    public solarMonitorControllerFindLastTs(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<InlineResponse2002>>;\n    public solarMonitorControllerFindLastTs(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<InlineResponse2002>(`${this.configuration.basePath}/solar-monitor/weather`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param inlineObject \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public solarMonitorControllerFindLastTsInv(inlineObject?: InlineObject, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<InlineResponse2001>;\n    public solarMonitorControllerFindLastTsInv(inlineObject?: InlineObject, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<InlineResponse2001>>;\n    public solarMonitorControllerFindLastTsInv(inlineObject?: InlineObject, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<InlineResponse2001>>;\n    public solarMonitorControllerFindLastTsInv(inlineObject?: InlineObject, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<InlineResponse2001>(`${this.configuration.basePath}/solar-monitor/inverters`,\n            inlineObject,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { Token } from '../model/models';\nimport { User } from '../model/models';\nimport { UserExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode } from '../model/models';\nimport { UserExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode } from '../model/models';\nimport { UserExcludingPasswdEmailRolesIsVirtualSubscriptionReferenceCode } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * Used for registering a new &lt;b&gt;User&lt;/b&gt;.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#tocsuser\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserModel&lt;/a&gt;&lt;/i&gt;\n     * @param referenceCode \n     * @param userExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userControllerCreate(referenceCode: string, userExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode?: UserExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<User>;\n    public userControllerCreate(referenceCode: string, userExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode?: UserExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<User>>;\n    public userControllerCreate(referenceCode: string, userExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode?: UserExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<User>>;\n    public userControllerCreate(referenceCode: string, userExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode?: UserExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (referenceCode === null || referenceCode === undefined) {\n            throw new Error('Required parameter referenceCode was null or undefined when calling userControllerCreate.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<User>(`${this.configuration.basePath}/user/register/${encodeURIComponent(String(referenceCode))}`,\n            userExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Used for registering a new &lt;b&gt;Virtual User&lt;/b&gt; by a &lt;b&gt;User&lt;/b&gt;, identified by the provided &lt;i&gt;token.&lt;/i&gt;&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#tocsuser\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserModel&lt;/a&gt;&lt;/i&gt;\n     * @param userExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userControllerCreateVirtual(userExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode?: UserExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<User>;\n    public userControllerCreateVirtual(userExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode?: UserExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<User>>;\n    public userControllerCreateVirtual(userExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode?: UserExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<User>>;\n    public userControllerCreateVirtual(userExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode?: UserExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<User>(`${this.configuration.basePath}/user/register/virtual`,\n            userExcludingIdUsernameIsVirtualRolesSubscriptionReferenceCode,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Deletes Virtual User by Id\n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userControllerDeleteVirtualUserById(id: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public userControllerDeleteVirtualUserById(id: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public userControllerDeleteVirtualUserById(id: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public userControllerDeleteVirtualUserById(id: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling userControllerDeleteVirtualUserById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/users/virtualUser/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Returns users under administrator account\n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userControllerGetVirtualUsers(observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<UserExcludingPasswdEmailRolesIsVirtualSubscriptionReferenceCode>>;\n    public userControllerGetVirtualUsers(observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<UserExcludingPasswdEmailRolesIsVirtualSubscriptionReferenceCode>>>;\n    public userControllerGetVirtualUsers(observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<UserExcludingPasswdEmailRolesIsVirtualSubscriptionReferenceCode>>>;\n    public userControllerGetVirtualUsers(observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<UserExcludingPasswdEmailRolesIsVirtualSubscriptionReferenceCode>>(`${this.configuration.basePath}/user/getVirtualUsers`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * Used for &lt;b&gt;User&lt;/b&gt; and &lt;b&gt;Virtual User&lt;/b&gt; login. Exchanges &lt;i&gt;username/password&lt;/i&gt; with an authorization &lt;i&gt;token&lt;/i&gt;. Please enter the email provided durring registration in the username field.&lt;br&gt;&lt;br&gt;&lt;i&gt;&lt;b&gt;References:&lt;/b&gt; &lt;a href&#x3D;\\&quot;/documentation.html#tocsuser\\&quot; target&#x3D;\\&quot;_blank\\&quot;&gt;UserModel&lt;/a&gt;&lt;/i&gt;\n     * @param userExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userControllerLogin(userExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode?: UserExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Token>;\n    public userControllerLogin(userExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode?: UserExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Token>>;\n    public userControllerLogin(userExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode?: UserExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Token>>;\n    public userControllerLogin(userExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode?: UserExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Token>(`${this.configuration.basePath}/user/login`,\n            userExcludingIdEmailIsVirtualRolesSubscriptionReferenceCode,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { CodeVerificationRequest } from '../model/models';\nimport { Subscription } from '../model/models';\nimport { UserSubscription } from '../model/models';\nimport { UserSubscriptionWithRelations } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class UserSubscriptionControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * @param body \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userSubscriptionControllerCreate(body?: object, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public userSubscriptionControllerCreate(body?: object, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public userSubscriptionControllerCreate(body?: object, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public userSubscriptionControllerCreate(body?: object, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<any>(`${this.configuration.basePath}/user-subscriptions/paypal/callback`,\n            body,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param subscriptionId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userSubscriptionControllerCreateUserSubscriptionBySubId(subscriptionId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<UserSubscription>;\n    public userSubscriptionControllerCreateUserSubscriptionBySubId(subscriptionId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<UserSubscription>>;\n    public userSubscriptionControllerCreateUserSubscriptionBySubId(subscriptionId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<UserSubscription>>;\n    public userSubscriptionControllerCreateUserSubscriptionBySubId(subscriptionId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (subscriptionId === null || subscriptionId === undefined) {\n            throw new Error('Required parameter subscriptionId was null or undefined when calling userSubscriptionControllerCreateUserSubscriptionBySubId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<UserSubscription>(`${this.configuration.basePath}/user-subscription/get-new/${encodeURIComponent(String(subscriptionId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param product \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userSubscriptionControllerFindSubscriptionsByCategory(product: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<Subscription>>;\n    public userSubscriptionControllerFindSubscriptionsByCategory(product: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<Subscription>>>;\n    public userSubscriptionControllerFindSubscriptionsByCategory(product: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<Subscription>>>;\n    public userSubscriptionControllerFindSubscriptionsByCategory(product: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (product === null || product === undefined) {\n            throw new Error('Required parameter product was null or undefined when calling userSubscriptionControllerFindSubscriptionsByCategory.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<Subscription>>(`${this.configuration.basePath}/user-subscription/subscriptions/${encodeURIComponent(String(product))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param referenceCode \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userSubscriptionControllerGetByRefferenceCode(referenceCode: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<UserSubscriptionWithRelations>;\n    public userSubscriptionControllerGetByRefferenceCode(referenceCode: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<UserSubscriptionWithRelations>>;\n    public userSubscriptionControllerGetByRefferenceCode(referenceCode: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<UserSubscriptionWithRelations>>;\n    public userSubscriptionControllerGetByRefferenceCode(referenceCode: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (referenceCode === null || referenceCode === undefined) {\n            throw new Error('Required parameter referenceCode was null or undefined when calling userSubscriptionControllerGetByRefferenceCode.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<UserSubscriptionWithRelations>(`${this.configuration.basePath}/user-subscription/get-by-reference-code/${encodeURIComponent(String(referenceCode))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param referenceCode \n     * @param externalId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userSubscriptionControllerUpdateExternal(referenceCode: string, externalId: string, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public userSubscriptionControllerUpdateExternal(referenceCode: string, externalId: string, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public userSubscriptionControllerUpdateExternal(referenceCode: string, externalId: string, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public userSubscriptionControllerUpdateExternal(referenceCode: string, externalId: string, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (referenceCode === null || referenceCode === undefined) {\n            throw new Error('Required parameter referenceCode was null or undefined when calling userSubscriptionControllerUpdateExternal.');\n        }\n        if (externalId === null || externalId === undefined) {\n            throw new Error('Required parameter externalId was null or undefined when calling userSubscriptionControllerUpdateExternal.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<any>(`${this.configuration.basePath}/user-subscription/update-external/${encodeURIComponent(String(referenceCode))}/${encodeURIComponent(String(externalId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param codeVerificationRequest \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public userSubscriptionControllerVerifyCode(codeVerificationRequest?: CodeVerificationRequest, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<UserSubscription>;\n    public userSubscriptionControllerVerifyCode(codeVerificationRequest?: CodeVerificationRequest, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<UserSubscription>>;\n    public userSubscriptionControllerVerifyCode(codeVerificationRequest?: CodeVerificationRequest, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<UserSubscription>>;\n    public userSubscriptionControllerVerifyCode(codeVerificationRequest?: CodeVerificationRequest, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<UserSubscription>(`${this.configuration.basePath}/user-subscriptions/verify-reference-code`,\n            codeVerificationRequest,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","/**\n * PV Auto Scout\n * Solar Monitor module API\n *\n * The version of the OpenAPI document: 3.0.2\n * Contact: khoury@k-ren.gr\n *\n * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).\n * https://openapi-generator.tech\n * Do not edit the class manually.\n */\n/* tslint:disable:no-unused-variable member-ordering */\n\nimport { Inject, Injectable, Optional }                      from '@angular/core';\nimport { HttpClient, HttpHeaders, HttpParams,\n         HttpResponse, HttpEvent, HttpParameterCodec }       from '@angular/common/http';\nimport { CustomHttpParameterCodec }                          from '../encoder';\nimport { Observable }                                        from 'rxjs';\n\nimport { RequestVirtualAccessRightExcludingAssetGroupId } from '../model/models';\nimport { RequestVirtualAccessRightExcludingAssetId } from '../model/models';\nimport { VirtualAccess } from '../model/models';\n\nimport { BASE_PATH, COLLECTION_FORMATS }                     from '../variables';\nimport { Configuration }                                     from '../configuration';\n\n\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class VirtualAccessControllerService {\n\n    protected basePath = 'https://dev.k-ren.gr:3000/api';\n    public defaultHeaders = new HttpHeaders();\n    public configuration = new Configuration();\n    public encoder: HttpParameterCodec;\n\n    constructor(protected httpClient: HttpClient, @Optional()@Inject(BASE_PATH) basePath: string, @Optional() configuration: Configuration) {\n        if (configuration) {\n            this.configuration = configuration;\n        }\n        if (typeof this.configuration.basePath !== 'string') {\n            if (typeof basePath !== 'string') {\n                basePath = this.basePath;\n            }\n            this.configuration.basePath = basePath;\n        }\n        this.encoder = this.configuration.encoder || new CustomHttpParameterCodec();\n    }\n\n\n    private addToHttpParams(httpParams: HttpParams, value: any, key?: string): HttpParams {\n        if (typeof value === \"object\" && value instanceof Date === false) {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value);\n        } else {\n            httpParams = this.addToHttpParamsRecursive(httpParams, value, key);\n        }\n        return httpParams;\n    }\n\n    private addToHttpParamsRecursive(httpParams: HttpParams, value?: any, key?: string): HttpParams {\n        if (value == null) {\n            return httpParams;\n        }\n\n        if (typeof value === \"object\") {\n            if (Array.isArray(value)) {\n                (value as any[]).forEach( elem => httpParams = this.addToHttpParamsRecursive(httpParams, elem, key));\n            } else if (value instanceof Date) {\n                if (key != null) {\n                    httpParams = httpParams.append(key,\n                        (value as Date).toISOString().substr(0, 10));\n                } else {\n                   throw Error(\"key may not be null if value is Date\");\n                }\n            } else {\n                Object.keys(value).forEach( k => httpParams = this.addToHttpParamsRecursive(\n                    httpParams, value[k], key != null ? `${key}.${k}` : k));\n            }\n        } else if (key != null) {\n            httpParams = httpParams.append(key, value);\n        } else {\n            throw Error(\"key may not be null if value is not object or array\");\n        }\n        return httpParams;\n    }\n\n    /**\n     * @param requestVirtualAccessRightExcludingAssetId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public virtualAccessControllerCreateAccessByGroup(requestVirtualAccessRightExcludingAssetId?: RequestVirtualAccessRightExcludingAssetId, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<VirtualAccess>>;\n    public virtualAccessControllerCreateAccessByGroup(requestVirtualAccessRightExcludingAssetId?: RequestVirtualAccessRightExcludingAssetId, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<VirtualAccess>>>;\n    public virtualAccessControllerCreateAccessByGroup(requestVirtualAccessRightExcludingAssetId?: RequestVirtualAccessRightExcludingAssetId, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<VirtualAccess>>>;\n    public virtualAccessControllerCreateAccessByGroup(requestVirtualAccessRightExcludingAssetId?: RequestVirtualAccessRightExcludingAssetId, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<Array<VirtualAccess>>(`${this.configuration.basePath}/virtual-access/by-asset-group`,\n            requestVirtualAccessRightExcludingAssetId,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param requestVirtualAccessRightExcludingAssetGroupId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public virtualAccessControllerCreateAccessByRight(requestVirtualAccessRightExcludingAssetGroupId?: RequestVirtualAccessRightExcludingAssetGroupId, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<VirtualAccess>;\n    public virtualAccessControllerCreateAccessByRight(requestVirtualAccessRightExcludingAssetGroupId?: RequestVirtualAccessRightExcludingAssetGroupId, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<VirtualAccess>>;\n    public virtualAccessControllerCreateAccessByRight(requestVirtualAccessRightExcludingAssetGroupId?: RequestVirtualAccessRightExcludingAssetGroupId, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<VirtualAccess>>;\n    public virtualAccessControllerCreateAccessByRight(requestVirtualAccessRightExcludingAssetGroupId?: RequestVirtualAccessRightExcludingAssetGroupId, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        // to determine the Content-Type header\n        const consumes: string[] = [\n            'application/json'\n        ];\n        const httpContentTypeSelected: string | undefined = this.configuration.selectHeaderContentType(consumes);\n        if (httpContentTypeSelected !== undefined) {\n            headers = headers.set('Content-Type', httpContentTypeSelected);\n        }\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.post<VirtualAccess>(`${this.configuration.basePath}/virtual-access/by-asset`,\n            requestVirtualAccessRightExcludingAssetGroupId,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param id \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public virtualAccessControllerDeleteById(id: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<any>;\n    public virtualAccessControllerDeleteById(id: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpResponse<any>>;\n    public virtualAccessControllerDeleteById(id: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: undefined}): Observable<HttpEvent<any>>;\n    public virtualAccessControllerDeleteById(id: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: undefined}): Observable<any> {\n        if (id === null || id === undefined) {\n            throw new Error('Required parameter id was null or undefined when calling virtualAccessControllerDeleteById.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.delete<any>(`${this.configuration.basePath}/virtual-access/${encodeURIComponent(String(id))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n    /**\n     * @param userId \n     * @param observe set whether or not to return the data Observable as the body, response or events. defaults to returning the body.\n     * @param reportProgress flag to report request and response progress.\n     */\n    public virtualAccessControllerFindByUserId(userId: number, observe?: 'body', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<Array<VirtualAccess>>;\n    public virtualAccessControllerFindByUserId(userId: number, observe?: 'response', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpResponse<Array<VirtualAccess>>>;\n    public virtualAccessControllerFindByUserId(userId: number, observe?: 'events', reportProgress?: boolean, options?: {httpHeaderAccept?: 'application/json'}): Observable<HttpEvent<Array<VirtualAccess>>>;\n    public virtualAccessControllerFindByUserId(userId: number, observe: any = 'body', reportProgress: boolean = false, options?: {httpHeaderAccept?: 'application/json'}): Observable<any> {\n        if (userId === null || userId === undefined) {\n            throw new Error('Required parameter userId was null or undefined when calling virtualAccessControllerFindByUserId.');\n        }\n\n        let headers = this.defaultHeaders;\n\n        let credential: string | undefined;\n        // authentication (bearerAuth) required\n        credential = this.configuration.lookupCredential('bearerAuth');\n        if (credential) {\n            headers = headers.set('Authorization', 'Bearer ' + credential);\n        }\n\n        let httpHeaderAcceptSelected: string | undefined = options && options.httpHeaderAccept;\n        if (httpHeaderAcceptSelected === undefined) {\n            // to determine the Accept header\n            const httpHeaderAccepts: string[] = [\n                'application/json'\n            ];\n            httpHeaderAcceptSelected = this.configuration.selectHeaderAccept(httpHeaderAccepts);\n        }\n        if (httpHeaderAcceptSelected !== undefined) {\n            headers = headers.set('Accept', httpHeaderAcceptSelected);\n        }\n\n\n        let responseType: 'text' | 'json' = 'json';\n        if(httpHeaderAcceptSelected && httpHeaderAcceptSelected.startsWith('text')) {\n            responseType = 'text';\n        }\n\n        return this.httpClient.get<Array<VirtualAccess>>(`${this.configuration.basePath}/virtual-access/by-userId/${encodeURIComponent(String(userId))}`,\n            {\n                responseType: <any>responseType,\n                withCredentials: this.configuration.withCredentials,\n                headers: headers,\n                observe: observe,\n                reportProgress: reportProgress\n            }\n        );\n    }\n\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\nexport interface ConfigurationParameters {\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials?: {[ key: string ]: string | (() => string | undefined)};\n}\n\nexport class Configuration {\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    apiKeys?: {[ key: string ]: string};\n    username?: string;\n    password?: string;\n    /**\n     *  @deprecated Since 5.0. Use credentials instead\n     */\n    accessToken?: string | (() => string);\n    basePath?: string;\n    withCredentials?: boolean;\n    encoder?: HttpParameterCodec;\n    /**\n     * The keys are the names in the securitySchemes section of the OpenAPI\n     * document. They should map to the value used for authentication\n     * minus any standard prefixes such as 'Basic' or 'Bearer'.\n     */\n    credentials: {[ key: string ]: string | (() => string | undefined)};\n\n    constructor(configurationParameters: ConfigurationParameters = {}) {\n        this.apiKeys = configurationParameters.apiKeys;\n        this.username = configurationParameters.username;\n        this.password = configurationParameters.password;\n        this.accessToken = configurationParameters.accessToken;\n        this.basePath = configurationParameters.basePath;\n        this.withCredentials = configurationParameters.withCredentials;\n        this.encoder = configurationParameters.encoder;\n        if (configurationParameters.credentials) {\n            this.credentials = configurationParameters.credentials;\n        }\n        else {\n            this.credentials = {};\n        }\n\n        // init default bearerAuth credential\n        if (!this.credentials['bearerAuth']) {\n            this.credentials['bearerAuth'] = () => {\n                return typeof this.accessToken === 'function'\n                    ? this.accessToken()\n                    : this.accessToken;\n            };\n        }\n    }\n\n    /**\n     * Select the correct content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param contentTypes - the array of content types that are available for selection\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderContentType (contentTypes: string[]): string | undefined {\n        if (contentTypes.length === 0) {\n            return undefined;\n        }\n\n        const type = contentTypes.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return contentTypes[0];\n        }\n        return type;\n    }\n\n    /**\n     * Select the correct accept content-type to use for a request.\n     * Uses {@link Configuration#isJsonMime} to determine the correct accept content-type.\n     * If no content type is found return the first found type if the contentTypes is not empty\n     * @param accepts - the array of content types that are available for selection.\n     * @returns the selected content-type or <code>undefined</code> if no selection could be made.\n     */\n    public selectHeaderAccept(accepts: string[]): string | undefined {\n        if (accepts.length === 0) {\n            return undefined;\n        }\n\n        const type = accepts.find((x: string) => this.isJsonMime(x));\n        if (type === undefined) {\n            return accepts[0];\n        }\n        return type;\n    }\n\n    /**\n     * Check if the given MIME is a JSON MIME.\n     * JSON MIME examples:\n     *   application/json\n     *   application/json; charset=UTF8\n     *   APPLICATION/JSON\n     *   application/vnd.company+json\n     * @param mime - MIME (Multipurpose Internet Mail Extensions)\n     * @return True if the given MIME is JSON, false otherwise.\n     */\n    public isJsonMime(mime: string): boolean {\n        const jsonMime: RegExp = new RegExp('^(application\\/json|[^;/ \\t]+\\/[^;/ \\t]+[+]json)[ \\t]*(;.*)?$', 'i');\n        return mime !== null && (jsonMime.test(mime) || mime.toLowerCase() === 'application/json-patch+json');\n    }\n\n    public lookupCredential(key: string): string | undefined {\n        const value = this.credentials[key];\n        return typeof value === 'function'\n            ? value()\n            : value;\n    }\n}\n","import { HttpParameterCodec } from '@angular/common/http';\n\n/**\n * Custom HttpParameterCodec\n * Workaround for https://github.com/angular/angular/issues/18261\n */\nexport class CustomHttpParameterCodec implements HttpParameterCodec {\n    encodeKey(k: string): string {\n        return encodeURIComponent(k);\n    }\n    encodeValue(v: string): string {\n        return encodeURIComponent(v);\n    }\n    decodeKey(k: string): string {\n        return decodeURIComponent(k);\n    }\n    decodeValue(v: string): string {\n        return decodeURIComponent(v);\n    }\n}\n","export * from './api/api';\nexport * from './model/models';\nexport * from './variables';\nexport * from './configuration';\nexport * from './api.module';","import { InjectionToken } from '@angular/core';\n\nexport const BASE_PATH = new InjectionToken<string>('basePath');\nexport const COLLECTION_FORMATS = {\n    'csv': ',',\n    'tsv': '   ',\n    'ssv': ' ',\n    'pipes': '|'\n}\n","import { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n  })\n\n  export class DataService {\n    $theDate = new EventEmitter();\n    $dateRange = new EventEmitter();\n\n    $fromDate = new EventEmitter();\n    $toDate = new EventEmitter();\n    $clicked = new EventEmitter();\n\n    constructor() { }\n\n    changeDate(dateArray: Date) {\n        this.$theDate.emit(dateArray);\n    }\n\n    click(clicked: boolean) {\n      this.$clicked.emit(clicked);\n    }\n\n    fromDate(fromDate: Date) {\n      this.$fromDate.emit(fromDate);\n    }\n\n    toDate(toDate: Date) {\n      this.$toDate.emit(toDate);\n    }\n\n    // fromToDate(fromDate: Date, toDate: Date) {\n    //   this.$dateRange.emit([fromDate, toDate, this.clicked]);\n    // }\n  }","import { Injectable, EventEmitter } from '@angular/core';\n\n@Injectable({\n    providedIn: 'root'\n  })\n\n  export class LocationService {\n    $currentLatitude = new EventEmitter();\n    $currentLongtitude = new EventEmitter();\n    $homeLatitude = new EventEmitter();\n    $homeLongtitude = new EventEmitter();\n\n    constructor() { }\n\n    coordinates(currentLatitude: string, currentLongtitude: string, homeLatitude: string, homeLongtitude: string) {\n        this.$currentLatitude.emit(currentLatitude);\n        this.$currentLongtitude.emit(currentLongtitude);\n        this.$homeLatitude.emit(homeLatitude);\n        this.$homeLongtitude.emit(homeLongtitude);\n    }\n }","import { HttpClient, HttpHeaders } from '@angular/common/http';\nimport { Injectable } from '@angular/core';\nimport { Observable } from 'rxjs';\nimport { DroneStatus } from '../models/droneStatus';\nimport { HangarStatus } from '../models/hangarStatus';\nimport { Mission } from '../models/mission';\nimport { MissionParam } from '../models/missionParam';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThessalyAPIService {\n\n  private basePath = 'http://10.96.12.115:2000/controller';\n  private request = {};\n  constructor(private http: HttpClient ) { }\n\n  public controllerHangarGetState(): Observable<HangarStatus>;\n  public controllerHangarGetState(): Observable<any> {\n    return this.http.get(this.basePath + '/hangar');\n  }\n\n  public controllerDrone(): Observable<DroneStatus>;\n  public controllerDrone():Observable<any> {\n    return this.http.get(this.basePath + '/drone');\n  }\n\n  public controllerGetMission(queryParam: string): Observable<Mission>;\n  public controllerGetMission(queryParam: string): Observable<any> {\n    return this.http.get(this.basePath + '/missions/' + queryParam);\n  }\n\n  public controllerPostMission(queryParam: string, requestBody: MissionParam): Observable<Mission>;\n  public controllerPostMission(queryParam: string, requestBody: MissionParam): Observable<any> {\n    return this.http.post(this.basePath + '/missions/' + queryParam, requestBody);\n  }\n\n  public controllerGetImage(queryParam: string, requestBody: any): Observable<Mission>;\n  public controllerGetImage(queryParam: string, requestBody: any): Observable<any> {\n    return this.http.get(this.basePath + '/images/' + queryParam,\n    {\n      headers : new HttpHeaders({\"Content-Type\": \"application/json\"}),\n      params: requestBody,\n      observe: 'body'\n    });\n  }\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\r\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\r\n// The list of file replacements can be found in `angular.json`.\r\n\r\nexport const environment = {\r\n  production: false\r\n};\r\n\r\n/*\r\n * For easier debugging in development mode, you can import the following file\r\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\r\n *\r\n * This import should be commented out in production mode because it will have a negative impact\r\n * on performance if an error is thrown.\r\n */\r\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\r\n","import 'hammerjs';\r\nimport { enableProdMode } from '@angular/core';\r\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\r\n\r\nimport { AppModule } from './app/app.module';\r\nimport { environment } from './environments/environment';\r\n\r\nif (environment.production) {\r\n  enableProdMode();\r\n}\r\n\r\nplatformBrowserDynamic().bootstrapModule(AppModule)\r\n  .catch(err => console.error(err));\r\n"],"sourceRoot":"webpack:///"}